<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="author" content="Kirill Fakhroutdinov" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta name="distribution" content="Global" />
<link rel="stylesheet" type="text/css" media="only screen and (min-width: 768px)" href="https://www.uml-diagrams.org/css/style_1024.css" />
<link rel="stylesheet" type="text/css" media="only screen and (max-width: 767px)" href="https://www.uml-diagrams.org/css/style_767_160929.css" />
<link rel="stylesheet" type="text/css" media="only print" href="https://www.uml-diagrams.org/css/style_print_160717.css" />
<link rel="shortcut icon" href="https://www.uml-diagrams.org/favicon.ico" />
<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-15407117-3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-15407117-3');
</script>
<!-- end google -->
<script>
/*
 Mobile menu - when the user clicks on the button, 
 toggle between hiding and showing the dropdown
*/
var menuVisible = false;

function mobile_menu()
{
  if (menuVisible)
  {
	document.getElementById("navigation_btn").innerHTML = "Menu \u25BA";
    document.getElementById("navigation_dsk").style.display = "none";
    menuVisible = false;
  }
  else
  {
	document.getElementById("navigation_btn").innerHTML = "Menu \u25BC";
    document.getElementById("navigation_dsk").style.display = "block";
    document.getElementById("navigation_list").style.display = "block";
    menuVisible = true;
  }
}
</script>
<meta name="description" content="Java 5 to 9 Thread states and life cycle UML protocol state machine diagram example - new, runnable, timed waiting, waiting, blocked, terminated." />
<meta name="keywords" content="UML, UML 2, UML 2.5, example, Java, thread, states." />
<meta name="thumbnail" content="https://www.uml-diagrams.org/thumbnails/java-thread-uml-state-machine-diagram-example.png" />
<title>Java Thread states and life cycle UML protocol state machine diagram example - new, runnable, timed waiting, waiting, blocked, terminated.</title>
<style>
@media only screen and (max-width: 767px)
{
img { max-width:100%; height:auto; display:block }
}
</style>
</head>
<body>
<header>

<div>
<div class="adsense">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Responsive Ad -->
<ins class="adsbygoogle responsive_ad"
     style="display:block"
     data-ad-client="ca-pub-5002105358288202"
     data-ad-slot="7631821835"
     data-ad-format="horizontal" >
</ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

<div class="hosting-box">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-5002105358288202";
/* Half Banner 234 x 60 */
google_ad_slot = "0061943500";
google_ad_width = 234;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>

<div class="search-box">
<form action="https://www.uml-diagrams.org/search-results.html" id="cse-search-box">
 <div>
  <input type="hidden" name="cx" value="partner-pub-5002105358288202:d0i84p-o4pn" />
  <input type="hidden" name="cof" value="FORID:10" />
  <input type="hidden" name="ie" value="UTF-8" />
  <input type="text" name="q" size="25" />
  <input type="image" class="search-box-image" src="https://www.uml-diagrams.org/images/search-button.png" alt="Search"  />    
 </div>    
<script type="text/javascript" src="https://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>
</form>
</div>

<div style="clear:both;">
</div>

</div><div class="mainmenu">
<button id="navigation_btn" class="box-shadow-menu" onclick="mobile_menu()">Menu&nbsp;&#9658;</button>
<nav id="navigation_dsk" >
<ul id="navigation_list" class="navig_items">
<li>
<a href="https://www.uml-diagrams.org/" title="UML graphical notation overview, examples, and reference." >UML diagrams</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/state-machine-diagrams.html"
 title="UML state machine diagrams - overview of graphical notation"  >State machine diagrams</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/state-machine-diagrams-examples.html"
 title="Examples of UML state machine diagrams"  >State machine examples</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/examples/water-phase-uml-state-machine-diagram-example.html"
 title="Water phases as UML state machine diagram example"  >Water phase diagram</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/bank-atm-uml-state-machine-diagram-example.html?context=stm-examples"
 title="Bank ATM states as UML state machine diagram example"  >Bank ATM states</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/examples/online-shopping-user-account-state-diagram-example.html?context=stm-examples"
 title="Online shopping user account UML state machine diagram example"  >User account state machine</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/java-thread-uml-state-machine-diagram-example.html?context=stm-examples"
 title="Java Thread states and life cycle as UML state machine diagram example" class="active-nav" >Java thread states</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/java-ejb-state-machine-diagram-example.html?context=stm-examples"
 title="Java EJB life cycle of a session object UML protocol state machine diagram example."  >Java EJB session object states</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/dicom-hosted-application-uml-state-machine-diagram-example.html?context=stm-examples"
 title="DICOM hosted application life cycle UML protocol state machine diagram example."  >DICOM hosted application life cycle</a>
</li>
<li>
<a href="https://www.uml-diagrams.org/index-references.html" title="Index of UML Elements">UML Index</a>
</li>
</ul> 
</nav>
</div>
</header>
<main>
<article id="mainContent">
<h1 class="subtitle">Java Thread States and Life Cycle</h1>
<h2 class="subtitle">UML Protocol State Machine Diagram Example</h2>

<p>
This is an example of UML 
<a href="https://www.uml-diagrams.org/protocol-state-machine-diagrams.html#protocol-state-machine" class="ref-link">protocol state machine</a> diagram
 showing <strong>Thread states</strong> and <strong>Thread life cycle</strong> for the Thread class in <strong>Java&trade;</strong>.
 A thread is a lightweight process, the smallest unit of scheduled execution.
 Thread state is Java Virtual Machine (JVM) state reported by JVM to a Java program, it does not reflect any operating system (OS) thread state.
 At any given point in time an instance of the Thread class in <strong>Java 5</strong> to <strong>Java 9</strong>
 could be in one of the following Thread states:
</p>
<ul>
<li><strong>New</strong>,</li>
<li><strong>Runnable</strong>,</li>
<li><strong>Timed waiting</strong>,</li>
<li><strong>Waiting</strong>,</li>
<li><strong>Blocked</strong>,</li>
<li><strong>Terminated</strong>.</li>
</ul>

<p>
Now obsolete <strong>Java 2</strong> had different set of states:
 <strong>Ready</strong>, <strong>Running</strong>, <strong>Suspended</strong>, <strong>Sleeping</strong>, <strong>Blocked</strong>, <strong>Monitor states</strong>.
 The UML diagram below shows two of these legacy states - <strong>Ready</strong> and <strong>Running</strong> - as part of <strong>Runnable</strong> state.
</p>

<p>

</p>

<div class="figure-left-20" itemscope itemtype="http://schema.org/ImageObject">
<img src="https://www.uml-diagrams.org/examples/state-machine-example-java-6-thread-states.png" width="960" height="757"  
 alt="Protocol state machine example - Thread states and life cycle in Java." 
 title="Protocol state machine example - Thread states and life cycle in Java." itemprop="contentURL" />
<p class="figure-text" itemprop="description">
Protocol state machine example - Thread states and life cycle in Java.
</p>
<meta itemprop="author" content="Kirill Fakhroutdinov" />
<meta itemprop="copyrightHolder" content="uml-diagrams.org" />
<meta itemprop="representativeOfPage" content="true" />
<meta itemprop="datePublished" content="2011-01-02" />
<meta itemprop="dateModified" content="2017-04-07" />
</div>

<p>
<strong>New</strong> is the thread state for a thread which was created but has not yet started.
</p>

<p>
A thread in the <strong>Runnable</strong> state is executing from the JVM's point of view
 but in fact it may be waiting for some resources from the OS such as processor.
 This state could be considered as a composite state with two substates. 
 When a thread transitions to the Runnable state, the thread first goes into the <strong>Ready</strong> substate.
 Thread scheduling decides when the thread could actually start <strong>Running</strong>.
 Thread.yield() is explicit recommendation to thread scheduler to pause the currently executing thread to allow some other thread to execute. 
 Thread is <strong>alive</strong> if it has been started and has not yet died.
</p>

<p>
<strong>Timed waiting</strong> is a thread state for a thread waiting with a specified waiting time.
 A thread moves to the timed waiting state due to calling one of the following methods with a specified (positive) waiting time:
</p>
<ul>
<li>Thread.sleep(sleeptime)</li>
<li>Object.wait(timeout)</li>
<li>Thread.join(timeout)</li>
<li>LockSupport.parkNanos(timeout)</li>
<li>LockSupport.parkUntil(timeout)</li>
</ul>

<p>
A thread moves to the <strong>Waiting</strong> state after calling one of the following methods without timeout: 
</p>
<ul>
<li>Object.wait()</li>
<li>Thread.join()</li>
<li>LockSupport.park()</li>
</ul>

<p>
Note, that a thread in the waiting state is waiting indefinitely for another thread
 to provide something which is needed by the waiting thread.
 Once it is done, that other thread could call Object.notify() or Object.notifyAll() on the object the threads share.
 A thread that has called Thread.join() is waiting for a specified thread to terminate. 
 It means that waiting state could be made a composite state with states corresponding to these specific conditions.
</p> 

<p>
Thread is in the <strong>Blocked</strong> state while waiting for the monitor lock to enter
 a synchronized block or method or to reenter a synchronized block or method after calling Object.wait(). 
</p>

<p>
A synchronized statement or method acquires a mutual-exclusion lock on behalf of the executing thread,
 executes a block or method, and then releases the lock.
 While the executing thread owns the lock, no other thread may acquire the lock and is blocked waiting for the lock.
</p>

<p>
After thread has completed execution of run() method, it is moved into <strong>Terminated</strong> state. 
</p>

<br />
</article>
</main>
<footer>
<script type="text/javascript" src="https://www.uml-diagrams.org/orphus/orphus.js"></script>
<p class="footer-author">
Noticed a spelling error? Select the text using the mouse and press Ctrl + Enter.
</p>
<div id="footer">

<span id="fb-root"></span>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.4";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));
</script>

<span class="fb-like" data-href="http://www.facebook.com/pages/uml-diagramsorg/159692074079895" 
 data-layout="button_count" data-action="like" data-show-faces="false" data-share="true"></span>

&nbsp;

<a href="http://orphus.ru" id="orphus" target="_blank">
<img alt="Orphus system" src="/orphus/orphus.png" border="0" width="52" height="32" /></a>

&nbsp;

<a href="https://www.ipage.com/green-certified/"
 onClick="MyWindow=window.open('http://www.ipage.com/green-certified/uml-diagrams.org','greenCertified','toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=550,height=700,left=50,top=50'); return false;">
<img src="https://www.ipage.com/green-certified/hosting-badge-1.png" border="0" alt="Powered by 100% wind energy" title="Powered by 100% wind energy"></a>

&nbsp;

<img src="//shield.sitelock.com/shield/www.uml-diagrams.org" id="sl_shield_image" style="border-style:none;cursor:pointer;" />
<script id="sl_shield" src="//shield.sitelock.com/sitelock.js" language="javascript"></script>

&nbsp;

by Kirill Fakhroutdinov.

<p>&nbsp;</p>

<p>
This document describes UML versions up to
 <strong><a href="https://www.uml-diagrams.org/references.html#ref-uml-25" class="external-ref" title="UML 2.5 Specification">UML 2.5</a></strong>
 and is based on the corresponding 
 <strong>OMG&trade; Unified Modeling Language&trade; (OMG UML&reg;)</strong> specifications.
 UML diagrams were created in <strong>Microsoft&reg; Visio&reg;</strong> 2007-2016 using 
 <strong><a href="http://softwarestencils.com/uml/index.html" class="external-ref" title="Visio Stencil and Template for UML 2.5">UML 2.x Visio Stencils</a></strong>.
</p>
<p>
You can send your comments and suggestions to <a href="mailto:webmaster@uml-diagrams.org">webmaster</a>
 at <strong>webmaster@uml-diagrams.org</strong>.
</p>

<p>&nbsp;</p>

<p>
<em>Copyright &copy; 2009-2020 uml-diagrams.org. All rights reserved.</em>
</p>

</div><div id="disqus_thread"></div>
<script>
var disqus_config = function () {
 this.page.identifier = 'java-thread-state-machine-diagram-example.html';
 this.page.url = 'https://www.uml-diagrams.org/java-thread-state-machine-diagram-example.html';
};
(function() {
  var d = document, s = d.createElement('script');
  s.src = '//umldiagrams.disqus.com/embed.js';
  s.setAttribute('data-timestamp', +new Date());
  (d.head || d.body).appendChild(s);
 })();
</script>
<noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript=umldiagrams" rel="nofollow">comments powered by Disqus.</a></noscript>
<script id="dsq-count-scr" src="//umldiagrams.disqus.com/count.js" async></script>
</footer>
</body>
</html>