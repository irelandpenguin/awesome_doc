
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>cmplx - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="../../doc/style.css">
<script type="text/javascript" src="../../doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Package cmplx</h1>




<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->

	
		<div id="short-nav">
			<dl>
			<dd><code>import "math/cmplx"</code></dd>
			</dl>
			<dl>
			<dd><a href="#overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#index">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ?</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ?</h2>
				<p>
Package cmplx provides basic constants and mathematical functions for
complex numbers.
</p>

			</div>
		</div>
		
	
		<h2 id="index">Index</h2>
		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
		<div id="manual-nav">
			<dl>
			
			
			
				
				<dd><a href="#Abs">func Abs(x complex128) float64</a></dd>
			
				
				<dd><a href="#Acos">func Acos(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Acosh">func Acosh(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Asin">func Asin(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Asinh">func Asinh(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Atan">func Atan(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Atanh">func Atanh(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Conj">func Conj(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Cos">func Cos(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Cosh">func Cosh(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Cot">func Cot(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Exp">func Exp(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Inf">func Inf() complex128</a></dd>
			
				
				<dd><a href="#IsInf">func IsInf(x complex128) bool</a></dd>
			
				
				<dd><a href="#IsNaN">func IsNaN(x complex128) bool</a></dd>
			
				
				<dd><a href="#Log">func Log(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Log10">func Log10(x complex128) complex128</a></dd>
			
				
				<dd><a href="#NaN">func NaN() complex128</a></dd>
			
				
				<dd><a href="#Phase">func Phase(x complex128) float64</a></dd>
			
				
				<dd><a href="#Polar">func Polar(x complex128) (r,  float64)</a></dd>
			
				
				<dd><a href="#Pow">func Pow(x, y complex128) complex128</a></dd>
			
				
				<dd><a href="#Rect">func Rect(r,  float64) complex128</a></dd>
			
				
				<dd><a href="#Sin">func Sin(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Sinh">func Sinh(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Sqrt">func Sqrt(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Tan">func Tan(x complex128) complex128</a></dd>
			
				
				<dd><a href="#Tanh">func Tanh(x complex128) complex128</a></dd>
			
			
			
		</dl>

		

		
			<h4>Package files</h4>
			<p>
			<span style="font-size:90%">
			
				<a href="src/pkg/math/cmplx/abs.htm">abs.go</a>
			
				<a href="src/pkg/math/cmplx/asin.htm">asin.go</a>
			
				<a href="src/pkg/math/cmplx/conj.htm">conj.go</a>
			
				<a href="src/pkg/math/cmplx/exp.htm">exp.go</a>
			
				<a href="src/pkg/math/cmplx/isinf.htm">isinf.go</a>
			
				<a href="src/pkg/math/cmplx/isnan.htm">isnan.go</a>
			
				<a href="src/pkg/math/cmplx/log.htm">log.go</a>
			
				<a href="src/pkg/math/cmplx/phase.htm">phase.go</a>
			
				<a href="src/pkg/math/cmplx/polar.htm">polar.go</a>
			
				<a href="src/pkg/math/cmplx/pow.htm">pow.go</a>
			
				<a href="src/pkg/math/cmplx/rect.htm">rect.go</a>
			
				<a href="src/pkg/math/cmplx/sin.htm">sin.go</a>
			
				<a href="src/pkg/math/cmplx/sqrt.htm">sqrt.go</a>
			
				<a href="src/pkg/math/cmplx/tan.htm">tan.go</a>
			
			</span>
			</p>
		
	
		
		
		
			
			
			<h2 id="Abs">func <a href="src/pkg/math/cmplx/abs.htm#L2">Abs</a></h2>
			<pre>func Abs(x complex128) float64</pre>
			<p>
Abs returns the absolute value (also called the modulus) of x.
</p>

			
		
			
			
			<h2 id="Acos">func <a href="src/pkg/math/cmplx/asin.htm#L84">Acos</a></h2>
			<pre>func Acos(x complex128) complex128</pre>
			<p>
Acos returns the inverse cosine of x.
</p>

			
		
			
			
			<h2 id="Acosh">func <a href="src/pkg/math/cmplx/asin.htm#L90">Acosh</a></h2>
			<pre>func Acosh(x complex128) complex128</pre>
			<p>
Acosh returns the inverse hyperbolic cosine of x.
</p>

			
		
			
			
			<h2 id="Asin">func <a href="src/pkg/math/cmplx/asin.htm#L41">Asin</a></h2>
			<pre>func Asin(x complex128) complex128</pre>
			<p>
Asin returns the inverse sine of x.
</p>

			
		
			
			
			<h2 id="Asinh">func <a href="src/pkg/math/cmplx/asin.htm#L57">Asinh</a></h2>
			<pre>func Asinh(x complex128) complex128</pre>
			<p>
Asinh returns the inverse hyperbolic sine of x.
</p>

			
		
			
			
			<h2 id="Atan">func <a href="src/pkg/math/cmplx/asin.htm#L132">Atan</a></h2>
			<pre>func Atan(x complex128) complex128</pre>
			<p>
Atan returns the inverse tangent of x.
</p>

			
		
			
			
			<h2 id="Atanh">func <a href="src/pkg/math/cmplx/asin.htm#L156">Atanh</a></h2>
			<pre>func Atanh(x complex128) complex128</pre>
			<p>
Atanh returns the inverse hyperbolic tangent of x.
</p>

			
		
			
			
			<h2 id="Conj">func <a href="src/pkg/math/cmplx/conj.htm#L1">Conj</a></h2>
			<pre>func Conj(x complex128) complex128</pre>
			<p>
Conj returns the complex conjugate of x.
</p>

			
		
			
			
			<h2 id="Cos">func <a href="src/pkg/math/cmplx/sin.htm#L88">Cos</a></h2>
			<pre>func Cos(x complex128) complex128</pre>
			<p>
Cos returns the cosine of x.
</p>

			
		
			
			
			<h2 id="Cosh">func <a href="src/pkg/math/cmplx/sin.htm#L107">Cosh</a></h2>
			<pre>func Cosh(x complex128) complex128</pre>
			<p>
Cosh returns the hyperbolic cosine of x.
</p>

			
		
			
			
			<h2 id="Cot">func <a href="src/pkg/math/cmplx/tan.htm#L165">Cot</a></h2>
			<pre>func Cot(x complex128) complex128</pre>
			<p>
Cot returns the cotangent of x.
</p>

			
		
			
			
			<h2 id="Exp">func <a href="src/pkg/math/cmplx/exp.htm#L41">Exp</a></h2>
			<pre>func Exp(x complex128) complex128</pre>
			<p>
Exp returns e**x, the base-e exponential of x.
</p>

			
		
			
			
			<h2 id="Inf">func <a href="src/pkg/math/cmplx/isinf.htm#L8">Inf</a></h2>
			<pre>func Inf() complex128</pre>
			<p>
Inf returns a complex infinity, complex(+Inf, +Inf).
</p>

			
		
			
			
			<h2 id="IsInf">func <a href="src/pkg/math/cmplx/isinf.htm#L1">IsInf</a></h2>
			<pre>func IsInf(x complex128) bool</pre>
			<p>
IsInf returns true if either real(x) or imag(x) is an infinity.
</p>

			
		
			
			
			<h2 id="IsNaN">func <a href="src/pkg/math/cmplx/isnan.htm#L1">IsNaN</a></h2>
			<pre>func IsNaN(x complex128) bool</pre>
			<p>
IsNaN returns true if either real(x) or imag(x) is NaN
and neither is an infinity.
</p>

			
		
			
			
			<h2 id="Log">func <a href="src/pkg/math/cmplx/log.htm#L47">Log</a></h2>
			<pre>func Log(x complex128) complex128</pre>
			<p>
Log returns the natural logarithm of x.
</p>

			
		
			
			
			<h2 id="Log10">func <a href="src/pkg/math/cmplx/log.htm#L52">Log10</a></h2>
			<pre>func Log10(x complex128) complex128</pre>
			<p>
Log10 returns the decimal logarithm of x.
</p>

			
		
			
			
			<h2 id="NaN">func <a href="src/pkg/math/cmplx/isnan.htm#L12">NaN</a></h2>
			<pre>func NaN() complex128</pre>
			<p>
NaN returns a complex &ldquo;not-a-number&rdquo; value.
</p>

			
		
			
			
			<h2 id="Phase">func <a href="src/pkg/math/cmplx/phase.htm#L1">Phase</a></h2>
			<pre>func Phase(x complex128) float64</pre>
			<p>
Phase returns the phase (also called the argument) of x.
The returned value is in the range [-Pi, Pi].
</p>

			
		
			
			
			<h2 id="Polar">func <a href="src/pkg/math/cmplx/polar.htm#L1">Polar</a></h2>
			<pre>func Polar(x complex128) (r,  float64)</pre>
			<p>
Polar returns the absolute value r and phase  of x,
such that x = r * e**i.
The phase is in the range [-Pi, Pi].
</p>

			
		
			
			
			<h2 id="Pow">func <a href="src/pkg/math/cmplx/pow.htm#L36">Pow</a></h2>
			<pre>func Pow(x, y complex128) complex128</pre>
			<p>
Pow returns x**y, the base-x exponential of y.
</p>

			
		
			
			
			<h2 id="Rect">func <a href="src/pkg/math/cmplx/rect.htm#L1">Rect</a></h2>
			<pre>func Rect(r,  float64) complex128</pre>
			<p>
Rect returns the complex number x with polar coordinates r, .
</p>

			
		
			
			
			<h2 id="Sin">func <a href="src/pkg/math/cmplx/sin.htm#L43">Sin</a></h2>
			<pre>func Sin(x complex128) complex128</pre>
			<p>
Sin returns the sine of x.
</p>

			
		
			
			
			<h2 id="Sinh">func <a href="src/pkg/math/cmplx/sin.htm#L63">Sinh</a></h2>
			<pre>func Sinh(x complex128) complex128</pre>
			<p>
Sinh returns the hyperbolic sine of x.
</p>

			
		
			
			
			<h2 id="Sqrt">func <a href="src/pkg/math/cmplx/sqrt.htm#L47">Sqrt</a></h2>
			<pre>func Sqrt(x complex128) complex128</pre>
			<p>
Sqrt returns the square root of x.
</p>

			
		
			
			
			<h2 id="Tan">func <a href="src/pkg/math/cmplx/tan.htm#L49">Tan</a></h2>
			<pre>func Tan(x complex128) complex128</pre>
			<p>
Tan returns the tangent of x.
</p>

			
		
			
			
			<h2 id="Tanh">func <a href="src/pkg/math/cmplx/tan.htm#L73">Tanh</a></h2>
			<pre>func Tanh(x complex128) complex128</pre>
			<p>
Tanh returns the hyperbolic tangent of x.
</p>

			
		
		
		</div>
	

	









</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>
