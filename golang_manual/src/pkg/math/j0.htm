<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/math/j0.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/math/j0.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2010 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	package math
<a id="L6"></a><span class="ln">     6</span>	
<a id="L7"></a><span class="ln">     7</span>	<span class="comment">/*
</span><a id="L8"></a><span class="ln">     8</span>	<span class="comment">	Bessel function of the first and second kinds of order zero.
</span><a id="L9"></a><span class="ln">     9</span>	<span class="comment">*/</span>
<a id="L10"></a><span class="ln">    10</span>	
<a id="L11"></a><span class="ln">    11</span>	<span class="comment">// The original C code and the long comment below are</span>
<a id="L12"></a><span class="ln">    12</span>	<span class="comment">// from FreeBSD&#39;s /usr/src/lib/msun/src/e_j0.c and</span>
<a id="L13"></a><span class="ln">    13</span>	<span class="comment">// came with this notice.  The go code is a simplified</span>
<a id="L14"></a><span class="ln">    14</span>	<span class="comment">// version of the original C.</span>
<a id="L15"></a><span class="ln">    15</span>	<span class="comment">//</span>
<a id="L16"></a><span class="ln">    16</span>	<span class="comment">// ====================================================</span>
<a id="L17"></a><span class="ln">    17</span>	<span class="comment">// Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.</span>
<a id="L18"></a><span class="ln">    18</span>	<span class="comment">//</span>
<a id="L19"></a><span class="ln">    19</span>	<span class="comment">// Developed at SunPro, a Sun Microsystems, Inc. business.</span>
<a id="L20"></a><span class="ln">    20</span>	<span class="comment">// Permission to use, copy, modify, and distribute this</span>
<a id="L21"></a><span class="ln">    21</span>	<span class="comment">// software is freely granted, provided that this notice</span>
<a id="L22"></a><span class="ln">    22</span>	<span class="comment">// is preserved.</span>
<a id="L23"></a><span class="ln">    23</span>	<span class="comment">// ====================================================</span>
<a id="L24"></a><span class="ln">    24</span>	<span class="comment">//</span>
<a id="L25"></a><span class="ln">    25</span>	<span class="comment">// __ieee754_j0(x), __ieee754_y0(x)</span>
<a id="L26"></a><span class="ln">    26</span>	<span class="comment">// Bessel function of the first and second kinds of order zero.</span>
<a id="L27"></a><span class="ln">    27</span>	<span class="comment">// Method -- j0(x):</span>
<a id="L28"></a><span class="ln">    28</span>	<span class="comment">//      1. For tiny x, we use j0(x) = 1 - x**2/4 + x**4/64 - ...</span>
<a id="L29"></a><span class="ln">    29</span>	<span class="comment">//      2. Reduce x to |x| since j0(x)=j0(-x),  and</span>
<a id="L30"></a><span class="ln">    30</span>	<span class="comment">//         for x in (0,2)</span>
<a id="L31"></a><span class="ln">    31</span>	<span class="comment">//              j0(x) = 1-z/4+ z**2*R0/S0,  where z = x*x;</span>
<a id="L32"></a><span class="ln">    32</span>	<span class="comment">//         (precision:  |j0-1+z/4-z**2R0/S0 |&lt;2**-63.67 )</span>
<a id="L33"></a><span class="ln">    33</span>	<span class="comment">//         for x in (2,inf)</span>
<a id="L34"></a><span class="ln">    34</span>	<span class="comment">//              j0(x) = sqrt(2/(pi*x))*(p0(x)*cos(x0)-q0(x)*sin(x0))</span>
<a id="L35"></a><span class="ln">    35</span>	<span class="comment">//         where x0 = x-pi/4. It is better to compute sin(x0),cos(x0)</span>
<a id="L36"></a><span class="ln">    36</span>	<span class="comment">//         as follow:</span>
<a id="L37"></a><span class="ln">    37</span>	<span class="comment">//              cos(x0) = cos(x)cos(pi/4)+sin(x)sin(pi/4)</span>
<a id="L38"></a><span class="ln">    38</span>	<span class="comment">//                      = 1/sqrt(2) * (cos(x) + sin(x))</span>
<a id="L39"></a><span class="ln">    39</span>	<span class="comment">//              sin(x0) = sin(x)cos(pi/4)-cos(x)sin(pi/4)</span>
<a id="L40"></a><span class="ln">    40</span>	<span class="comment">//                      = 1/sqrt(2) * (sin(x) - cos(x))</span>
<a id="L41"></a><span class="ln">    41</span>	<span class="comment">//         (To avoid cancellation, use</span>
<a id="L42"></a><span class="ln">    42</span>	<span class="comment">//              sin(x) +- cos(x) = -cos(2x)/(sin(x) -+ cos(x))</span>
<a id="L43"></a><span class="ln">    43</span>	<span class="comment">//         to compute the worse one.)</span>
<a id="L44"></a><span class="ln">    44</span>	<span class="comment">//</span>
<a id="L45"></a><span class="ln">    45</span>	<span class="comment">//      3 Special cases</span>
<a id="L46"></a><span class="ln">    46</span>	<span class="comment">//              j0(nan)= nan</span>
<a id="L47"></a><span class="ln">    47</span>	<span class="comment">//              j0(0) = 1</span>
<a id="L48"></a><span class="ln">    48</span>	<span class="comment">//              j0(inf) = 0</span>
<a id="L49"></a><span class="ln">    49</span>	<span class="comment">//</span>
<a id="L50"></a><span class="ln">    50</span>	<span class="comment">// Method -- y0(x):</span>
<a id="L51"></a><span class="ln">    51</span>	<span class="comment">//      1. For x&lt;2.</span>
<a id="L52"></a><span class="ln">    52</span>	<span class="comment">//         Since</span>
<a id="L53"></a><span class="ln">    53</span>	<span class="comment">//              y0(x) = 2/pi*(j0(x)*(ln(x/2)+Euler) + x**2/4 - ...)</span>
<a id="L54"></a><span class="ln">    54</span>	<span class="comment">//         therefore y0(x)-2/pi*j0(x)*ln(x) is an even function.</span>
<a id="L55"></a><span class="ln">    55</span>	<span class="comment">//         We use the following function to approximate y0,</span>
<a id="L56"></a><span class="ln">    56</span>	<span class="comment">//              y0(x) = U(z)/V(z) + (2/pi)*(j0(x)*ln(x)), z= x**2</span>
<a id="L57"></a><span class="ln">    57</span>	<span class="comment">//         where</span>
<a id="L58"></a><span class="ln">    58</span>	<span class="comment">//              U(z) = u00 + u01*z + ... + u06*z**6</span>
<a id="L59"></a><span class="ln">    59</span>	<span class="comment">//              V(z) = 1  + v01*z + ... + v04*z**4</span>
<a id="L60"></a><span class="ln">    60</span>	<span class="comment">//         with absolute approximation error bounded by 2**-72.</span>
<a id="L61"></a><span class="ln">    61</span>	<span class="comment">//         Note: For tiny x, U/V = u0 and j0(x)~1, hence</span>
<a id="L62"></a><span class="ln">    62</span>	<span class="comment">//              y0(tiny) = u0 + (2/pi)*ln(tiny), (choose tiny&lt;2**-27)</span>
<a id="L63"></a><span class="ln">    63</span>	<span class="comment">//      2. For x&gt;=2.</span>
<a id="L64"></a><span class="ln">    64</span>	<span class="comment">//              y0(x) = sqrt(2/(pi*x))*(p0(x)*cos(x0)+q0(x)*sin(x0))</span>
<a id="L65"></a><span class="ln">    65</span>	<span class="comment">//         where x0 = x-pi/4. It is better to compute sin(x0),cos(x0)</span>
<a id="L66"></a><span class="ln">    66</span>	<span class="comment">//         by the method mentioned above.</span>
<a id="L67"></a><span class="ln">    67</span>	<span class="comment">//      3. Special cases: y0(0)=-inf, y0(x&lt;0)=NaN, y0(inf)=0.</span>
<a id="L68"></a><span class="ln">    68</span>	<span class="comment">//</span>
<a id="L69"></a><span class="ln">    69</span>	
<a id="L70"></a><span class="ln">    70</span>	<span class="comment">// J0 returns the order-zero Bessel function of the first kind.</span>
<a id="L71"></a><span class="ln">    71</span>	<span class="comment">//</span>
<a id="L72"></a><span class="ln">    72</span>	<span class="comment">// Special cases are:</span>
<a id="L73"></a><span class="ln">    73</span>	<span class="comment">//	J0(Â±Inf) = 0</span>
<a id="L74"></a><span class="ln">    74</span>	<span class="comment">//	J0(0) = 1</span>
<a id="L75"></a><span class="ln">    75</span>	<span class="comment">//	J0(NaN) = NaN</span>
<a id="L76"></a><span class="ln">    76</span>	func J0(x float64) float64 {
<a id="L77"></a><span class="ln">    77</span>		const (
<a id="L78"></a><span class="ln">    78</span>			Huge   = 1e300
<a id="L79"></a><span class="ln">    79</span>			TwoM27 = 1.0 / (1 &lt;&lt; 27) <span class="comment">// 2**-27 0x3e40000000000000</span>
<a id="L80"></a><span class="ln">    80</span>			TwoM13 = 1.0 / (1 &lt;&lt; 13) <span class="comment">// 2**-13 0x3f20000000000000</span>
<a id="L81"></a><span class="ln">    81</span>			Two129 = 1 &lt;&lt; 129        <span class="comment">// 2**129 0x4800000000000000</span>
<a id="L82"></a><span class="ln">    82</span>			<span class="comment">// R0/S0 on [0, 2]</span>
<a id="L83"></a><span class="ln">    83</span>			R02 = 1.56249999999999947958e-02  <span class="comment">// 0x3F8FFFFFFFFFFFFD</span>
<a id="L84"></a><span class="ln">    84</span>			R03 = -1.89979294238854721751e-04 <span class="comment">// 0xBF28E6A5B61AC6E9</span>
<a id="L85"></a><span class="ln">    85</span>			R04 = 1.82954049532700665670e-06  <span class="comment">// 0x3EBEB1D10C503919</span>
<a id="L86"></a><span class="ln">    86</span>			R05 = -4.61832688532103189199e-09 <span class="comment">// 0xBE33D5E773D63FCE</span>
<a id="L87"></a><span class="ln">    87</span>			S01 = 1.56191029464890010492e-02  <span class="comment">// 0x3F8FFCE882C8C2A4</span>
<a id="L88"></a><span class="ln">    88</span>			S02 = 1.16926784663337450260e-04  <span class="comment">// 0x3F1EA6D2DD57DBF4</span>
<a id="L89"></a><span class="ln">    89</span>			S03 = 5.13546550207318111446e-07  <span class="comment">// 0x3EA13B54CE84D5A9</span>
<a id="L90"></a><span class="ln">    90</span>			S04 = 1.16614003333790000205e-09  <span class="comment">// 0x3E1408BCF4745D8F</span>
<a id="L91"></a><span class="ln">    91</span>		)
<a id="L92"></a><span class="ln">    92</span>		<span class="comment">// special cases</span>
<a id="L93"></a><span class="ln">    93</span>		switch {
<a id="L94"></a><span class="ln">    94</span>		case IsNaN(x):
<a id="L95"></a><span class="ln">    95</span>			return x
<a id="L96"></a><span class="ln">    96</span>		case IsInf(x, 0):
<a id="L97"></a><span class="ln">    97</span>			return 0
<a id="L98"></a><span class="ln">    98</span>		case x == 0:
<a id="L99"></a><span class="ln">    99</span>			return 1
<a id="L100"></a><span class="ln">   100</span>		}
<a id="L101"></a><span class="ln">   101</span>	
<a id="L102"></a><span class="ln">   102</span>		if x &lt; 0 {
<a id="L103"></a><span class="ln">   103</span>			x = -x
<a id="L104"></a><span class="ln">   104</span>		}
<a id="L105"></a><span class="ln">   105</span>		if x &gt;= 2 {
<a id="L106"></a><span class="ln">   106</span>			s, c := Sincos(x)
<a id="L107"></a><span class="ln">   107</span>			ss := s - c
<a id="L108"></a><span class="ln">   108</span>			cc := s + c
<a id="L109"></a><span class="ln">   109</span>	
<a id="L110"></a><span class="ln">   110</span>			<span class="comment">// make sure x+x does not overflow</span>
<a id="L111"></a><span class="ln">   111</span>			if x &lt; MaxFloat64/2 {
<a id="L112"></a><span class="ln">   112</span>				z := -Cos(x + x)
<a id="L113"></a><span class="ln">   113</span>				if s*c &lt; 0 {
<a id="L114"></a><span class="ln">   114</span>					cc = z / ss
<a id="L115"></a><span class="ln">   115</span>				} else {
<a id="L116"></a><span class="ln">   116</span>					ss = z / cc
<a id="L117"></a><span class="ln">   117</span>				}
<a id="L118"></a><span class="ln">   118</span>			}
<a id="L119"></a><span class="ln">   119</span>	
<a id="L120"></a><span class="ln">   120</span>			<span class="comment">// j0(x) = 1/sqrt(pi) * (P(0,x)*cc - Q(0,x)*ss) / sqrt(x)</span>
<a id="L121"></a><span class="ln">   121</span>			<span class="comment">// y0(x) = 1/sqrt(pi) * (P(0,x)*ss + Q(0,x)*cc) / sqrt(x)</span>
<a id="L122"></a><span class="ln">   122</span>	
<a id="L123"></a><span class="ln">   123</span>			var z float64
<a id="L124"></a><span class="ln">   124</span>			if x &gt; Two129 { <span class="comment">// |x| &gt; ~6.8056e+38</span>
<a id="L125"></a><span class="ln">   125</span>				z = (1 / SqrtPi) * cc / Sqrt(x)
<a id="L126"></a><span class="ln">   126</span>			} else {
<a id="L127"></a><span class="ln">   127</span>				u := pzero(x)
<a id="L128"></a><span class="ln">   128</span>				v := qzero(x)
<a id="L129"></a><span class="ln">   129</span>				z = (1 / SqrtPi) * (u*cc - v*ss) / Sqrt(x)
<a id="L130"></a><span class="ln">   130</span>			}
<a id="L131"></a><span class="ln">   131</span>			return z <span class="comment">// |x| &gt;= 2.0</span>
<a id="L132"></a><span class="ln">   132</span>		}
<a id="L133"></a><span class="ln">   133</span>		if x &lt; TwoM13 { <span class="comment">// |x| &lt; ~1.2207e-4</span>
<a id="L134"></a><span class="ln">   134</span>			if x &lt; TwoM27 {
<a id="L135"></a><span class="ln">   135</span>				return 1 <span class="comment">// |x| &lt; ~7.4506e-9</span>
<a id="L136"></a><span class="ln">   136</span>			}
<a id="L137"></a><span class="ln">   137</span>			return 1 - 0.25*x*x <span class="comment">// ~7.4506e-9 &lt; |x| &lt; ~1.2207e-4</span>
<a id="L138"></a><span class="ln">   138</span>		}
<a id="L139"></a><span class="ln">   139</span>		z := x * x
<a id="L140"></a><span class="ln">   140</span>		r := z * (R02 + z*(R03+z*(R04+z*R05)))
<a id="L141"></a><span class="ln">   141</span>		s := 1 + z*(S01+z*(S02+z*(S03+z*S04)))
<a id="L142"></a><span class="ln">   142</span>		if x &lt; 1 {
<a id="L143"></a><span class="ln">   143</span>			return 1 + z*(-0.25+(r/s)) <span class="comment">// |x| &lt; 1.00</span>
<a id="L144"></a><span class="ln">   144</span>		}
<a id="L145"></a><span class="ln">   145</span>		u := 0.5 * x
<a id="L146"></a><span class="ln">   146</span>		return (1+u)*(1-u) + z*(r/s) <span class="comment">// 1.0 &lt; |x| &lt; 2.0</span>
<a id="L147"></a><span class="ln">   147</span>	}
<a id="L148"></a><span class="ln">   148</span>	
<a id="L149"></a><span class="ln">   149</span>	<span class="comment">// Y0 returns the order-zero Bessel function of the second kind.</span>
<a id="L150"></a><span class="ln">   150</span>	<span class="comment">//</span>
<a id="L151"></a><span class="ln">   151</span>	<span class="comment">// Special cases are:</span>
<a id="L152"></a><span class="ln">   152</span>	<span class="comment">//	Y0(+Inf) = 0</span>
<a id="L153"></a><span class="ln">   153</span>	<span class="comment">//	Y0(0) = -Inf</span>
<a id="L154"></a><span class="ln">   154</span>	<span class="comment">//	Y0(x &lt; 0) = NaN</span>
<a id="L155"></a><span class="ln">   155</span>	<span class="comment">//	Y0(NaN) = NaN</span>
<a id="L156"></a><span class="ln">   156</span>	func Y0(x float64) float64 {
<a id="L157"></a><span class="ln">   157</span>		const (
<a id="L158"></a><span class="ln">   158</span>			TwoM27 = 1.0 / (1 &lt;&lt; 27)             <span class="comment">// 2**-27 0x3e40000000000000</span>
<a id="L159"></a><span class="ln">   159</span>			Two129 = 1 &lt;&lt; 129                    <span class="comment">// 2**129 0x4800000000000000</span>
<a id="L160"></a><span class="ln">   160</span>			U00    = -7.38042951086872317523e-02 <span class="comment">// 0xBFB2E4D699CBD01F</span>
<a id="L161"></a><span class="ln">   161</span>			U01    = 1.76666452509181115538e-01  <span class="comment">// 0x3FC69D019DE9E3FC</span>
<a id="L162"></a><span class="ln">   162</span>			U02    = -1.38185671945596898896e-02 <span class="comment">// 0xBF8C4CE8B16CFA97</span>
<a id="L163"></a><span class="ln">   163</span>			U03    = 3.47453432093683650238e-04  <span class="comment">// 0x3F36C54D20B29B6B</span>
<a id="L164"></a><span class="ln">   164</span>			U04    = -3.81407053724364161125e-06 <span class="comment">// 0xBECFFEA773D25CAD</span>
<a id="L165"></a><span class="ln">   165</span>			U05    = 1.95590137035022920206e-08  <span class="comment">// 0x3E5500573B4EABD4</span>
<a id="L166"></a><span class="ln">   166</span>			U06    = -3.98205194132103398453e-11 <span class="comment">// 0xBDC5E43D693FB3C8</span>
<a id="L167"></a><span class="ln">   167</span>			V01    = 1.27304834834123699328e-02  <span class="comment">// 0x3F8A127091C9C71A</span>
<a id="L168"></a><span class="ln">   168</span>			V02    = 7.60068627350353253702e-05  <span class="comment">// 0x3F13ECBBF578C6C1</span>
<a id="L169"></a><span class="ln">   169</span>			V03    = 2.59150851840457805467e-07  <span class="comment">// 0x3E91642D7FF202FD</span>
<a id="L170"></a><span class="ln">   170</span>			V04    = 4.41110311332675467403e-10  <span class="comment">// 0x3DFE50183BD6D9EF</span>
<a id="L171"></a><span class="ln">   171</span>		)
<a id="L172"></a><span class="ln">   172</span>		<span class="comment">// special cases</span>
<a id="L173"></a><span class="ln">   173</span>		switch {
<a id="L174"></a><span class="ln">   174</span>		case x &lt; 0 || IsNaN(x):
<a id="L175"></a><span class="ln">   175</span>			return NaN()
<a id="L176"></a><span class="ln">   176</span>		case IsInf(x, 1):
<a id="L177"></a><span class="ln">   177</span>			return 0
<a id="L178"></a><span class="ln">   178</span>		case x == 0:
<a id="L179"></a><span class="ln">   179</span>			return Inf(-1)
<a id="L180"></a><span class="ln">   180</span>		}
<a id="L181"></a><span class="ln">   181</span>	
<a id="L182"></a><span class="ln">   182</span>		if x &gt;= 2 { <span class="comment">// |x| &gt;= 2.0</span>
<a id="L183"></a><span class="ln">   183</span>	
<a id="L184"></a><span class="ln">   184</span>			<span class="comment">// y0(x) = sqrt(2/(pi*x))*(p0(x)*sin(x0)+q0(x)*cos(x0))</span>
<a id="L185"></a><span class="ln">   185</span>			<span class="comment">//     where x0 = x-pi/4</span>
<a id="L186"></a><span class="ln">   186</span>			<span class="comment">// Better formula:</span>
<a id="L187"></a><span class="ln">   187</span>			<span class="comment">//     cos(x0) = cos(x)cos(pi/4)+sin(x)sin(pi/4)</span>
<a id="L188"></a><span class="ln">   188</span>			<span class="comment">//             =  1/sqrt(2) * (sin(x) + cos(x))</span>
<a id="L189"></a><span class="ln">   189</span>			<span class="comment">//     sin(x0) = sin(x)cos(3pi/4)-cos(x)sin(3pi/4)</span>
<a id="L190"></a><span class="ln">   190</span>			<span class="comment">//             =  1/sqrt(2) * (sin(x) - cos(x))</span>
<a id="L191"></a><span class="ln">   191</span>			<span class="comment">// To avoid cancellation, use</span>
<a id="L192"></a><span class="ln">   192</span>			<span class="comment">//     sin(x) +- cos(x) = -cos(2x)/(sin(x) -+ cos(x))</span>
<a id="L193"></a><span class="ln">   193</span>			<span class="comment">// to compute the worse one.</span>
<a id="L194"></a><span class="ln">   194</span>	
<a id="L195"></a><span class="ln">   195</span>			s, c := Sincos(x)
<a id="L196"></a><span class="ln">   196</span>			ss := s - c
<a id="L197"></a><span class="ln">   197</span>			cc := s + c
<a id="L198"></a><span class="ln">   198</span>	
<a id="L199"></a><span class="ln">   199</span>			<span class="comment">// j0(x) = 1/sqrt(pi) * (P(0,x)*cc - Q(0,x)*ss) / sqrt(x)</span>
<a id="L200"></a><span class="ln">   200</span>			<span class="comment">// y0(x) = 1/sqrt(pi) * (P(0,x)*ss + Q(0,x)*cc) / sqrt(x)</span>
<a id="L201"></a><span class="ln">   201</span>	
<a id="L202"></a><span class="ln">   202</span>			<span class="comment">// make sure x+x does not overflow</span>
<a id="L203"></a><span class="ln">   203</span>			if x &lt; MaxFloat64/2 {
<a id="L204"></a><span class="ln">   204</span>				z := -Cos(x + x)
<a id="L205"></a><span class="ln">   205</span>				if s*c &lt; 0 {
<a id="L206"></a><span class="ln">   206</span>					cc = z / ss
<a id="L207"></a><span class="ln">   207</span>				} else {
<a id="L208"></a><span class="ln">   208</span>					ss = z / cc
<a id="L209"></a><span class="ln">   209</span>				}
<a id="L210"></a><span class="ln">   210</span>			}
<a id="L211"></a><span class="ln">   211</span>			var z float64
<a id="L212"></a><span class="ln">   212</span>			if x &gt; Two129 { <span class="comment">// |x| &gt; ~6.8056e+38</span>
<a id="L213"></a><span class="ln">   213</span>				z = (1 / SqrtPi) * ss / Sqrt(x)
<a id="L214"></a><span class="ln">   214</span>			} else {
<a id="L215"></a><span class="ln">   215</span>				u := pzero(x)
<a id="L216"></a><span class="ln">   216</span>				v := qzero(x)
<a id="L217"></a><span class="ln">   217</span>				z = (1 / SqrtPi) * (u*ss + v*cc) / Sqrt(x)
<a id="L218"></a><span class="ln">   218</span>			}
<a id="L219"></a><span class="ln">   219</span>			return z <span class="comment">// |x| &gt;= 2.0</span>
<a id="L220"></a><span class="ln">   220</span>		}
<a id="L221"></a><span class="ln">   221</span>		if x &lt;= TwoM27 {
<a id="L222"></a><span class="ln">   222</span>			return U00 + (2/Pi)*Log(x) <span class="comment">// |x| &lt; ~7.4506e-9</span>
<a id="L223"></a><span class="ln">   223</span>		}
<a id="L224"></a><span class="ln">   224</span>		z := x * x
<a id="L225"></a><span class="ln">   225</span>		u := U00 + z*(U01+z*(U02+z*(U03+z*(U04+z*(U05+z*U06)))))
<a id="L226"></a><span class="ln">   226</span>		v := 1 + z*(V01+z*(V02+z*(V03+z*V04)))
<a id="L227"></a><span class="ln">   227</span>		return u/v + (2/Pi)*J0(x)*Log(x) <span class="comment">// ~7.4506e-9 &lt; |x| &lt; 2.0</span>
<a id="L228"></a><span class="ln">   228</span>	}
<a id="L229"></a><span class="ln">   229</span>	
<a id="L230"></a><span class="ln">   230</span>	<span class="comment">// The asymptotic expansions of pzero is</span>
<a id="L231"></a><span class="ln">   231</span>	<span class="comment">//      1 - 9/128 s**2 + 11025/98304 s**4 - ..., where s = 1/x.</span>
<a id="L232"></a><span class="ln">   232</span>	<span class="comment">// For x &gt;= 2, We approximate pzero by</span>
<a id="L233"></a><span class="ln">   233</span>	<span class="comment">// 	pzero(x) = 1 + (R/S)</span>
<a id="L234"></a><span class="ln">   234</span>	<span class="comment">// where  R = pR0 + pR1*s**2 + pR2*s**4 + ... + pR5*s**10</span>
<a id="L235"></a><span class="ln">   235</span>	<span class="comment">// 	  S = 1 + pS0*s**2 + ... + pS4*s**10</span>
<a id="L236"></a><span class="ln">   236</span>	<span class="comment">// and</span>
<a id="L237"></a><span class="ln">   237</span>	<span class="comment">//      | pzero(x)-1-R/S | &lt;= 2  ** ( -60.26)</span>
<a id="L238"></a><span class="ln">   238</span>	
<a id="L239"></a><span class="ln">   239</span>	<span class="comment">// for x in [inf, 8]=1/[0,0.125]</span>
<a id="L240"></a><span class="ln">   240</span>	var p0R8 = [6]float64{
<a id="L241"></a><span class="ln">   241</span>		0.00000000000000000000e+00,  <span class="comment">// 0x0000000000000000</span>
<a id="L242"></a><span class="ln">   242</span>		-7.03124999999900357484e-02, <span class="comment">// 0xBFB1FFFFFFFFFD32</span>
<a id="L243"></a><span class="ln">   243</span>		-8.08167041275349795626e+00, <span class="comment">// 0xC02029D0B44FA779</span>
<a id="L244"></a><span class="ln">   244</span>		-2.57063105679704847262e+02, <span class="comment">// 0xC07011027B19E863</span>
<a id="L245"></a><span class="ln">   245</span>		-2.48521641009428822144e+03, <span class="comment">// 0xC0A36A6ECD4DCAFC</span>
<a id="L246"></a><span class="ln">   246</span>		-5.25304380490729545272e+03, <span class="comment">// 0xC0B4850B36CC643D</span>
<a id="L247"></a><span class="ln">   247</span>	}
<a id="L248"></a><span class="ln">   248</span>	var p0S8 = [5]float64{
<a id="L249"></a><span class="ln">   249</span>		1.16534364619668181717e+02, <span class="comment">// 0x405D223307A96751</span>
<a id="L250"></a><span class="ln">   250</span>		3.83374475364121826715e+03, <span class="comment">// 0x40ADF37D50596938</span>
<a id="L251"></a><span class="ln">   251</span>		4.05978572648472545552e+04, <span class="comment">// 0x40E3D2BB6EB6B05F</span>
<a id="L252"></a><span class="ln">   252</span>		1.16752972564375915681e+05, <span class="comment">// 0x40FC810F8F9FA9BD</span>
<a id="L253"></a><span class="ln">   253</span>		4.76277284146730962675e+04, <span class="comment">// 0x40E741774F2C49DC</span>
<a id="L254"></a><span class="ln">   254</span>	}
<a id="L255"></a><span class="ln">   255</span>	
<a id="L256"></a><span class="ln">   256</span>	<span class="comment">// for x in [8,4.5454]=1/[0.125,0.22001]</span>
<a id="L257"></a><span class="ln">   257</span>	var p0R5 = [6]float64{
<a id="L258"></a><span class="ln">   258</span>		-1.14125464691894502584e-11, <span class="comment">// 0xBDA918B147E495CC</span>
<a id="L259"></a><span class="ln">   259</span>		-7.03124940873599280078e-02, <span class="comment">// 0xBFB1FFFFE69AFBC6</span>
<a id="L260"></a><span class="ln">   260</span>		-4.15961064470587782438e+00, <span class="comment">// 0xC010A370F90C6BBF</span>
<a id="L261"></a><span class="ln">   261</span>		-6.76747652265167261021e+01, <span class="comment">// 0xC050EB2F5A7D1783</span>
<a id="L262"></a><span class="ln">   262</span>		-3.31231299649172967747e+02, <span class="comment">// 0xC074B3B36742CC63</span>
<a id="L263"></a><span class="ln">   263</span>		-3.46433388365604912451e+02, <span class="comment">// 0xC075A6EF28A38BD7</span>
<a id="L264"></a><span class="ln">   264</span>	}
<a id="L265"></a><span class="ln">   265</span>	var p0S5 = [5]float64{
<a id="L266"></a><span class="ln">   266</span>		6.07539382692300335975e+01, <span class="comment">// 0x404E60810C98C5DE</span>
<a id="L267"></a><span class="ln">   267</span>		1.05125230595704579173e+03, <span class="comment">// 0x40906D025C7E2864</span>
<a id="L268"></a><span class="ln">   268</span>		5.97897094333855784498e+03, <span class="comment">// 0x40B75AF88FBE1D60</span>
<a id="L269"></a><span class="ln">   269</span>		9.62544514357774460223e+03, <span class="comment">// 0x40C2CCB8FA76FA38</span>
<a id="L270"></a><span class="ln">   270</span>		2.40605815922939109441e+03, <span class="comment">// 0x40A2CC1DC70BE864</span>
<a id="L271"></a><span class="ln">   271</span>	}
<a id="L272"></a><span class="ln">   272</span>	
<a id="L273"></a><span class="ln">   273</span>	<span class="comment">// for x in [4.547,2.8571]=1/[0.2199,0.35001]</span>
<a id="L274"></a><span class="ln">   274</span>	var p0R3 = [6]float64{
<a id="L275"></a><span class="ln">   275</span>		-2.54704601771951915620e-09, <span class="comment">// 0xBE25E1036FE1AA86</span>
<a id="L276"></a><span class="ln">   276</span>		-7.03119616381481654654e-02, <span class="comment">// 0xBFB1FFF6F7C0E24B</span>
<a id="L277"></a><span class="ln">   277</span>		-2.40903221549529611423e+00, <span class="comment">// 0xC00345B2AEA48074</span>
<a id="L278"></a><span class="ln">   278</span>		-2.19659774734883086467e+01, <span class="comment">// 0xC035F74A4CB94E14</span>
<a id="L279"></a><span class="ln">   279</span>		-5.80791704701737572236e+01, <span class="comment">// 0xC04D0A22420A1A45</span>
<a id="L280"></a><span class="ln">   280</span>		-3.14479470594888503854e+01, <span class="comment">// 0xC03F72ACA892D80F</span>
<a id="L281"></a><span class="ln">   281</span>	}
<a id="L282"></a><span class="ln">   282</span>	var p0S3 = [5]float64{
<a id="L283"></a><span class="ln">   283</span>		3.58560338055209726349e+01, <span class="comment">// 0x4041ED9284077DD3</span>
<a id="L284"></a><span class="ln">   284</span>		3.61513983050303863820e+02, <span class="comment">// 0x40769839464A7C0E</span>
<a id="L285"></a><span class="ln">   285</span>		1.19360783792111533330e+03, <span class="comment">// 0x4092A66E6D1061D6</span>
<a id="L286"></a><span class="ln">   286</span>		1.12799679856907414432e+03, <span class="comment">// 0x40919FFCB8C39B7E</span>
<a id="L287"></a><span class="ln">   287</span>		1.73580930813335754692e+02, <span class="comment">// 0x4065B296FC379081</span>
<a id="L288"></a><span class="ln">   288</span>	}
<a id="L289"></a><span class="ln">   289</span>	
<a id="L290"></a><span class="ln">   290</span>	<span class="comment">// for x in [2.8570,2]=1/[0.3499,0.5]</span>
<a id="L291"></a><span class="ln">   291</span>	var p0R2 = [6]float64{
<a id="L292"></a><span class="ln">   292</span>		-8.87534333032526411254e-08, <span class="comment">// 0xBE77D316E927026D</span>
<a id="L293"></a><span class="ln">   293</span>		-7.03030995483624743247e-02, <span class="comment">// 0xBFB1FF62495E1E42</span>
<a id="L294"></a><span class="ln">   294</span>		-1.45073846780952986357e+00, <span class="comment">// 0xBFF736398A24A843</span>
<a id="L295"></a><span class="ln">   295</span>		-7.63569613823527770791e+00, <span class="comment">// 0xC01E8AF3EDAFA7F3</span>
<a id="L296"></a><span class="ln">   296</span>		-1.11931668860356747786e+01, <span class="comment">// 0xC02662E6C5246303</span>
<a id="L297"></a><span class="ln">   297</span>		-3.23364579351335335033e+00, <span class="comment">// 0xC009DE81AF8FE70F</span>
<a id="L298"></a><span class="ln">   298</span>	}
<a id="L299"></a><span class="ln">   299</span>	var p0S2 = [5]float64{
<a id="L300"></a><span class="ln">   300</span>		2.22202997532088808441e+01, <span class="comment">// 0x40363865908B5959</span>
<a id="L301"></a><span class="ln">   301</span>		1.36206794218215208048e+02, <span class="comment">// 0x4061069E0EE8878F</span>
<a id="L302"></a><span class="ln">   302</span>		2.70470278658083486789e+02, <span class="comment">// 0x4070E78642EA079B</span>
<a id="L303"></a><span class="ln">   303</span>		1.53875394208320329881e+02, <span class="comment">// 0x40633C033AB6FAFF</span>
<a id="L304"></a><span class="ln">   304</span>		1.46576176948256193810e+01, <span class="comment">// 0x402D50B344391809</span>
<a id="L305"></a><span class="ln">   305</span>	}
<a id="L306"></a><span class="ln">   306</span>	
<a id="L307"></a><span class="ln">   307</span>	func pzero(x float64) float64 {
<a id="L308"></a><span class="ln">   308</span>		var p [6]float64
<a id="L309"></a><span class="ln">   309</span>		var q [5]float64
<a id="L310"></a><span class="ln">   310</span>		if x &gt;= 8 {
<a id="L311"></a><span class="ln">   311</span>			p = p0R8
<a id="L312"></a><span class="ln">   312</span>			q = p0S8
<a id="L313"></a><span class="ln">   313</span>		} else if x &gt;= 4.5454 {
<a id="L314"></a><span class="ln">   314</span>			p = p0R5
<a id="L315"></a><span class="ln">   315</span>			q = p0S5
<a id="L316"></a><span class="ln">   316</span>		} else if x &gt;= 2.8571 {
<a id="L317"></a><span class="ln">   317</span>			p = p0R3
<a id="L318"></a><span class="ln">   318</span>			q = p0S3
<a id="L319"></a><span class="ln">   319</span>		} else if x &gt;= 2 {
<a id="L320"></a><span class="ln">   320</span>			p = p0R2
<a id="L321"></a><span class="ln">   321</span>			q = p0S2
<a id="L322"></a><span class="ln">   322</span>		}
<a id="L323"></a><span class="ln">   323</span>		z := 1 / (x * x)
<a id="L324"></a><span class="ln">   324</span>		r := p[0] + z*(p[1]+z*(p[2]+z*(p[3]+z*(p[4]+z*p[5]))))
<a id="L325"></a><span class="ln">   325</span>		s := 1 + z*(q[0]+z*(q[1]+z*(q[2]+z*(q[3]+z*q[4]))))
<a id="L326"></a><span class="ln">   326</span>		return 1 + r/s
<a id="L327"></a><span class="ln">   327</span>	}
<a id="L328"></a><span class="ln">   328</span>	
<a id="L329"></a><span class="ln">   329</span>	<span class="comment">// For x &gt;= 8, the asymptotic expansions of qzero is</span>
<a id="L330"></a><span class="ln">   330</span>	<span class="comment">//      -1/8 s + 75/1024 s**3 - ..., where s = 1/x.</span>
<a id="L331"></a><span class="ln">   331</span>	<span class="comment">// We approximate pzero by</span>
<a id="L332"></a><span class="ln">   332</span>	<span class="comment">//      qzero(x) = s*(-1.25 + (R/S))</span>
<a id="L333"></a><span class="ln">   333</span>	<span class="comment">// where R = qR0 + qR1*s**2 + qR2*s**4 + ... + qR5*s**10</span>
<a id="L334"></a><span class="ln">   334</span>	<span class="comment">//       S = 1 + qS0*s**2 + ... + qS5*s**12</span>
<a id="L335"></a><span class="ln">   335</span>	<span class="comment">// and</span>
<a id="L336"></a><span class="ln">   336</span>	<span class="comment">//      | qzero(x)/s +1.25-R/S | &lt;= 2**(-61.22)</span>
<a id="L337"></a><span class="ln">   337</span>	
<a id="L338"></a><span class="ln">   338</span>	<span class="comment">// for x in [inf, 8]=1/[0,0.125]</span>
<a id="L339"></a><span class="ln">   339</span>	var q0R8 = [6]float64{
<a id="L340"></a><span class="ln">   340</span>		0.00000000000000000000e+00, <span class="comment">// 0x0000000000000000</span>
<a id="L341"></a><span class="ln">   341</span>		7.32421874999935051953e-02, <span class="comment">// 0x3FB2BFFFFFFFFE2C</span>
<a id="L342"></a><span class="ln">   342</span>		1.17682064682252693899e+01, <span class="comment">// 0x402789525BB334D6</span>
<a id="L343"></a><span class="ln">   343</span>		5.57673380256401856059e+02, <span class="comment">// 0x40816D6315301825</span>
<a id="L344"></a><span class="ln">   344</span>		8.85919720756468632317e+03, <span class="comment">// 0x40C14D993E18F46D</span>
<a id="L345"></a><span class="ln">   345</span>		3.70146267776887834771e+04, <span class="comment">// 0x40E212D40E901566</span>
<a id="L346"></a><span class="ln">   346</span>	}
<a id="L347"></a><span class="ln">   347</span>	var q0S8 = [6]float64{
<a id="L348"></a><span class="ln">   348</span>		1.63776026895689824414e+02,  <span class="comment">// 0x406478D5365B39BC</span>
<a id="L349"></a><span class="ln">   349</span>		8.09834494656449805916e+03,  <span class="comment">// 0x40BFA2584E6B0563</span>
<a id="L350"></a><span class="ln">   350</span>		1.42538291419120476348e+05,  <span class="comment">// 0x4101665254D38C3F</span>
<a id="L351"></a><span class="ln">   351</span>		8.03309257119514397345e+05,  <span class="comment">// 0x412883DA83A52B43</span>
<a id="L352"></a><span class="ln">   352</span>		8.40501579819060512818e+05,  <span class="comment">// 0x4129A66B28DE0B3D</span>
<a id="L353"></a><span class="ln">   353</span>		-3.43899293537866615225e+05, <span class="comment">// 0xC114FD6D2C9530C5</span>
<a id="L354"></a><span class="ln">   354</span>	}
<a id="L355"></a><span class="ln">   355</span>	
<a id="L356"></a><span class="ln">   356</span>	<span class="comment">// for x in [8,4.5454]=1/[0.125,0.22001]</span>
<a id="L357"></a><span class="ln">   357</span>	var q0R5 = [6]float64{
<a id="L358"></a><span class="ln">   358</span>		1.84085963594515531381e-11, <span class="comment">// 0x3DB43D8F29CC8CD9</span>
<a id="L359"></a><span class="ln">   359</span>		7.32421766612684765896e-02, <span class="comment">// 0x3FB2BFFFD172B04C</span>
<a id="L360"></a><span class="ln">   360</span>		5.83563508962056953777e+00, <span class="comment">// 0x401757B0B9953DD3</span>
<a id="L361"></a><span class="ln">   361</span>		1.35111577286449829671e+02, <span class="comment">// 0x4060E3920A8788E9</span>
<a id="L362"></a><span class="ln">   362</span>		1.02724376596164097464e+03, <span class="comment">// 0x40900CF99DC8C481</span>
<a id="L363"></a><span class="ln">   363</span>		1.98997785864605384631e+03, <span class="comment">// 0x409F17E953C6E3A6</span>
<a id="L364"></a><span class="ln">   364</span>	}
<a id="L365"></a><span class="ln">   365</span>	var q0S5 = [6]float64{
<a id="L366"></a><span class="ln">   366</span>		8.27766102236537761883e+01,  <span class="comment">// 0x4054B1B3FB5E1543</span>
<a id="L367"></a><span class="ln">   367</span>		2.07781416421392987104e+03,  <span class="comment">// 0x40A03BA0DA21C0CE</span>
<a id="L368"></a><span class="ln">   368</span>		1.88472887785718085070e+04,  <span class="comment">// 0x40D267D27B591E6D</span>
<a id="L369"></a><span class="ln">   369</span>		5.67511122894947329769e+04,  <span class="comment">// 0x40EBB5E397E02372</span>
<a id="L370"></a><span class="ln">   370</span>		3.59767538425114471465e+04,  <span class="comment">// 0x40E191181F7A54A0</span>
<a id="L371"></a><span class="ln">   371</span>		-5.35434275601944773371e+03, <span class="comment">// 0xC0B4EA57BEDBC609</span>
<a id="L372"></a><span class="ln">   372</span>	}
<a id="L373"></a><span class="ln">   373</span>	
<a id="L374"></a><span class="ln">   374</span>	<span class="comment">// for x in [4.547,2.8571]=1/[0.2199,0.35001]</span>
<a id="L375"></a><span class="ln">   375</span>	var q0R3 = [6]float64{
<a id="L376"></a><span class="ln">   376</span>		4.37741014089738620906e-09, <span class="comment">// 0x3E32CD036ADECB82</span>
<a id="L377"></a><span class="ln">   377</span>		7.32411180042911447163e-02, <span class="comment">// 0x3FB2BFEE0E8D0842</span>
<a id="L378"></a><span class="ln">   378</span>		3.34423137516170720929e+00, <span class="comment">// 0x400AC0FC61149CF5</span>
<a id="L379"></a><span class="ln">   379</span>		4.26218440745412650017e+01, <span class="comment">// 0x40454F98962DAEDD</span>
<a id="L380"></a><span class="ln">   380</span>		1.70808091340565596283e+02, <span class="comment">// 0x406559DBE25EFD1F</span>
<a id="L381"></a><span class="ln">   381</span>		1.66733948696651168575e+02, <span class="comment">// 0x4064D77C81FA21E0</span>
<a id="L382"></a><span class="ln">   382</span>	}
<a id="L383"></a><span class="ln">   383</span>	var q0S3 = [6]float64{
<a id="L384"></a><span class="ln">   384</span>		4.87588729724587182091e+01,  <span class="comment">// 0x40486122BFE343A6</span>
<a id="L385"></a><span class="ln">   385</span>		7.09689221056606015736e+02,  <span class="comment">// 0x40862D8386544EB3</span>
<a id="L386"></a><span class="ln">   386</span>		3.70414822620111362994e+03,  <span class="comment">// 0x40ACF04BE44DFC63</span>
<a id="L387"></a><span class="ln">   387</span>		6.46042516752568917582e+03,  <span class="comment">// 0x40B93C6CD7C76A28</span>
<a id="L388"></a><span class="ln">   388</span>		2.51633368920368957333e+03,  <span class="comment">// 0x40A3A8AAD94FB1C0</span>
<a id="L389"></a><span class="ln">   389</span>		-1.49247451836156386662e+02, <span class="comment">// 0xC062A7EB201CF40F</span>
<a id="L390"></a><span class="ln">   390</span>	}
<a id="L391"></a><span class="ln">   391</span>	
<a id="L392"></a><span class="ln">   392</span>	<span class="comment">// for x in [2.8570,2]=1/[0.3499,0.5]</span>
<a id="L393"></a><span class="ln">   393</span>	var q0R2 = [6]float64{
<a id="L394"></a><span class="ln">   394</span>		1.50444444886983272379e-07, <span class="comment">// 0x3E84313B54F76BDB</span>
<a id="L395"></a><span class="ln">   395</span>		7.32234265963079278272e-02, <span class="comment">// 0x3FB2BEC53E883E34</span>
<a id="L396"></a><span class="ln">   396</span>		1.99819174093815998816e+00, <span class="comment">// 0x3FFFF897E727779C</span>
<a id="L397"></a><span class="ln">   397</span>		1.44956029347885735348e+01, <span class="comment">// 0x402CFDBFAAF96FE5</span>
<a id="L398"></a><span class="ln">   398</span>		3.16662317504781540833e+01, <span class="comment">// 0x403FAA8E29FBDC4A</span>
<a id="L399"></a><span class="ln">   399</span>		1.62527075710929267416e+01, <span class="comment">// 0x403040B171814BB4</span>
<a id="L400"></a><span class="ln">   400</span>	}
<a id="L401"></a><span class="ln">   401</span>	var q0S2 = [6]float64{
<a id="L402"></a><span class="ln">   402</span>		3.03655848355219184498e+01,  <span class="comment">// 0x403E5D96F7C07AED</span>
<a id="L403"></a><span class="ln">   403</span>		2.69348118608049844624e+02,  <span class="comment">// 0x4070D591E4D14B40</span>
<a id="L404"></a><span class="ln">   404</span>		8.44783757595320139444e+02,  <span class="comment">// 0x408A664522B3BF22</span>
<a id="L405"></a><span class="ln">   405</span>		8.82935845112488550512e+02,  <span class="comment">// 0x408B977C9C5CC214</span>
<a id="L406"></a><span class="ln">   406</span>		2.12666388511798828631e+02,  <span class="comment">// 0x406A95530E001365</span>
<a id="L407"></a><span class="ln">   407</span>		-5.31095493882666946917e+00, <span class="comment">// 0xC0153E6AF8B32931</span>
<a id="L408"></a><span class="ln">   408</span>	}
<a id="L409"></a><span class="ln">   409</span>	
<a id="L410"></a><span class="ln">   410</span>	func qzero(x float64) float64 {
<a id="L411"></a><span class="ln">   411</span>		var p, q [6]float64
<a id="L412"></a><span class="ln">   412</span>		if x &gt;= 8 {
<a id="L413"></a><span class="ln">   413</span>			p = q0R8
<a id="L414"></a><span class="ln">   414</span>			q = q0S8
<a id="L415"></a><span class="ln">   415</span>		} else if x &gt;= 4.5454 {
<a id="L416"></a><span class="ln">   416</span>			p = q0R5
<a id="L417"></a><span class="ln">   417</span>			q = q0S5
<a id="L418"></a><span class="ln">   418</span>		} else if x &gt;= 2.8571 {
<a id="L419"></a><span class="ln">   419</span>			p = q0R3
<a id="L420"></a><span class="ln">   420</span>			q = q0S3
<a id="L421"></a><span class="ln">   421</span>		} else if x &gt;= 2 {
<a id="L422"></a><span class="ln">   422</span>			p = q0R2
<a id="L423"></a><span class="ln">   423</span>			q = q0S2
<a id="L424"></a><span class="ln">   424</span>		}
<a id="L425"></a><span class="ln">   425</span>		z := 1 / (x * x)
<a id="L426"></a><span class="ln">   426</span>		r := p[0] + z*(p[1]+z*(p[2]+z*(p[3]+z*(p[4]+z*p[5]))))
<a id="L427"></a><span class="ln">   427</span>		s := 1 + z*(q[0]+z*(q[1]+z*(q[2]+z*(q[3]+z*(q[4]+z*q[5])))))
<a id="L428"></a><span class="ln">   428</span>		return (-0.125 + r/s) / x
<a id="L429"></a><span class="ln">   429</span>	}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

