<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/math/rand/rng.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/math/rand/rng.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2009 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	package rand
<a id="L6"></a><span class="ln">     6</span>	
<a id="L7"></a><span class="ln">     7</span>	<span class="comment">/*
</span><a id="L8"></a><span class="ln">     8</span>	<span class="comment"> * Uniform distribution
</span><a id="L9"></a><span class="ln">     9</span>	<span class="comment"> *
</span><a id="L10"></a><span class="ln">    10</span>	<span class="comment"> * algorithm by
</span><a id="L11"></a><span class="ln">    11</span>	<span class="comment"> * DP Mitchell and JA Reeds
</span><a id="L12"></a><span class="ln">    12</span>	<span class="comment"> */</span>
<a id="L13"></a><span class="ln">    13</span>	
<a id="L14"></a><span class="ln">    14</span>	const (
<a id="L15"></a><span class="ln">    15</span>		_LEN  = 607
<a id="L16"></a><span class="ln">    16</span>		_TAP  = 273
<a id="L17"></a><span class="ln">    17</span>		_MAX  = 1 &lt;&lt; 63
<a id="L18"></a><span class="ln">    18</span>		_MASK = _MAX - 1
<a id="L19"></a><span class="ln">    19</span>		_A    = 48271
<a id="L20"></a><span class="ln">    20</span>		_M    = (1 &lt;&lt; 31) - 1
<a id="L21"></a><span class="ln">    21</span>		_Q    = 44488
<a id="L22"></a><span class="ln">    22</span>		_R    = 3399
<a id="L23"></a><span class="ln">    23</span>	)
<a id="L24"></a><span class="ln">    24</span>	
<a id="L25"></a><span class="ln">    25</span>	var (
<a id="L26"></a><span class="ln">    26</span>		<span class="comment">// cooked random numbers</span>
<a id="L27"></a><span class="ln">    27</span>		<span class="comment">// the state of the rng</span>
<a id="L28"></a><span class="ln">    28</span>		<span class="comment">// after 780e10 iterations</span>
<a id="L29"></a><span class="ln">    29</span>		rng_cooked [_LEN]int64 = [...]int64{
<a id="L30"></a><span class="ln">    30</span>			5041579894721019882, 4646389086726545243, 1395769623340756751, 5333664234075297259,
<a id="L31"></a><span class="ln">    31</span>			2875692520355975054, 9033628115061424579, 7143218595135194537, 4812947590706362721,
<a id="L32"></a><span class="ln">    32</span>			7937252194349799378, 5307299880338848416, 8209348851763925077, 2115741599318814044,
<a id="L33"></a><span class="ln">    33</span>			4593015457530856296, 8140875735541888011, 3319429241265089026, 8619815648190321034,
<a id="L34"></a><span class="ln">    34</span>			1727074043483619500, 113108499721038619, 4569519971459345583, 5062833859075314731,
<a id="L35"></a><span class="ln">    35</span>			2387618771259064424, 2716131344356686112, 6559392774825876886, 7650093201692370310,
<a id="L36"></a><span class="ln">    36</span>			7684323884043752161, 257867835996031390, 6593456519409015164, 271327514973697897,
<a id="L37"></a><span class="ln">    37</span>			2789386447340118284, 1065192797246149621, 3344507881999356393, 4459797941780066633,
<a id="L38"></a><span class="ln">    38</span>			7465081662728599889, 1014950805555097187, 4449440729345990775, 3481109366438502643,
<a id="L39"></a><span class="ln">    39</span>			2418672789110888383, 5796562887576294778, 4484266064449540171, 3738982361971787048,
<a id="L40"></a><span class="ln">    40</span>			4523597184512354423, 10530508058128498, 8633833783282346118, 2625309929628791628,
<a id="L41"></a><span class="ln">    41</span>			8660405965245884302, 10162832508971942, 6540714680961817391, 7031802312784620857,
<a id="L42"></a><span class="ln">    42</span>			6240911277345944669, 831864355460801054, 8004434137542152891, 2116287251661052151,
<a id="L43"></a><span class="ln">    43</span>			2202309800992166967, 9161020366945053561, 4069299552407763864, 4936383537992622449,
<a id="L44"></a><span class="ln">    44</span>			457351505131524928, 342195045928179354, 2847771682816600509, 2068020115986376518,
<a id="L45"></a><span class="ln">    45</span>			4368649989588021065, 887231587095185257, 5563591506886576496, 6816225200251950296,
<a id="L46"></a><span class="ln">    46</span>			5616972787034086048, 8471809303394836566, 1686575021641186857, 4045484338074262002,
<a id="L47"></a><span class="ln">    47</span>			4244156215201778923, 7848217333783577387, 5632136521049761902, 833283142057835272,
<a id="L48"></a><span class="ln">    48</span>			9029726508369077193, 3243583134664087292, 4316371101804477087, 8937849979965997980,
<a id="L49"></a><span class="ln">    49</span>			6446940406810434101, 1679342092332374735, 6050638460742422078, 6993520719509581582,
<a id="L50"></a><span class="ln">    50</span>			7640877852514293609, 5881353426285907985, 812786550756860885, 4541845584483343330,
<a id="L51"></a><span class="ln">    51</span>			2725470216277009086, 4980675660146853729, 5210769080603236061, 8894283318990530821,
<a id="L52"></a><span class="ln">    52</span>			6326442804750084282, 1495812843684243920, 7069751578799128019, 7370257291860230865,
<a id="L53"></a><span class="ln">    53</span>			6756929275356942261, 4706794511633873654, 7824520467827898663, 8549875090542453214,
<a id="L54"></a><span class="ln">    54</span>			33650829478596156, 1328918435751322643, 7297902601803624459, 1011190183918857495,
<a id="L55"></a><span class="ln">    55</span>			2238025036817854944, 5147159997473910359, 896512091560522982, 2659470849286379941,
<a id="L56"></a><span class="ln">    56</span>			6097729358393448602, 1731725986304753684, 4106255841983812711, 8327155210721535508,
<a id="L57"></a><span class="ln">    57</span>			8477511620686074402, 5803876044675762232, 8435417780860221662, 5988852856651071244,
<a id="L58"></a><span class="ln">    58</span>			4715837297103951910, 7566171971264485114, 505808562678895611, 5070098180695063370,
<a id="L59"></a><span class="ln">    59</span>			842110666775871513, 572156825025677802, 1791881013492340891, 3393267094866038768,
<a id="L60"></a><span class="ln">    60</span>			3778721850472236509, 2352769483186201278, 1292459583847367458, 8897907043675088419,
<a id="L61"></a><span class="ln">    61</span>			5781809037144163536, 2733958794029492513, 5092019688680754699, 8996124554772526841,
<a id="L62"></a><span class="ln">    62</span>			4234737173186232084, 5027558287275472836, 4635198586344772304, 8687338893267139351,
<a id="L63"></a><span class="ln">    63</span>			5907508150730407386, 784756255473944452, 972392927514829904, 5422057694808175112,
<a id="L64"></a><span class="ln">    64</span>			5158420642969283891, 9048531678558643225, 2407211146698877100, 7583282216521099569,
<a id="L65"></a><span class="ln">    65</span>			3940796514530962282, 3341174631045206375, 3095313889586102949, 7405321895688238710,
<a id="L66"></a><span class="ln">    66</span>			5832080132947175283, 7890064875145919662, 8184139210799583195, 1149859861409226130,
<a id="L67"></a><span class="ln">    67</span>			1464597243840211302, 4641648007187991873, 3516491885471466898, 956288521791657692,
<a id="L68"></a><span class="ln">    68</span>			6657089965014657519, 5220884358887979358, 1796677326474620641, 5340761970648932916,
<a id="L69"></a><span class="ln">    69</span>			1147977171614181568, 5066037465548252321, 2574765911837859848, 1085848279845204775,
<a id="L70"></a><span class="ln">    70</span>			3350107529868390359, 6116438694366558490, 2107701075971293812, 1803294065921269267,
<a id="L71"></a><span class="ln">    71</span>			2469478054175558874, 7368243281019965984, 3791908367843677526, 185046971116456637,
<a id="L72"></a><span class="ln">    72</span>			2257095756513439648, 7217693971077460129, 909049953079504259, 7196649268545224266,
<a id="L73"></a><span class="ln">    73</span>			5637660345400869599, 3955544945427965183, 8057528650917418961, 4139268440301127643,
<a id="L74"></a><span class="ln">    74</span>			6621926588513568059, 1373361136802681441, 6527366231383600011, 3507654575162700890,
<a id="L75"></a><span class="ln">    75</span>			9202058512774729859, 1954818376891585542, 6640380907130175705, 8299563319178235687,
<a id="L76"></a><span class="ln">    76</span>			3901867355218954373, 7046310742295574065, 6847195391333990232, 1572638100518868053,
<a id="L77"></a><span class="ln">    77</span>			8850422670118399721, 3631909142291992901, 5158881091950831288, 2882958317343121593,
<a id="L78"></a><span class="ln">    78</span>			4763258931815816403, 6280052734341785344, 4243789408204964850, 2043464728020827976,
<a id="L79"></a><span class="ln">    79</span>			6545300466022085465, 4562580375758598164, 5495451168795427352, 1738312861590151095,
<a id="L80"></a><span class="ln">    80</span>			553004618757816492, 6895160632757959823, 8233623922264685171, 7139506338801360852,
<a id="L81"></a><span class="ln">    81</span>			8550891222387991669, 5535668688139305547, 2430933853350256242, 5401941257863201076,
<a id="L82"></a><span class="ln">    82</span>			8159640039107728799, 6157493831600770366, 7632066283658143750, 6308328381617103346,
<a id="L83"></a><span class="ln">    83</span>			3681878764086140361, 3289686137190109749, 6587997200611086848, 244714774258135476,
<a id="L84"></a><span class="ln">    84</span>			4079788377417136100, 8090302575944624335, 2945117363431356361, 864324395848741045,
<a id="L85"></a><span class="ln">    85</span>			3009039260312620700, 8430027460082534031, 401084700045993341, 7254622446438694921,
<a id="L86"></a><span class="ln">    86</span>			4707864159563588614, 5640248530963493951, 5982507712689997893, 3315098242282210105,
<a id="L87"></a><span class="ln">    87</span>			5503847578771918426, 3941971367175193882, 8118566580304798074, 3839261274019871296,
<a id="L88"></a><span class="ln">    88</span>			7062410411742090847, 741381002980207668, 6027994129690250817, 2497829994150063930,
<a id="L89"></a><span class="ln">    89</span>			6251390334426228834, 1368930247903518833, 8809096399316380241, 6492004350391900708,
<a id="L90"></a><span class="ln">    90</span>			2462145737463489636, 404828418920299174, 4153026434231690595, 261785715255475940,
<a id="L91"></a><span class="ln">    91</span>			5464715384600071357, 592710404378763017, 6764129236657751224, 8513655718539357449,
<a id="L92"></a><span class="ln">    92</span>			5820343663801914208, 385298524683789911, 5224135003438199467, 6303131641338802145,
<a id="L93"></a><span class="ln">    93</span>			7150122561309371392, 368107899140673753, 3115186834558311558, 2915636353584281051,
<a id="L94"></a><span class="ln">    94</span>			4782583894627718279, 6718292300699989587, 8387085186914375220, 3387513132024756289,
<a id="L95"></a><span class="ln">    95</span>			4654329375432538231, 8930667561363381602, 5374373436876319273, 7623042350483453954,
<a id="L96"></a><span class="ln">    96</span>			7725442901813263321, 9186225467561587250, 4091027289597503355, 2357631606492579800,
<a id="L97"></a><span class="ln">    97</span>			2530936820058611833, 1636551876240043639, 5564664674334965799, 1452244145334316253,
<a id="L98"></a><span class="ln">    98</span>			2061642381019690829, 1279580266495294036, 9108481583171221009, 6023278686734049809,
<a id="L99"></a><span class="ln">    99</span>			5007630032676973346, 2153168792952589781, 6720334534964750538, 6041546491134794105,
<a id="L100"></a><span class="ln">   100</span>			3433922409283786309, 2285479922797300912, 3110614940896576130, 6366559590722842893,
<a id="L101"></a><span class="ln">   101</span>			5418791419666136509, 7163298419643543757, 4891138053923696990, 580618510277907015,
<a id="L102"></a><span class="ln">   102</span>			1684034065251686769, 4429514767357295841, 330346578555450005, 1119637995812174675,
<a id="L103"></a><span class="ln">   103</span>			7177515271653460134, 4589042248470800257, 7693288629059004563, 143607045258444228,
<a id="L104"></a><span class="ln">   104</span>			246994305896273627, 866417324803099287, 6473547110565816071, 3092379936208876896,
<a id="L105"></a><span class="ln">   105</span>			2058427839513754051, 5133784708526867938, 8785882556301281247, 6149332666841167611,
<a id="L106"></a><span class="ln">   106</span>			8585842181454472135, 6137678347805511274, 2070447184436970006, 5708223427705576541,
<a id="L107"></a><span class="ln">   107</span>			5999657892458244504, 4358391411789012426, 325123008708389849, 6837621693887290924,
<a id="L108"></a><span class="ln">   108</span>			4843721905315627004, 6010651222149276415, 5398352198963874652, 4602025990114250980,
<a id="L109"></a><span class="ln">   109</span>			1044646352569048800, 9106614159853161675, 829256115228593269, 4919284369102997000,
<a id="L110"></a><span class="ln">   110</span>			2681532557646850893, 3681559472488511871, 5307999518958214035, 6334130388442829274,
<a id="L111"></a><span class="ln">   111</span>			2658708232916537604, 1163313865052186287, 581945337509520675, 3648778920718647903,
<a id="L112"></a><span class="ln">   112</span>			4423673246306544414, 1620799783996955743, 220828013409515943, 8150384699999389761,
<a id="L113"></a><span class="ln">   113</span>			4287360518296753003, 4590000184845883843, 5513660857261085186, 6964829100392774275,
<a id="L114"></a><span class="ln">   114</span>			478991688350776035, 8746140185685648781, 228500091334420247, 1356187007457302238,
<a id="L115"></a><span class="ln">   115</span>			3019253992034194581, 3152601605678500003, 430152752706002213, 5559581553696971176,
<a id="L116"></a><span class="ln">   116</span>			4916432985369275664, 663574931734554391, 3420773838927732076, 2868348622579915573,
<a id="L117"></a><span class="ln">   117</span>			1999319134044418520, 3328689518636282723, 2587672709781371173, 1517255313529399333,
<a id="L118"></a><span class="ln">   118</span>			3092343956317362483, 3662252519007064108, 972445599196498113, 7664865435875959367,
<a id="L119"></a><span class="ln">   119</span>			1708913533482282562, 6917817162668868494, 3217629022545312900, 2570043027221707107,
<a id="L120"></a><span class="ln">   120</span>			8739788839543624613, 2488075924621352812, 4694002395387436668, 4559628481798514356,
<a id="L121"></a><span class="ln">   121</span>			2997203966153298104, 1282559373026354493, 240113143146674385, 8665713329246516443,
<a id="L122"></a><span class="ln">   122</span>			628141331766346752, 4571950817186770476, 1472811188152235408, 7596648026010355826,
<a id="L123"></a><span class="ln">   123</span>			6091219417754424743, 7834161864828164065, 7103445518877254909, 4390861237357459201,
<a id="L124"></a><span class="ln">   124</span>			4442653864240571734, 8903482404847331368, 622261699494173647, 6037261250297213248,
<a id="L125"></a><span class="ln">   125</span>			504404948065709118, 7275215526217113061, 1011176780856001400, 2194750105623461063,
<a id="L126"></a><span class="ln">   126</span>			2623071828615234808, 5157313728073836108, 3738405111966602044, 2539767524076729570,
<a id="L127"></a><span class="ln">   127</span>			2467284396349269342, 5256026990536851868, 7841086888628396109, 6640857538655893162,
<a id="L128"></a><span class="ln">   128</span>			1202087339038317498, 2113514992440715978, 7534350895342931403, 4925284734898484745,
<a id="L129"></a><span class="ln">   129</span>			5145623771477493805, 8225140880134972332, 2719520354384050532, 9132346697815513771,
<a id="L130"></a><span class="ln">   130</span>			4332154495710163773, 7137789594094346916, 6994721091344268833, 6667228574869048934,
<a id="L131"></a><span class="ln">   131</span>			655440045726677499, 59934747298466858, 6124974028078036405, 8957774780655365418,
<a id="L132"></a><span class="ln">   132</span>			2332206071942466437, 1701056712286369627, 3154897383618636503, 1637766181387607527,
<a id="L133"></a><span class="ln">   133</span>			2460521277767576533, 197309393502684135, 643677854385267315, 2543179307861934850,
<a id="L134"></a><span class="ln">   134</span>			4350769010207485119, 4754652089410667672, 2015595502641514512, 7999059458976458608,
<a id="L135"></a><span class="ln">   135</span>			4287946071480840813, 8362686366770308971, 6486469209321732151, 3617727845841796026,
<a id="L136"></a><span class="ln">   136</span>			7554353525834302244, 4450022655153542367, 1605195740213535749, 5327014565305508387,
<a id="L137"></a><span class="ln">   137</span>			4626575813550328320, 2692222020597705149, 241045573717249868, 5098046974627094010,
<a id="L138"></a><span class="ln">   138</span>			7916882295460730264, 884817090297530579, 5329160409530630596, 7790979528857726136,
<a id="L139"></a><span class="ln">   139</span>			4955070238059373407, 4918537275422674302, 3008076183950404629, 3007769226071157901,
<a id="L140"></a><span class="ln">   140</span>			2470346235617803020, 8928702772696731736, 7856187920214445904, 4474874585391974885,
<a id="L141"></a><span class="ln">   141</span>			7900176660600710914, 2140571127916226672, 2425445057265199971, 2486055153341847830,
<a id="L142"></a><span class="ln">   142</span>			4186670094382025798, 1883939007446035042, 8808666044074867985, 3734134241178479257,
<a id="L143"></a><span class="ln">   143</span>			4065968871360089196, 6953124200385847784, 1305686814738899057, 1637739099014457647,
<a id="L144"></a><span class="ln">   144</span>			3656125660947993209, 3966759634633167020, 3106378204088556331, 6328899822778449810,
<a id="L145"></a><span class="ln">   145</span>			4565385105440252958, 1979884289539493806, 2331793186920865425, 3783206694208922581,
<a id="L146"></a><span class="ln">   146</span>			8464961209802336085, 2843963751609577687, 3030678195484896323, 4793717574095772604,
<a id="L147"></a><span class="ln">   147</span>			4459239494808162889, 402587895800087237, 8057891408711167515, 4541888170938985079,
<a id="L148"></a><span class="ln">   148</span>			1042662272908816815, 5557303057122568958, 2647678726283249984, 2144477441549833761,
<a id="L149"></a><span class="ln">   149</span>			5806352215355387087, 7117771003473903623, 5916597177708541638, 462597715452321361,
<a id="L150"></a><span class="ln">   150</span>			8833658097025758785, 5970273481425315300, 563813119381731307, 2768349550652697015,
<a id="L151"></a><span class="ln">   151</span>			1598828206250873866, 5206393647403558110, 6235043485709261823, 3152217402014639496,
<a id="L152"></a><span class="ln">   152</span>			8469693267274066490, 125672920241807416, 5311079624024060938, 6663754932310491587,
<a id="L153"></a><span class="ln">   153</span>			8736848295048751716, 4488039774992061878, 5923302823487327109, 140891791083103236,
<a id="L154"></a><span class="ln">   154</span>			7414942793393574290, 7990420780896957397, 4317817392807076702, 3625184369705367340,
<a id="L155"></a><span class="ln">   155</span>			2740722765288122703, 5743100009702758344, 5997898640509039159, 8854493341352484163,
<a id="L156"></a><span class="ln">   156</span>			5242208035432907801, 701338899890987198, 7609280429197514109, 3020985755112334161,
<a id="L157"></a><span class="ln">   157</span>			6651322707055512866, 2635195723621160615, 5144520864246028816, 1035086515727829828,
<a id="L158"></a><span class="ln">   158</span>			1567242097116389047, 8172389260191636581, 6337820351429292273, 2163012566996458925,
<a id="L159"></a><span class="ln">   159</span>			2743190902890262681, 1906367633221323427, 6011544915663598137, 5932255307352610768,
<a id="L160"></a><span class="ln">   160</span>			2241128460406315459, 895504896216695588, 3094483003111372717, 4583857460292963101,
<a id="L161"></a><span class="ln">   161</span>			9079887171656594975, 8839289181930711403, 5762740387243057873, 4225072055348026230,
<a id="L162"></a><span class="ln">   162</span>			1838220598389033063, 3801620336801580414, 8823526620080073856, 1776617605585100335,
<a id="L163"></a><span class="ln">   163</span>			7899055018877642622, 5421679761463003041, 5521102963086275121, 4248279443559365898,
<a id="L164"></a><span class="ln">   164</span>			8735487530905098534, 1760527091573692978, 7142485049657745894, 8222656872927218123,
<a id="L165"></a><span class="ln">   165</span>			4969531564923704323, 3394475942196872480, 6424174453260338141, 359248545074932887,
<a id="L166"></a><span class="ln">   166</span>			3273651282831730598, 6797106199797138596, 3030918217665093212, 145600834617314036,
<a id="L167"></a><span class="ln">   167</span>			6036575856065626233, 740416251634527158, 7080427635449935582, 6951781370868335478,
<a id="L168"></a><span class="ln">   168</span>			399922722363687927, 294902314447253185, 7844950936339178523, 880320858634709042,
<a id="L169"></a><span class="ln">   169</span>			6192655680808675579, 411604686384710388, 9026808440365124461, 6440783557497587732,
<a id="L170"></a><span class="ln">   170</span>			4615674634722404292, 539897290441580544, 2096238225866883852, 8751955639408182687,
<a id="L171"></a><span class="ln">   171</span>			1907224908052289603, 7381039757301768559, 6157238513393239656, 7749994231914157575,
<a id="L172"></a><span class="ln">   172</span>			8629571604380892756, 5280433031239081479, 7101611890139813254, 2479018537985767835,
<a id="L173"></a><span class="ln">   173</span>			7169176924412769570, 7942066497793203302, 1357759729055557688, 2278447439451174845,
<a id="L174"></a><span class="ln">   174</span>			3625338785743880657, 6477479539006708521, 8976185375579272206, 5511371554711836120,
<a id="L175"></a><span class="ln">   175</span>			1326024180520890843, 7537449876596048829, 5464680203499696154, 3189671183162196045,
<a id="L176"></a><span class="ln">   176</span>			6346751753565857109, 241159987320630307, 3095793449658682053, 8978332846736310159,
<a id="L177"></a><span class="ln">   177</span>			2902794662273147216, 7208698530190629697, 7276901792339343736, 1732385229314443140,
<a id="L178"></a><span class="ln">   178</span>			4133292154170828382, 2918308698224194548, 1519461397937144458, 5293934712616591764,
<a id="L179"></a><span class="ln">   179</span>			4922828954023452664, 2879211533496425641, 5896236396443472108, 8465043815351752425,
<a id="L180"></a><span class="ln">   180</span>			7329020396871624740, 8915471717014488588, 2944902635677463047, 7052079073493465134,
<a id="L181"></a><span class="ln">   181</span>			8382142935188824023, 9103922860780351547, 4152330101494654406,
<a id="L182"></a><span class="ln">   182</span>		}
<a id="L183"></a><span class="ln">   183</span>	)
<a id="L184"></a><span class="ln">   184</span>	
<a id="L185"></a><span class="ln">   185</span>	type rngSource struct {
<a id="L186"></a><span class="ln">   186</span>		tap  int         <span class="comment">// index into vec</span>
<a id="L187"></a><span class="ln">   187</span>		feed int         <span class="comment">// index into vec</span>
<a id="L188"></a><span class="ln">   188</span>		vec  [_LEN]int64 <span class="comment">// current feedback register</span>
<a id="L189"></a><span class="ln">   189</span>	}
<a id="L190"></a><span class="ln">   190</span>	
<a id="L191"></a><span class="ln">   191</span>	<span class="comment">// seed rng x[n+1] = 48271 * x[n] mod (2**31 - 1)</span>
<a id="L192"></a><span class="ln">   192</span>	func seedrand(x int32) int32 {
<a id="L193"></a><span class="ln">   193</span>		hi := x / _Q
<a id="L194"></a><span class="ln">   194</span>		lo := x % _Q
<a id="L195"></a><span class="ln">   195</span>		x = _A*lo - _R*hi
<a id="L196"></a><span class="ln">   196</span>		if x &lt; 0 {
<a id="L197"></a><span class="ln">   197</span>			x += _M
<a id="L198"></a><span class="ln">   198</span>		}
<a id="L199"></a><span class="ln">   199</span>		return x
<a id="L200"></a><span class="ln">   200</span>	}
<a id="L201"></a><span class="ln">   201</span>	
<a id="L202"></a><span class="ln">   202</span>	<span class="comment">// Seed uses the provided seed value to initialize the generator to a deterministic state.</span>
<a id="L203"></a><span class="ln">   203</span>	func (rng *rngSource) Seed(seed int64) {
<a id="L204"></a><span class="ln">   204</span>		rng.tap = 0
<a id="L205"></a><span class="ln">   205</span>		rng.feed = _LEN - _TAP
<a id="L206"></a><span class="ln">   206</span>	
<a id="L207"></a><span class="ln">   207</span>		seed = seed % _M
<a id="L208"></a><span class="ln">   208</span>		if seed &lt; 0 {
<a id="L209"></a><span class="ln">   209</span>			seed += _M
<a id="L210"></a><span class="ln">   210</span>		}
<a id="L211"></a><span class="ln">   211</span>		if seed == 0 {
<a id="L212"></a><span class="ln">   212</span>			seed = 89482311
<a id="L213"></a><span class="ln">   213</span>		}
<a id="L214"></a><span class="ln">   214</span>	
<a id="L215"></a><span class="ln">   215</span>		x := int32(seed)
<a id="L216"></a><span class="ln">   216</span>		for i := -20; i &lt; _LEN; i++ {
<a id="L217"></a><span class="ln">   217</span>			x = seedrand(x)
<a id="L218"></a><span class="ln">   218</span>			if i &gt;= 0 {
<a id="L219"></a><span class="ln">   219</span>				var u int64
<a id="L220"></a><span class="ln">   220</span>				u = int64(x) &lt;&lt; 40
<a id="L221"></a><span class="ln">   221</span>				x = seedrand(x)
<a id="L222"></a><span class="ln">   222</span>				u ^= int64(x) &lt;&lt; 20
<a id="L223"></a><span class="ln">   223</span>				x = seedrand(x)
<a id="L224"></a><span class="ln">   224</span>				u ^= int64(x)
<a id="L225"></a><span class="ln">   225</span>				u ^= rng_cooked[i]
<a id="L226"></a><span class="ln">   226</span>				rng.vec[i] = u &amp; _MASK
<a id="L227"></a><span class="ln">   227</span>			}
<a id="L228"></a><span class="ln">   228</span>		}
<a id="L229"></a><span class="ln">   229</span>	}
<a id="L230"></a><span class="ln">   230</span>	
<a id="L231"></a><span class="ln">   231</span>	<span class="comment">// Int63 returns a non-negative pseudo-random 63-bit integer as an int64.</span>
<a id="L232"></a><span class="ln">   232</span>	func (rng *rngSource) Int63() int64 {
<a id="L233"></a><span class="ln">   233</span>		rng.tap--
<a id="L234"></a><span class="ln">   234</span>		if rng.tap &lt; 0 {
<a id="L235"></a><span class="ln">   235</span>			rng.tap += _LEN
<a id="L236"></a><span class="ln">   236</span>		}
<a id="L237"></a><span class="ln">   237</span>	
<a id="L238"></a><span class="ln">   238</span>		rng.feed--
<a id="L239"></a><span class="ln">   239</span>		if rng.feed &lt; 0 {
<a id="L240"></a><span class="ln">   240</span>			rng.feed += _LEN
<a id="L241"></a><span class="ln">   241</span>		}
<a id="L242"></a><span class="ln">   242</span>	
<a id="L243"></a><span class="ln">   243</span>		x := (rng.vec[rng.feed] + rng.vec[rng.tap]) &amp; _MASK
<a id="L244"></a><span class="ln">   244</span>		rng.vec[rng.feed] = x
<a id="L245"></a><span class="ln">   245</span>		return x
<a id="L246"></a><span class="ln">   246</span>	}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

