<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/math/cmplx/tan.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/math/cmplx/tan.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2010 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	package cmplx
<a id="L6"></a><span class="ln">     6</span>	
<a id="L7"></a><span class="ln">     7</span>	import &#34;math&#34;
<a id="L8"></a><span class="ln">     8</span>	
<a id="L9"></a><span class="ln">     9</span>	<span class="comment">// The original C code, the long comment, and the constants</span>
<a id="L10"></a><span class="ln">    10</span>	<span class="comment">// below are from http://netlib.sandia.gov/cephes/c9x-complex/clog.c.</span>
<a id="L11"></a><span class="ln">    11</span>	<span class="comment">// The go code is a simplified version of the original C.</span>
<a id="L12"></a><span class="ln">    12</span>	<span class="comment">//</span>
<a id="L13"></a><span class="ln">    13</span>	<span class="comment">// Cephes Math Library Release 2.8:  June, 2000</span>
<a id="L14"></a><span class="ln">    14</span>	<span class="comment">// Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier</span>
<a id="L15"></a><span class="ln">    15</span>	<span class="comment">//</span>
<a id="L16"></a><span class="ln">    16</span>	<span class="comment">// The readme file at http://netlib.sandia.gov/cephes/ says:</span>
<a id="L17"></a><span class="ln">    17</span>	<span class="comment">//    Some software in this archive may be from the book _Methods and</span>
<a id="L18"></a><span class="ln">    18</span>	<span class="comment">// Programs for Mathematical Functions_ (Prentice-Hall or Simon &amp; Schuster</span>
<a id="L19"></a><span class="ln">    19</span>	<span class="comment">// International, 1989) or from the Cephes Mathematical Library, a</span>
<a id="L20"></a><span class="ln">    20</span>	<span class="comment">// commercial product. In either event, it is copyrighted by the author.</span>
<a id="L21"></a><span class="ln">    21</span>	<span class="comment">// What you see here may be used freely but it comes with no support or</span>
<a id="L22"></a><span class="ln">    22</span>	<span class="comment">// guarantee.</span>
<a id="L23"></a><span class="ln">    23</span>	<span class="comment">//</span>
<a id="L24"></a><span class="ln">    24</span>	<span class="comment">//   The two known misprints in the book are repaired here in the</span>
<a id="L25"></a><span class="ln">    25</span>	<span class="comment">// source listings for the gamma function and the incomplete beta</span>
<a id="L26"></a><span class="ln">    26</span>	<span class="comment">// integral.</span>
<a id="L27"></a><span class="ln">    27</span>	<span class="comment">//</span>
<a id="L28"></a><span class="ln">    28</span>	<span class="comment">//   Stephen L. Moshier</span>
<a id="L29"></a><span class="ln">    29</span>	<span class="comment">//   moshier@na-net.ornl.gov</span>
<a id="L30"></a><span class="ln">    30</span>	
<a id="L31"></a><span class="ln">    31</span>	<span class="comment">// Complex circular tangent</span>
<a id="L32"></a><span class="ln">    32</span>	<span class="comment">//</span>
<a id="L33"></a><span class="ln">    33</span>	<span class="comment">// DESCRIPTION:</span>
<a id="L34"></a><span class="ln">    34</span>	<span class="comment">//</span>
<a id="L35"></a><span class="ln">    35</span>	<span class="comment">// If</span>
<a id="L36"></a><span class="ln">    36</span>	<span class="comment">//     z = x + iy,</span>
<a id="L37"></a><span class="ln">    37</span>	<span class="comment">//</span>
<a id="L38"></a><span class="ln">    38</span>	<span class="comment">// then</span>
<a id="L39"></a><span class="ln">    39</span>	<span class="comment">//</span>
<a id="L40"></a><span class="ln">    40</span>	<span class="comment">//           sin 2x  +  i sinh 2y</span>
<a id="L41"></a><span class="ln">    41</span>	<span class="comment">//     w  =  --------------------.</span>
<a id="L42"></a><span class="ln">    42</span>	<span class="comment">//            cos 2x  +  cosh 2y</span>
<a id="L43"></a><span class="ln">    43</span>	<span class="comment">//</span>
<a id="L44"></a><span class="ln">    44</span>	<span class="comment">// On the real axis the denominator is zero at odd multiples</span>
<a id="L45"></a><span class="ln">    45</span>	<span class="comment">// of PI/2.  The denominator is evaluated by its Taylor</span>
<a id="L46"></a><span class="ln">    46</span>	<span class="comment">// series near these points.</span>
<a id="L47"></a><span class="ln">    47</span>	<span class="comment">//</span>
<a id="L48"></a><span class="ln">    48</span>	<span class="comment">// ctan(z) = -i ctanh(iz).</span>
<a id="L49"></a><span class="ln">    49</span>	<span class="comment">//</span>
<a id="L50"></a><span class="ln">    50</span>	<span class="comment">// ACCURACY:</span>
<a id="L51"></a><span class="ln">    51</span>	<span class="comment">//</span>
<a id="L52"></a><span class="ln">    52</span>	<span class="comment">//                      Relative error:</span>
<a id="L53"></a><span class="ln">    53</span>	<span class="comment">// arithmetic   domain     # trials      peak         rms</span>
<a id="L54"></a><span class="ln">    54</span>	<span class="comment">//    DEC       -10,+10      5200       7.1e-17     1.6e-17</span>
<a id="L55"></a><span class="ln">    55</span>	<span class="comment">//    IEEE      -10,+10     30000       7.2e-16     1.2e-16</span>
<a id="L56"></a><span class="ln">    56</span>	<span class="comment">// Also tested by ctan * ccot = 1 and catan(ctan(z))  =  z.</span>
<a id="L57"></a><span class="ln">    57</span>	
<a id="L58"></a><span class="ln">    58</span>	<span class="comment">// Tan returns the tangent of x.</span>
<a id="L59"></a><span class="ln">    59</span>	func Tan(x complex128) complex128 {
<a id="L60"></a><span class="ln">    60</span>		d := math.Cos(2*real(x)) + math.Cosh(2*imag(x))
<a id="L61"></a><span class="ln">    61</span>		if math.Abs(d) &lt; 0.25 {
<a id="L62"></a><span class="ln">    62</span>			d = tanSeries(x)
<a id="L63"></a><span class="ln">    63</span>		}
<a id="L64"></a><span class="ln">    64</span>		if d == 0 {
<a id="L65"></a><span class="ln">    65</span>			return Inf()
<a id="L66"></a><span class="ln">    66</span>		}
<a id="L67"></a><span class="ln">    67</span>		return complex(math.Sin(2*real(x))/d, math.Sinh(2*imag(x))/d)
<a id="L68"></a><span class="ln">    68</span>	}
<a id="L69"></a><span class="ln">    69</span>	
<a id="L70"></a><span class="ln">    70</span>	<span class="comment">// Complex hyperbolic tangent</span>
<a id="L71"></a><span class="ln">    71</span>	<span class="comment">//</span>
<a id="L72"></a><span class="ln">    72</span>	<span class="comment">// DESCRIPTION:</span>
<a id="L73"></a><span class="ln">    73</span>	<span class="comment">//</span>
<a id="L74"></a><span class="ln">    74</span>	<span class="comment">// tanh z = (sinh 2x  +  i sin 2y) / (cosh 2x + cos 2y) .</span>
<a id="L75"></a><span class="ln">    75</span>	<span class="comment">//</span>
<a id="L76"></a><span class="ln">    76</span>	<span class="comment">// ACCURACY:</span>
<a id="L77"></a><span class="ln">    77</span>	<span class="comment">//</span>
<a id="L78"></a><span class="ln">    78</span>	<span class="comment">//                      Relative error:</span>
<a id="L79"></a><span class="ln">    79</span>	<span class="comment">// arithmetic   domain     # trials      peak         rms</span>
<a id="L80"></a><span class="ln">    80</span>	<span class="comment">//    IEEE      -10,+10     30000       1.7e-14     2.4e-16</span>
<a id="L81"></a><span class="ln">    81</span>	
<a id="L82"></a><span class="ln">    82</span>	<span class="comment">// Tanh returns the hyperbolic tangent of x.</span>
<a id="L83"></a><span class="ln">    83</span>	func Tanh(x complex128) complex128 {
<a id="L84"></a><span class="ln">    84</span>		d := math.Cosh(2*real(x)) + math.Cos(2*imag(x))
<a id="L85"></a><span class="ln">    85</span>		if d == 0 {
<a id="L86"></a><span class="ln">    86</span>			return Inf()
<a id="L87"></a><span class="ln">    87</span>		}
<a id="L88"></a><span class="ln">    88</span>		return complex(math.Sinh(2*real(x))/d, math.Sin(2*imag(x))/d)
<a id="L89"></a><span class="ln">    89</span>	}
<a id="L90"></a><span class="ln">    90</span>	
<a id="L91"></a><span class="ln">    91</span>	<span class="comment">// Program to subtract nearest integer multiple of PI</span>
<a id="L92"></a><span class="ln">    92</span>	func reducePi(x float64) float64 {
<a id="L93"></a><span class="ln">    93</span>		const (
<a id="L94"></a><span class="ln">    94</span>			<span class="comment">// extended precision value of PI:</span>
<a id="L95"></a><span class="ln">    95</span>			DP1 = 3.14159265160560607910E0   <span class="comment">// ?? 0x400921fb54000000</span>
<a id="L96"></a><span class="ln">    96</span>			DP2 = 1.98418714791870343106E-9  <span class="comment">// ?? 0x3e210b4610000000</span>
<a id="L97"></a><span class="ln">    97</span>			DP3 = 1.14423774522196636802E-17 <span class="comment">// ?? 0x3c6a62633145c06e</span>
<a id="L98"></a><span class="ln">    98</span>		)
<a id="L99"></a><span class="ln">    99</span>		t := x / math.Pi
<a id="L100"></a><span class="ln">   100</span>		if t &gt;= 0 {
<a id="L101"></a><span class="ln">   101</span>			t += 0.5
<a id="L102"></a><span class="ln">   102</span>		} else {
<a id="L103"></a><span class="ln">   103</span>			t -= 0.5
<a id="L104"></a><span class="ln">   104</span>		}
<a id="L105"></a><span class="ln">   105</span>		t = float64(int64(t)) <span class="comment">// int64(t) = the multiple</span>
<a id="L106"></a><span class="ln">   106</span>		return ((x - t*DP1) - t*DP2) - t*DP3
<a id="L107"></a><span class="ln">   107</span>	}
<a id="L108"></a><span class="ln">   108</span>	
<a id="L109"></a><span class="ln">   109</span>	<span class="comment">// Taylor series expansion for cosh(2y) - cos(2x)</span>
<a id="L110"></a><span class="ln">   110</span>	func tanSeries(z complex128) float64 {
<a id="L111"></a><span class="ln">   111</span>		const MACHEP = 1.0 / (1 &lt;&lt; 53)
<a id="L112"></a><span class="ln">   112</span>		x := math.Abs(2 * real(z))
<a id="L113"></a><span class="ln">   113</span>		y := math.Abs(2 * imag(z))
<a id="L114"></a><span class="ln">   114</span>		x = reducePi(x)
<a id="L115"></a><span class="ln">   115</span>		x = x * x
<a id="L116"></a><span class="ln">   116</span>		y = y * y
<a id="L117"></a><span class="ln">   117</span>		x2 := 1.0
<a id="L118"></a><span class="ln">   118</span>		y2 := 1.0
<a id="L119"></a><span class="ln">   119</span>		f := 1.0
<a id="L120"></a><span class="ln">   120</span>		rn := 0.0
<a id="L121"></a><span class="ln">   121</span>		d := 0.0
<a id="L122"></a><span class="ln">   122</span>		for {
<a id="L123"></a><span class="ln">   123</span>			rn += 1
<a id="L124"></a><span class="ln">   124</span>			f *= rn
<a id="L125"></a><span class="ln">   125</span>			rn += 1
<a id="L126"></a><span class="ln">   126</span>			f *= rn
<a id="L127"></a><span class="ln">   127</span>			x2 *= x
<a id="L128"></a><span class="ln">   128</span>			y2 *= y
<a id="L129"></a><span class="ln">   129</span>			t := y2 + x2
<a id="L130"></a><span class="ln">   130</span>			t /= f
<a id="L131"></a><span class="ln">   131</span>			d += t
<a id="L132"></a><span class="ln">   132</span>	
<a id="L133"></a><span class="ln">   133</span>			rn += 1
<a id="L134"></a><span class="ln">   134</span>			f *= rn
<a id="L135"></a><span class="ln">   135</span>			rn += 1
<a id="L136"></a><span class="ln">   136</span>			f *= rn
<a id="L137"></a><span class="ln">   137</span>			x2 *= x
<a id="L138"></a><span class="ln">   138</span>			y2 *= y
<a id="L139"></a><span class="ln">   139</span>			t = y2 - x2
<a id="L140"></a><span class="ln">   140</span>			t /= f
<a id="L141"></a><span class="ln">   141</span>			d += t
<a id="L142"></a><span class="ln">   142</span>			if math.Abs(t/d) &lt;= MACHEP {
<a id="L143"></a><span class="ln">   143</span>				break
<a id="L144"></a><span class="ln">   144</span>			}
<a id="L145"></a><span class="ln">   145</span>		}
<a id="L146"></a><span class="ln">   146</span>		return d
<a id="L147"></a><span class="ln">   147</span>	}
<a id="L148"></a><span class="ln">   148</span>	
<a id="L149"></a><span class="ln">   149</span>	<span class="comment">// Complex circular cotangent</span>
<a id="L150"></a><span class="ln">   150</span>	<span class="comment">//</span>
<a id="L151"></a><span class="ln">   151</span>	<span class="comment">// DESCRIPTION:</span>
<a id="L152"></a><span class="ln">   152</span>	<span class="comment">//</span>
<a id="L153"></a><span class="ln">   153</span>	<span class="comment">// If</span>
<a id="L154"></a><span class="ln">   154</span>	<span class="comment">//     z = x + iy,</span>
<a id="L155"></a><span class="ln">   155</span>	<span class="comment">//</span>
<a id="L156"></a><span class="ln">   156</span>	<span class="comment">// then</span>
<a id="L157"></a><span class="ln">   157</span>	<span class="comment">//</span>
<a id="L158"></a><span class="ln">   158</span>	<span class="comment">//           sin 2x  -  i sinh 2y</span>
<a id="L159"></a><span class="ln">   159</span>	<span class="comment">//     w  =  --------------------.</span>
<a id="L160"></a><span class="ln">   160</span>	<span class="comment">//            cosh 2y  -  cos 2x</span>
<a id="L161"></a><span class="ln">   161</span>	<span class="comment">//</span>
<a id="L162"></a><span class="ln">   162</span>	<span class="comment">// On the real axis, the denominator has zeros at even</span>
<a id="L163"></a><span class="ln">   163</span>	<span class="comment">// multiples of PI/2.  Near these points it is evaluated</span>
<a id="L164"></a><span class="ln">   164</span>	<span class="comment">// by a Taylor series.</span>
<a id="L165"></a><span class="ln">   165</span>	<span class="comment">//</span>
<a id="L166"></a><span class="ln">   166</span>	<span class="comment">// ACCURACY:</span>
<a id="L167"></a><span class="ln">   167</span>	<span class="comment">//</span>
<a id="L168"></a><span class="ln">   168</span>	<span class="comment">//                      Relative error:</span>
<a id="L169"></a><span class="ln">   169</span>	<span class="comment">// arithmetic   domain     # trials      peak         rms</span>
<a id="L170"></a><span class="ln">   170</span>	<span class="comment">//    DEC       -10,+10      3000       6.5e-17     1.6e-17</span>
<a id="L171"></a><span class="ln">   171</span>	<span class="comment">//    IEEE      -10,+10     30000       9.2e-16     1.2e-16</span>
<a id="L172"></a><span class="ln">   172</span>	<span class="comment">// Also tested by ctan * ccot = 1 + i0.</span>
<a id="L173"></a><span class="ln">   173</span>	
<a id="L174"></a><span class="ln">   174</span>	<span class="comment">// Cot returns the cotangent of x.</span>
<a id="L175"></a><span class="ln">   175</span>	func Cot(x complex128) complex128 {
<a id="L176"></a><span class="ln">   176</span>		d := math.Cosh(2*imag(x)) - math.Cos(2*real(x))
<a id="L177"></a><span class="ln">   177</span>		if math.Abs(d) &lt; 0.25 {
<a id="L178"></a><span class="ln">   178</span>			d = tanSeries(x)
<a id="L179"></a><span class="ln">   179</span>		}
<a id="L180"></a><span class="ln">   180</span>		if d == 0 {
<a id="L181"></a><span class="ln">   181</span>			return Inf()
<a id="L182"></a><span class="ln">   182</span>		}
<a id="L183"></a><span class="ln">   183</span>		return complex(math.Sin(2*real(x))/d, -math.Sinh(2*imag(x))/d)
<a id="L184"></a><span class="ln">   184</span>	}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

