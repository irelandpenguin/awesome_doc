<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/image/color/ycbcr.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/image/color/ycbcr.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2011 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	package color
<a id="L6"></a><span class="ln">     6</span>	
<a id="L7"></a><span class="ln">     7</span>	<span class="comment">// RGBToYCbCr converts an RGB triple to a Y&#39;CbCr triple.</span>
<a id="L8"></a><span class="ln">     8</span>	func RGBToYCbCr(r, g, b uint8) (uint8, uint8, uint8) {
<a id="L9"></a><span class="ln">     9</span>		<span class="comment">// The JFIF specification says:</span>
<a id="L10"></a><span class="ln">    10</span>		<span class="comment">//	Y&#39; =  0.2990*R + 0.5870*G + 0.1140*B</span>
<a id="L11"></a><span class="ln">    11</span>		<span class="comment">//	Cb = -0.1687*R - 0.3313*G + 0.5000*B + 128</span>
<a id="L12"></a><span class="ln">    12</span>		<span class="comment">//	Cr =  0.5000*R - 0.4187*G - 0.0813*B + 128</span>
<a id="L13"></a><span class="ln">    13</span>		<span class="comment">// http://www.w3.org/Graphics/JPEG/jfif3.pdf says Y but means Y&#39;.</span>
<a id="L14"></a><span class="ln">    14</span>		r1 := int(r)
<a id="L15"></a><span class="ln">    15</span>		g1 := int(g)
<a id="L16"></a><span class="ln">    16</span>		b1 := int(b)
<a id="L17"></a><span class="ln">    17</span>		yy := (19595*r1 + 38470*g1 + 7471*b1 + 1&lt;&lt;15) &gt;&gt; 16
<a id="L18"></a><span class="ln">    18</span>		cb := (-11056*r1 - 21712*g1 + 32768*b1 + 257&lt;&lt;15) &gt;&gt; 16
<a id="L19"></a><span class="ln">    19</span>		cr := (32768*r1 - 27440*g1 - 5328*b1 + 257&lt;&lt;15) &gt;&gt; 16
<a id="L20"></a><span class="ln">    20</span>		if yy &lt; 0 {
<a id="L21"></a><span class="ln">    21</span>			yy = 0
<a id="L22"></a><span class="ln">    22</span>		} else if yy &gt; 255 {
<a id="L23"></a><span class="ln">    23</span>			yy = 255
<a id="L24"></a><span class="ln">    24</span>		}
<a id="L25"></a><span class="ln">    25</span>		if cb &lt; 0 {
<a id="L26"></a><span class="ln">    26</span>			cb = 0
<a id="L27"></a><span class="ln">    27</span>		} else if cb &gt; 255 {
<a id="L28"></a><span class="ln">    28</span>			cb = 255
<a id="L29"></a><span class="ln">    29</span>		}
<a id="L30"></a><span class="ln">    30</span>		if cr &lt; 0 {
<a id="L31"></a><span class="ln">    31</span>			cr = 0
<a id="L32"></a><span class="ln">    32</span>		} else if cr &gt; 255 {
<a id="L33"></a><span class="ln">    33</span>			cr = 255
<a id="L34"></a><span class="ln">    34</span>		}
<a id="L35"></a><span class="ln">    35</span>		return uint8(yy), uint8(cb), uint8(cr)
<a id="L36"></a><span class="ln">    36</span>	}
<a id="L37"></a><span class="ln">    37</span>	
<a id="L38"></a><span class="ln">    38</span>	<span class="comment">// YCbCrToRGB converts a Y&#39;CbCr triple to an RGB triple.</span>
<a id="L39"></a><span class="ln">    39</span>	func YCbCrToRGB(y, cb, cr uint8) (uint8, uint8, uint8) {
<a id="L40"></a><span class="ln">    40</span>		<span class="comment">// The JFIF specification says:</span>
<a id="L41"></a><span class="ln">    41</span>		<span class="comment">//	R = Y&#39; + 1.40200*(Cr-128)</span>
<a id="L42"></a><span class="ln">    42</span>		<span class="comment">//	G = Y&#39; - 0.34414*(Cb-128) - 0.71414*(Cr-128)</span>
<a id="L43"></a><span class="ln">    43</span>		<span class="comment">//	B = Y&#39; + 1.77200*(Cb-128)</span>
<a id="L44"></a><span class="ln">    44</span>		<span class="comment">// http://www.w3.org/Graphics/JPEG/jfif3.pdf says Y but means Y&#39;.</span>
<a id="L45"></a><span class="ln">    45</span>		yy1 := int(y)&lt;&lt;16 + 1&lt;&lt;15
<a id="L46"></a><span class="ln">    46</span>		cb1 := int(cb) - 128
<a id="L47"></a><span class="ln">    47</span>		cr1 := int(cr) - 128
<a id="L48"></a><span class="ln">    48</span>		r := (yy1 + 91881*cr1) &gt;&gt; 16
<a id="L49"></a><span class="ln">    49</span>		g := (yy1 - 22554*cb1 - 46802*cr1) &gt;&gt; 16
<a id="L50"></a><span class="ln">    50</span>		b := (yy1 + 116130*cb1) &gt;&gt; 16
<a id="L51"></a><span class="ln">    51</span>		if r &lt; 0 {
<a id="L52"></a><span class="ln">    52</span>			r = 0
<a id="L53"></a><span class="ln">    53</span>		} else if r &gt; 255 {
<a id="L54"></a><span class="ln">    54</span>			r = 255
<a id="L55"></a><span class="ln">    55</span>		}
<a id="L56"></a><span class="ln">    56</span>		if g &lt; 0 {
<a id="L57"></a><span class="ln">    57</span>			g = 0
<a id="L58"></a><span class="ln">    58</span>		} else if g &gt; 255 {
<a id="L59"></a><span class="ln">    59</span>			g = 255
<a id="L60"></a><span class="ln">    60</span>		}
<a id="L61"></a><span class="ln">    61</span>		if b &lt; 0 {
<a id="L62"></a><span class="ln">    62</span>			b = 0
<a id="L63"></a><span class="ln">    63</span>		} else if b &gt; 255 {
<a id="L64"></a><span class="ln">    64</span>			b = 255
<a id="L65"></a><span class="ln">    65</span>		}
<a id="L66"></a><span class="ln">    66</span>		return uint8(r), uint8(g), uint8(b)
<a id="L67"></a><span class="ln">    67</span>	}
<a id="L68"></a><span class="ln">    68</span>	
<a id="L69"></a><span class="ln">    69</span>	<span class="comment">// YCbCr represents a fully opaque 24-bit Y&#39;CbCr color, having 8 bits each for</span>
<a id="L70"></a><span class="ln">    70</span>	<span class="comment">// one luma and two chroma components.</span>
<a id="L71"></a><span class="ln">    71</span>	<span class="comment">//</span>
<a id="L72"></a><span class="ln">    72</span>	<span class="comment">// JPEG, VP8, the MPEG family and other codecs use this color model. Such</span>
<a id="L73"></a><span class="ln">    73</span>	<span class="comment">// codecs often use the terms YUV and Y&#39;CbCr interchangeably, but strictly</span>
<a id="L74"></a><span class="ln">    74</span>	<span class="comment">// speaking, the term YUV applies only to analog video signals, and Y&#39; (luma)</span>
<a id="L75"></a><span class="ln">    75</span>	<span class="comment">// is Y (luminance) after applying gamma correction.</span>
<a id="L76"></a><span class="ln">    76</span>	<span class="comment">//</span>
<a id="L77"></a><span class="ln">    77</span>	<span class="comment">// Conversion between RGB and Y&#39;CbCr is lossy and there are multiple, slightly</span>
<a id="L78"></a><span class="ln">    78</span>	<span class="comment">// different formulae for converting between the two. This package follows</span>
<a id="L79"></a><span class="ln">    79</span>	<span class="comment">// the JFIF specification at http://www.w3.org/Graphics/JPEG/jfif3.pdf.</span>
<a id="L80"></a><span class="ln">    80</span>	type YCbCr struct {
<a id="L81"></a><span class="ln">    81</span>		Y, Cb, Cr uint8
<a id="L82"></a><span class="ln">    82</span>	}
<a id="L83"></a><span class="ln">    83</span>	
<a id="L84"></a><span class="ln">    84</span>	func (c YCbCr) RGBA() (uint32, uint32, uint32, uint32) {
<a id="L85"></a><span class="ln">    85</span>		r, g, b := YCbCrToRGB(c.Y, c.Cb, c.Cr)
<a id="L86"></a><span class="ln">    86</span>		return uint32(r) * 0x101, uint32(g) * 0x101, uint32(b) * 0x101, 0xffff
<a id="L87"></a><span class="ln">    87</span>	}
<a id="L88"></a><span class="ln">    88</span>	
<a id="L89"></a><span class="ln">    89</span>	<span class="comment">// YCbCrModel is the Model for Y&#39;CbCr colors.</span>
<a id="L90"></a><span class="ln">    90</span>	var YCbCrModel Model = ModelFunc(yCbCrModel)
<a id="L91"></a><span class="ln">    91</span>	
<a id="L92"></a><span class="ln">    92</span>	func yCbCrModel(c Color) Color {
<a id="L93"></a><span class="ln">    93</span>		if _, ok := c.(YCbCr); ok {
<a id="L94"></a><span class="ln">    94</span>			return c
<a id="L95"></a><span class="ln">    95</span>		}
<a id="L96"></a><span class="ln">    96</span>		r, g, b, _ := c.RGBA()
<a id="L97"></a><span class="ln">    97</span>		y, u, v := RGBToYCbCr(uint8(r&gt;&gt;8), uint8(g&gt;&gt;8), uint8(b&gt;&gt;8))
<a id="L98"></a><span class="ln">    98</span>		return YCbCr{y, u, v}
<a id="L99"></a><span class="ln">    99</span>	}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

