<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/html/template/attr.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/html/template/attr.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2011 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	package template
<a id="L6"></a><span class="ln">     6</span>	
<a id="L7"></a><span class="ln">     7</span>	import (
<a id="L8"></a><span class="ln">     8</span>		&#34;strings&#34;
<a id="L9"></a><span class="ln">     9</span>	)
<a id="L10"></a><span class="ln">    10</span>	
<a id="L11"></a><span class="ln">    11</span>	<span class="comment">// attrTypeMap[n] describes the value of the given attribute.</span>
<a id="L12"></a><span class="ln">    12</span>	<span class="comment">// If an attribute affects (or can mask) the encoding or interpretation of</span>
<a id="L13"></a><span class="ln">    13</span>	<span class="comment">// other content, or affects the contents, idempotency, or credentials of a</span>
<a id="L14"></a><span class="ln">    14</span>	<span class="comment">// network message, then the value in this map is contentTypeUnsafe.</span>
<a id="L15"></a><span class="ln">    15</span>	<span class="comment">// This map is derived from HTML5, specifically</span>
<a id="L16"></a><span class="ln">    16</span>	<span class="comment">// http://www.w3.org/TR/html5/Overview.html#attributes-1</span>
<a id="L17"></a><span class="ln">    17</span>	<span class="comment">// as well as &#34;%URI&#34;-typed attributes from</span>
<a id="L18"></a><span class="ln">    18</span>	<span class="comment">// http://www.w3.org/TR/html4/index/attributes.html</span>
<a id="L19"></a><span class="ln">    19</span>	var attrTypeMap = map[string]contentType{
<a id="L20"></a><span class="ln">    20</span>		&#34;accept&#34;:          contentTypePlain,
<a id="L21"></a><span class="ln">    21</span>		&#34;accept-charset&#34;:  contentTypeUnsafe,
<a id="L22"></a><span class="ln">    22</span>		&#34;action&#34;:          contentTypeURL,
<a id="L23"></a><span class="ln">    23</span>		&#34;alt&#34;:             contentTypePlain,
<a id="L24"></a><span class="ln">    24</span>		&#34;archive&#34;:         contentTypeURL,
<a id="L25"></a><span class="ln">    25</span>		&#34;async&#34;:           contentTypeUnsafe,
<a id="L26"></a><span class="ln">    26</span>		&#34;autocomplete&#34;:    contentTypePlain,
<a id="L27"></a><span class="ln">    27</span>		&#34;autofocus&#34;:       contentTypePlain,
<a id="L28"></a><span class="ln">    28</span>		&#34;autoplay&#34;:        contentTypePlain,
<a id="L29"></a><span class="ln">    29</span>		&#34;background&#34;:      contentTypeURL,
<a id="L30"></a><span class="ln">    30</span>		&#34;border&#34;:          contentTypePlain,
<a id="L31"></a><span class="ln">    31</span>		&#34;checked&#34;:         contentTypePlain,
<a id="L32"></a><span class="ln">    32</span>		&#34;cite&#34;:            contentTypeURL,
<a id="L33"></a><span class="ln">    33</span>		&#34;challenge&#34;:       contentTypeUnsafe,
<a id="L34"></a><span class="ln">    34</span>		&#34;charset&#34;:         contentTypeUnsafe,
<a id="L35"></a><span class="ln">    35</span>		&#34;class&#34;:           contentTypePlain,
<a id="L36"></a><span class="ln">    36</span>		&#34;classid&#34;:         contentTypeURL,
<a id="L37"></a><span class="ln">    37</span>		&#34;codebase&#34;:        contentTypeURL,
<a id="L38"></a><span class="ln">    38</span>		&#34;cols&#34;:            contentTypePlain,
<a id="L39"></a><span class="ln">    39</span>		&#34;colspan&#34;:         contentTypePlain,
<a id="L40"></a><span class="ln">    40</span>		&#34;content&#34;:         contentTypeUnsafe,
<a id="L41"></a><span class="ln">    41</span>		&#34;contenteditable&#34;: contentTypePlain,
<a id="L42"></a><span class="ln">    42</span>		&#34;contextmenu&#34;:     contentTypePlain,
<a id="L43"></a><span class="ln">    43</span>		&#34;controls&#34;:        contentTypePlain,
<a id="L44"></a><span class="ln">    44</span>		&#34;coords&#34;:          contentTypePlain,
<a id="L45"></a><span class="ln">    45</span>		&#34;crossorigin&#34;:     contentTypeUnsafe,
<a id="L46"></a><span class="ln">    46</span>		&#34;data&#34;:            contentTypeURL,
<a id="L47"></a><span class="ln">    47</span>		&#34;datetime&#34;:        contentTypePlain,
<a id="L48"></a><span class="ln">    48</span>		&#34;default&#34;:         contentTypePlain,
<a id="L49"></a><span class="ln">    49</span>		&#34;defer&#34;:           contentTypeUnsafe,
<a id="L50"></a><span class="ln">    50</span>		&#34;dir&#34;:             contentTypePlain,
<a id="L51"></a><span class="ln">    51</span>		&#34;dirname&#34;:         contentTypePlain,
<a id="L52"></a><span class="ln">    52</span>		&#34;disabled&#34;:        contentTypePlain,
<a id="L53"></a><span class="ln">    53</span>		&#34;draggable&#34;:       contentTypePlain,
<a id="L54"></a><span class="ln">    54</span>		&#34;dropzone&#34;:        contentTypePlain,
<a id="L55"></a><span class="ln">    55</span>		&#34;enctype&#34;:         contentTypeUnsafe,
<a id="L56"></a><span class="ln">    56</span>		&#34;for&#34;:             contentTypePlain,
<a id="L57"></a><span class="ln">    57</span>		&#34;form&#34;:            contentTypeUnsafe,
<a id="L58"></a><span class="ln">    58</span>		&#34;formaction&#34;:      contentTypeURL,
<a id="L59"></a><span class="ln">    59</span>		&#34;formenctype&#34;:     contentTypeUnsafe,
<a id="L60"></a><span class="ln">    60</span>		&#34;formmethod&#34;:      contentTypeUnsafe,
<a id="L61"></a><span class="ln">    61</span>		&#34;formnovalidate&#34;:  contentTypeUnsafe,
<a id="L62"></a><span class="ln">    62</span>		&#34;formtarget&#34;:      contentTypePlain,
<a id="L63"></a><span class="ln">    63</span>		&#34;headers&#34;:         contentTypePlain,
<a id="L64"></a><span class="ln">    64</span>		&#34;height&#34;:          contentTypePlain,
<a id="L65"></a><span class="ln">    65</span>		&#34;hidden&#34;:          contentTypePlain,
<a id="L66"></a><span class="ln">    66</span>		&#34;high&#34;:            contentTypePlain,
<a id="L67"></a><span class="ln">    67</span>		&#34;href&#34;:            contentTypeURL,
<a id="L68"></a><span class="ln">    68</span>		&#34;hreflang&#34;:        contentTypePlain,
<a id="L69"></a><span class="ln">    69</span>		&#34;http-equiv&#34;:      contentTypeUnsafe,
<a id="L70"></a><span class="ln">    70</span>		&#34;icon&#34;:            contentTypeURL,
<a id="L71"></a><span class="ln">    71</span>		&#34;id&#34;:              contentTypePlain,
<a id="L72"></a><span class="ln">    72</span>		&#34;ismap&#34;:           contentTypePlain,
<a id="L73"></a><span class="ln">    73</span>		&#34;keytype&#34;:         contentTypeUnsafe,
<a id="L74"></a><span class="ln">    74</span>		&#34;kind&#34;:            contentTypePlain,
<a id="L75"></a><span class="ln">    75</span>		&#34;label&#34;:           contentTypePlain,
<a id="L76"></a><span class="ln">    76</span>		&#34;lang&#34;:            contentTypePlain,
<a id="L77"></a><span class="ln">    77</span>		&#34;language&#34;:        contentTypeUnsafe,
<a id="L78"></a><span class="ln">    78</span>		&#34;list&#34;:            contentTypePlain,
<a id="L79"></a><span class="ln">    79</span>		&#34;longdesc&#34;:        contentTypeURL,
<a id="L80"></a><span class="ln">    80</span>		&#34;loop&#34;:            contentTypePlain,
<a id="L81"></a><span class="ln">    81</span>		&#34;low&#34;:             contentTypePlain,
<a id="L82"></a><span class="ln">    82</span>		&#34;manifest&#34;:        contentTypeURL,
<a id="L83"></a><span class="ln">    83</span>		&#34;max&#34;:             contentTypePlain,
<a id="L84"></a><span class="ln">    84</span>		&#34;maxlength&#34;:       contentTypePlain,
<a id="L85"></a><span class="ln">    85</span>		&#34;media&#34;:           contentTypePlain,
<a id="L86"></a><span class="ln">    86</span>		&#34;mediagroup&#34;:      contentTypePlain,
<a id="L87"></a><span class="ln">    87</span>		&#34;method&#34;:          contentTypeUnsafe,
<a id="L88"></a><span class="ln">    88</span>		&#34;min&#34;:             contentTypePlain,
<a id="L89"></a><span class="ln">    89</span>		&#34;multiple&#34;:        contentTypePlain,
<a id="L90"></a><span class="ln">    90</span>		&#34;name&#34;:            contentTypePlain,
<a id="L91"></a><span class="ln">    91</span>		&#34;novalidate&#34;:      contentTypeUnsafe,
<a id="L92"></a><span class="ln">    92</span>		<span class="comment">// Skip handler names from</span>
<a id="L93"></a><span class="ln">    93</span>		<span class="comment">// http://www.w3.org/TR/html5/Overview.html#event-handlers-on-elements-document-objects-and-window-objects</span>
<a id="L94"></a><span class="ln">    94</span>		<span class="comment">// since we have special handling in attrType.</span>
<a id="L95"></a><span class="ln">    95</span>		&#34;open&#34;:        contentTypePlain,
<a id="L96"></a><span class="ln">    96</span>		&#34;optimum&#34;:     contentTypePlain,
<a id="L97"></a><span class="ln">    97</span>		&#34;pattern&#34;:     contentTypeUnsafe,
<a id="L98"></a><span class="ln">    98</span>		&#34;placeholder&#34;: contentTypePlain,
<a id="L99"></a><span class="ln">    99</span>		&#34;poster&#34;:      contentTypeURL,
<a id="L100"></a><span class="ln">   100</span>		&#34;profile&#34;:     contentTypeURL,
<a id="L101"></a><span class="ln">   101</span>		&#34;preload&#34;:     contentTypePlain,
<a id="L102"></a><span class="ln">   102</span>		&#34;pubdate&#34;:     contentTypePlain,
<a id="L103"></a><span class="ln">   103</span>		&#34;radiogroup&#34;:  contentTypePlain,
<a id="L104"></a><span class="ln">   104</span>		&#34;readonly&#34;:    contentTypePlain,
<a id="L105"></a><span class="ln">   105</span>		&#34;rel&#34;:         contentTypeUnsafe,
<a id="L106"></a><span class="ln">   106</span>		&#34;required&#34;:    contentTypePlain,
<a id="L107"></a><span class="ln">   107</span>		&#34;reversed&#34;:    contentTypePlain,
<a id="L108"></a><span class="ln">   108</span>		&#34;rows&#34;:        contentTypePlain,
<a id="L109"></a><span class="ln">   109</span>		&#34;rowspan&#34;:     contentTypePlain,
<a id="L110"></a><span class="ln">   110</span>		&#34;sandbox&#34;:     contentTypeUnsafe,
<a id="L111"></a><span class="ln">   111</span>		&#34;spellcheck&#34;:  contentTypePlain,
<a id="L112"></a><span class="ln">   112</span>		&#34;scope&#34;:       contentTypePlain,
<a id="L113"></a><span class="ln">   113</span>		&#34;scoped&#34;:      contentTypePlain,
<a id="L114"></a><span class="ln">   114</span>		&#34;seamless&#34;:    contentTypePlain,
<a id="L115"></a><span class="ln">   115</span>		&#34;selected&#34;:    contentTypePlain,
<a id="L116"></a><span class="ln">   116</span>		&#34;shape&#34;:       contentTypePlain,
<a id="L117"></a><span class="ln">   117</span>		&#34;size&#34;:        contentTypePlain,
<a id="L118"></a><span class="ln">   118</span>		&#34;sizes&#34;:       contentTypePlain,
<a id="L119"></a><span class="ln">   119</span>		&#34;span&#34;:        contentTypePlain,
<a id="L120"></a><span class="ln">   120</span>		&#34;src&#34;:         contentTypeURL,
<a id="L121"></a><span class="ln">   121</span>		&#34;srcdoc&#34;:      contentTypeHTML,
<a id="L122"></a><span class="ln">   122</span>		&#34;srclang&#34;:     contentTypePlain,
<a id="L123"></a><span class="ln">   123</span>		&#34;start&#34;:       contentTypePlain,
<a id="L124"></a><span class="ln">   124</span>		&#34;step&#34;:        contentTypePlain,
<a id="L125"></a><span class="ln">   125</span>		&#34;style&#34;:       contentTypeCSS,
<a id="L126"></a><span class="ln">   126</span>		&#34;tabindex&#34;:    contentTypePlain,
<a id="L127"></a><span class="ln">   127</span>		&#34;target&#34;:      contentTypePlain,
<a id="L128"></a><span class="ln">   128</span>		&#34;title&#34;:       contentTypePlain,
<a id="L129"></a><span class="ln">   129</span>		&#34;type&#34;:        contentTypeUnsafe,
<a id="L130"></a><span class="ln">   130</span>		&#34;usemap&#34;:      contentTypeURL,
<a id="L131"></a><span class="ln">   131</span>		&#34;value&#34;:       contentTypeUnsafe,
<a id="L132"></a><span class="ln">   132</span>		&#34;width&#34;:       contentTypePlain,
<a id="L133"></a><span class="ln">   133</span>		&#34;wrap&#34;:        contentTypePlain,
<a id="L134"></a><span class="ln">   134</span>		&#34;xmlns&#34;:       contentTypeURL,
<a id="L135"></a><span class="ln">   135</span>	}
<a id="L136"></a><span class="ln">   136</span>	
<a id="L137"></a><span class="ln">   137</span>	<span class="comment">// attrType returns a conservative (upper-bound on authority) guess at the</span>
<a id="L138"></a><span class="ln">   138</span>	<span class="comment">// type of the named attribute.</span>
<a id="L139"></a><span class="ln">   139</span>	func attrType(name string) contentType {
<a id="L140"></a><span class="ln">   140</span>		name = strings.ToLower(name)
<a id="L141"></a><span class="ln">   141</span>		if strings.HasPrefix(name, &#34;data-&#34;) {
<a id="L142"></a><span class="ln">   142</span>			<span class="comment">// Strip data- so that custom attribute heuristics below are</span>
<a id="L143"></a><span class="ln">   143</span>			<span class="comment">// widely applied.</span>
<a id="L144"></a><span class="ln">   144</span>			<span class="comment">// Treat data-action as URL below.</span>
<a id="L145"></a><span class="ln">   145</span>			name = name[5:]
<a id="L146"></a><span class="ln">   146</span>		} else if colon := strings.IndexRune(name, &#39;:&#39;); colon != -1 {
<a id="L147"></a><span class="ln">   147</span>			if name[:colon] == &#34;xmlns&#34; {
<a id="L148"></a><span class="ln">   148</span>				return contentTypeURL
<a id="L149"></a><span class="ln">   149</span>			}
<a id="L150"></a><span class="ln">   150</span>			<span class="comment">// Treat svg:href and xlink:href as href below.</span>
<a id="L151"></a><span class="ln">   151</span>			name = name[colon+1:]
<a id="L152"></a><span class="ln">   152</span>		}
<a id="L153"></a><span class="ln">   153</span>		if t, ok := attrTypeMap[name]; ok {
<a id="L154"></a><span class="ln">   154</span>			return t
<a id="L155"></a><span class="ln">   155</span>		}
<a id="L156"></a><span class="ln">   156</span>		<span class="comment">// Treat partial event handler names as script.</span>
<a id="L157"></a><span class="ln">   157</span>		if strings.HasPrefix(name, &#34;on&#34;) {
<a id="L158"></a><span class="ln">   158</span>			return contentTypeJS
<a id="L159"></a><span class="ln">   159</span>		}
<a id="L160"></a><span class="ln">   160</span>	
<a id="L161"></a><span class="ln">   161</span>		<span class="comment">// Heuristics to prevent &#34;javascript:...&#34; injection in custom</span>
<a id="L162"></a><span class="ln">   162</span>		<span class="comment">// data attributes and custom attributes like g:tweetUrl.</span>
<a id="L163"></a><span class="ln">   163</span>		<span class="comment">// http://www.w3.org/TR/html5/elements.html#embedding-custom-non-visible-data-with-the-data-attributes:</span>
<a id="L164"></a><span class="ln">   164</span>		<span class="comment">// &#34;Custom data attributes are intended to store custom data</span>
<a id="L165"></a><span class="ln">   165</span>		<span class="comment">//  private to the page or application, for which there are no</span>
<a id="L166"></a><span class="ln">   166</span>		<span class="comment">//  more appropriate attributes or elements.&#34;</span>
<a id="L167"></a><span class="ln">   167</span>		<span class="comment">// Developers seem to store URL content in data URLs that start</span>
<a id="L168"></a><span class="ln">   168</span>		<span class="comment">// or end with &#34;URI&#34; or &#34;URL&#34;.</span>
<a id="L169"></a><span class="ln">   169</span>		if strings.Contains(name, &#34;src&#34;) ||
<a id="L170"></a><span class="ln">   170</span>			strings.Contains(name, &#34;uri&#34;) ||
<a id="L171"></a><span class="ln">   171</span>			strings.Contains(name, &#34;url&#34;) {
<a id="L172"></a><span class="ln">   172</span>			return contentTypeURL
<a id="L173"></a><span class="ln">   173</span>		}
<a id="L174"></a><span class="ln">   174</span>		return contentTypePlain
<a id="L175"></a><span class="ln">   175</span>	}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

