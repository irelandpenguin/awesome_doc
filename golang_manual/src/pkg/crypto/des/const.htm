<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/crypto/des/const.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/crypto/des/const.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2010 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	<span class="comment">// Package des implements the Data Encryption Standard (DES) and the</span>
<a id="L6"></a><span class="ln">     6</span>	<span class="comment">// Triple Data Encryption Algorithm (TDEA) as defined</span>
<a id="L7"></a><span class="ln">     7</span>	<span class="comment">// in U.S. Federal Information Processing Standards Publication 46-3.</span>
<a id="L8"></a><span class="ln">     8</span>	package des
<a id="L9"></a><span class="ln">     9</span>	
<a id="L10"></a><span class="ln">    10</span>	<span class="comment">// Used to perform an initial permutation of a 64-bit input block.</span>
<a id="L11"></a><span class="ln">    11</span>	var initialPermutation = [64]byte{
<a id="L12"></a><span class="ln">    12</span>		6, 14, 22, 30, 38, 46, 54, 62,
<a id="L13"></a><span class="ln">    13</span>		4, 12, 20, 28, 36, 44, 52, 60,
<a id="L14"></a><span class="ln">    14</span>		2, 10, 18, 26, 34, 42, 50, 58,
<a id="L15"></a><span class="ln">    15</span>		0, 8, 16, 24, 32, 40, 48, 56,
<a id="L16"></a><span class="ln">    16</span>		7, 15, 23, 31, 39, 47, 55, 63,
<a id="L17"></a><span class="ln">    17</span>		5, 13, 21, 29, 37, 45, 53, 61,
<a id="L18"></a><span class="ln">    18</span>		3, 11, 19, 27, 35, 43, 51, 59,
<a id="L19"></a><span class="ln">    19</span>		1, 9, 17, 25, 33, 41, 49, 57,
<a id="L20"></a><span class="ln">    20</span>	}
<a id="L21"></a><span class="ln">    21</span>	
<a id="L22"></a><span class="ln">    22</span>	<span class="comment">// Used to perform a final permutation of a 4-bit preoutput block. This is the</span>
<a id="L23"></a><span class="ln">    23</span>	<span class="comment">// inverse of initialPermutation</span>
<a id="L24"></a><span class="ln">    24</span>	var finalPermutation = [64]byte{
<a id="L25"></a><span class="ln">    25</span>		24, 56, 16, 48, 8, 40, 0, 32,
<a id="L26"></a><span class="ln">    26</span>		25, 57, 17, 49, 9, 41, 1, 33,
<a id="L27"></a><span class="ln">    27</span>		26, 58, 18, 50, 10, 42, 2, 34,
<a id="L28"></a><span class="ln">    28</span>		27, 59, 19, 51, 11, 43, 3, 35,
<a id="L29"></a><span class="ln">    29</span>		28, 60, 20, 52, 12, 44, 4, 36,
<a id="L30"></a><span class="ln">    30</span>		29, 61, 21, 53, 13, 45, 5, 37,
<a id="L31"></a><span class="ln">    31</span>		30, 62, 22, 54, 14, 46, 6, 38,
<a id="L32"></a><span class="ln">    32</span>		31, 63, 23, 55, 15, 47, 7, 39,
<a id="L33"></a><span class="ln">    33</span>	}
<a id="L34"></a><span class="ln">    34</span>	
<a id="L35"></a><span class="ln">    35</span>	<span class="comment">// Used to expand an input block of 32 bits, producing an output block of 48</span>
<a id="L36"></a><span class="ln">    36</span>	<span class="comment">// bits.</span>
<a id="L37"></a><span class="ln">    37</span>	var expansionFunction = [48]byte{
<a id="L38"></a><span class="ln">    38</span>		0, 31, 30, 29, 28, 27, 28, 27,
<a id="L39"></a><span class="ln">    39</span>		26, 25, 24, 23, 24, 23, 22, 21,
<a id="L40"></a><span class="ln">    40</span>		20, 19, 20, 19, 18, 17, 16, 15,
<a id="L41"></a><span class="ln">    41</span>		16, 15, 14, 13, 12, 11, 12, 11,
<a id="L42"></a><span class="ln">    42</span>		10, 9, 8, 7, 8, 7, 6, 5,
<a id="L43"></a><span class="ln">    43</span>		4, 3, 4, 3, 2, 1, 0, 31,
<a id="L44"></a><span class="ln">    44</span>	}
<a id="L45"></a><span class="ln">    45</span>	
<a id="L46"></a><span class="ln">    46</span>	<span class="comment">// Yields a 32-bit output from a 32-bit input</span>
<a id="L47"></a><span class="ln">    47</span>	var permutationFunction = [32]byte{
<a id="L48"></a><span class="ln">    48</span>		16, 25, 12, 11, 3, 20, 4, 15,
<a id="L49"></a><span class="ln">    49</span>		31, 17, 9, 6, 27, 14, 1, 22,
<a id="L50"></a><span class="ln">    50</span>		30, 24, 8, 18, 0, 5, 29, 23,
<a id="L51"></a><span class="ln">    51</span>		13, 19, 2, 26, 10, 21, 28, 7,
<a id="L52"></a><span class="ln">    52</span>	}
<a id="L53"></a><span class="ln">    53</span>	
<a id="L54"></a><span class="ln">    54</span>	<span class="comment">// Used in the key schedule to select 56 bits</span>
<a id="L55"></a><span class="ln">    55</span>	<span class="comment">// from a 64-bit input.</span>
<a id="L56"></a><span class="ln">    56</span>	var permutedChoice1 = [56]byte{
<a id="L57"></a><span class="ln">    57</span>		7, 15, 23, 31, 39, 47, 55, 63,
<a id="L58"></a><span class="ln">    58</span>		6, 14, 22, 30, 38, 46, 54, 62,
<a id="L59"></a><span class="ln">    59</span>		5, 13, 21, 29, 37, 45, 53, 61,
<a id="L60"></a><span class="ln">    60</span>		4, 12, 20, 28, 1, 9, 17, 25,
<a id="L61"></a><span class="ln">    61</span>		33, 41, 49, 57, 2, 10, 18, 26,
<a id="L62"></a><span class="ln">    62</span>		34, 42, 50, 58, 3, 11, 19, 27,
<a id="L63"></a><span class="ln">    63</span>		35, 43, 51, 59, 36, 44, 52, 60,
<a id="L64"></a><span class="ln">    64</span>	}
<a id="L65"></a><span class="ln">    65</span>	
<a id="L66"></a><span class="ln">    66</span>	<span class="comment">// Used in the key schedule to produce each subkey by selecting 48 bits from</span>
<a id="L67"></a><span class="ln">    67</span>	<span class="comment">// the 56-bit input</span>
<a id="L68"></a><span class="ln">    68</span>	var permutedChoice2 = [48]byte{
<a id="L69"></a><span class="ln">    69</span>		42, 39, 45, 32, 55, 51, 53, 28,
<a id="L70"></a><span class="ln">    70</span>		41, 50, 35, 46, 33, 37, 44, 52,
<a id="L71"></a><span class="ln">    71</span>		30, 48, 40, 49, 29, 36, 43, 54,
<a id="L72"></a><span class="ln">    72</span>		15, 4, 25, 19, 9, 1, 26, 16,
<a id="L73"></a><span class="ln">    73</span>		5, 11, 23, 8, 12, 7, 17, 0,
<a id="L74"></a><span class="ln">    74</span>		22, 3, 10, 14, 6, 20, 27, 24,
<a id="L75"></a><span class="ln">    75</span>	}
<a id="L76"></a><span class="ln">    76</span>	
<a id="L77"></a><span class="ln">    77</span>	<span class="comment">// 8 S-boxes composed of 4 rows and 16 columns</span>
<a id="L78"></a><span class="ln">    78</span>	<span class="comment">// Used in the DES cipher function</span>
<a id="L79"></a><span class="ln">    79</span>	var sBoxes = [8][4][16]uint8{
<a id="L80"></a><span class="ln">    80</span>		<span class="comment">// S-box 1</span>
<a id="L81"></a><span class="ln">    81</span>		{
<a id="L82"></a><span class="ln">    82</span>			{14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7},
<a id="L83"></a><span class="ln">    83</span>			{0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8},
<a id="L84"></a><span class="ln">    84</span>			{4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0},
<a id="L85"></a><span class="ln">    85</span>			{15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13},
<a id="L86"></a><span class="ln">    86</span>		},
<a id="L87"></a><span class="ln">    87</span>		<span class="comment">// S-box 2</span>
<a id="L88"></a><span class="ln">    88</span>		{
<a id="L89"></a><span class="ln">    89</span>			{15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10},
<a id="L90"></a><span class="ln">    90</span>			{3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5},
<a id="L91"></a><span class="ln">    91</span>			{0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15},
<a id="L92"></a><span class="ln">    92</span>			{13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9},
<a id="L93"></a><span class="ln">    93</span>		},
<a id="L94"></a><span class="ln">    94</span>		<span class="comment">// S-box 3</span>
<a id="L95"></a><span class="ln">    95</span>		{
<a id="L96"></a><span class="ln">    96</span>			{10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8},
<a id="L97"></a><span class="ln">    97</span>			{13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1},
<a id="L98"></a><span class="ln">    98</span>			{13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7},
<a id="L99"></a><span class="ln">    99</span>			{1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12},
<a id="L100"></a><span class="ln">   100</span>		},
<a id="L101"></a><span class="ln">   101</span>		<span class="comment">// S-box 4</span>
<a id="L102"></a><span class="ln">   102</span>		{
<a id="L103"></a><span class="ln">   103</span>			{7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15},
<a id="L104"></a><span class="ln">   104</span>			{13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9},
<a id="L105"></a><span class="ln">   105</span>			{10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4},
<a id="L106"></a><span class="ln">   106</span>			{3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14},
<a id="L107"></a><span class="ln">   107</span>		},
<a id="L108"></a><span class="ln">   108</span>		<span class="comment">// S-box 5</span>
<a id="L109"></a><span class="ln">   109</span>		{
<a id="L110"></a><span class="ln">   110</span>			{2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9},
<a id="L111"></a><span class="ln">   111</span>			{14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6},
<a id="L112"></a><span class="ln">   112</span>			{4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14},
<a id="L113"></a><span class="ln">   113</span>			{11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3},
<a id="L114"></a><span class="ln">   114</span>		},
<a id="L115"></a><span class="ln">   115</span>		<span class="comment">// S-box 6</span>
<a id="L116"></a><span class="ln">   116</span>		{
<a id="L117"></a><span class="ln">   117</span>			{12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11},
<a id="L118"></a><span class="ln">   118</span>			{10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8},
<a id="L119"></a><span class="ln">   119</span>			{9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6},
<a id="L120"></a><span class="ln">   120</span>			{4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13},
<a id="L121"></a><span class="ln">   121</span>		},
<a id="L122"></a><span class="ln">   122</span>		<span class="comment">// S-box 7</span>
<a id="L123"></a><span class="ln">   123</span>		{
<a id="L124"></a><span class="ln">   124</span>			{4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1},
<a id="L125"></a><span class="ln">   125</span>			{13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6},
<a id="L126"></a><span class="ln">   126</span>			{1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2},
<a id="L127"></a><span class="ln">   127</span>			{6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12},
<a id="L128"></a><span class="ln">   128</span>		},
<a id="L129"></a><span class="ln">   129</span>		<span class="comment">// S-box 8</span>
<a id="L130"></a><span class="ln">   130</span>		{
<a id="L131"></a><span class="ln">   131</span>			{13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7},
<a id="L132"></a><span class="ln">   132</span>			{1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2},
<a id="L133"></a><span class="ln">   133</span>			{7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8},
<a id="L134"></a><span class="ln">   134</span>			{2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11},
<a id="L135"></a><span class="ln">   135</span>		},
<a id="L136"></a><span class="ln">   136</span>	}
<a id="L137"></a><span class="ln">   137</span>	
<a id="L138"></a><span class="ln">   138</span>	<span class="comment">// Size of left rotation per round in each half of the key schedule</span>
<a id="L139"></a><span class="ln">   139</span>	var ksRotations = [16]uint8{1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

