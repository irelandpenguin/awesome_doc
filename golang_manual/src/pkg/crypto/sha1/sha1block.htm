<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>src/pkg/crypto/sha1/sha1block.go - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="/doc/style.css">
<script type="text/javascript" src="/doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>



</div></div>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Source file src/pkg/crypto/sha1/sha1block.go</h1>




<div id="nav"></div>


<pre><a id="L1"></a><span class="ln">     1</span>	<span class="comment">// Copyright 2009 The Go Authors. All rights reserved.</span>
<a id="L2"></a><span class="ln">     2</span>	<span class="comment">// Use of this source code is governed by a BSD-style</span>
<a id="L3"></a><span class="ln">     3</span>	<span class="comment">// license that can be found in the LICENSE file.</span>
<a id="L4"></a><span class="ln">     4</span>	
<a id="L5"></a><span class="ln">     5</span>	<span class="comment">// SHA1 block step.</span>
<a id="L6"></a><span class="ln">     6</span>	<span class="comment">// In its own file so that a faster assembly or C version</span>
<a id="L7"></a><span class="ln">     7</span>	<span class="comment">// can be substituted easily.</span>
<a id="L8"></a><span class="ln">     8</span>	
<a id="L9"></a><span class="ln">     9</span>	package sha1
<a id="L10"></a><span class="ln">    10</span>	
<a id="L11"></a><span class="ln">    11</span>	const (
<a id="L12"></a><span class="ln">    12</span>		_K0 = 0x5A827999
<a id="L13"></a><span class="ln">    13</span>		_K1 = 0x6ED9EBA1
<a id="L14"></a><span class="ln">    14</span>		_K2 = 0x8F1BBCDC
<a id="L15"></a><span class="ln">    15</span>		_K3 = 0xCA62C1D6
<a id="L16"></a><span class="ln">    16</span>	)
<a id="L17"></a><span class="ln">    17</span>	
<a id="L18"></a><span class="ln">    18</span>	func _Block(dig *digest, p []byte) int {
<a id="L19"></a><span class="ln">    19</span>		var w [80]uint32
<a id="L20"></a><span class="ln">    20</span>	
<a id="L21"></a><span class="ln">    21</span>		n := 0
<a id="L22"></a><span class="ln">    22</span>		h0, h1, h2, h3, h4 := dig.h[0], dig.h[1], dig.h[2], dig.h[3], dig.h[4]
<a id="L23"></a><span class="ln">    23</span>		for len(p) &gt;= _Chunk {
<a id="L24"></a><span class="ln">    24</span>			<span class="comment">// Can interlace the computation of w with the</span>
<a id="L25"></a><span class="ln">    25</span>			<span class="comment">// rounds below if needed for speed.</span>
<a id="L26"></a><span class="ln">    26</span>			for i := 0; i &lt; 16; i++ {
<a id="L27"></a><span class="ln">    27</span>				j := i * 4
<a id="L28"></a><span class="ln">    28</span>				w[i] = uint32(p[j])&lt;&lt;24 | uint32(p[j+1])&lt;&lt;16 | uint32(p[j+2])&lt;&lt;8 | uint32(p[j+3])
<a id="L29"></a><span class="ln">    29</span>			}
<a id="L30"></a><span class="ln">    30</span>			for i := 16; i &lt; 80; i++ {
<a id="L31"></a><span class="ln">    31</span>				tmp := w[i-3] ^ w[i-8] ^ w[i-14] ^ w[i-16]
<a id="L32"></a><span class="ln">    32</span>				w[i] = tmp&lt;&lt;1 | tmp&gt;&gt;(32-1)
<a id="L33"></a><span class="ln">    33</span>			}
<a id="L34"></a><span class="ln">    34</span>	
<a id="L35"></a><span class="ln">    35</span>			a, b, c, d, e := h0, h1, h2, h3, h4
<a id="L36"></a><span class="ln">    36</span>	
<a id="L37"></a><span class="ln">    37</span>			<span class="comment">// Each of the four 20-iteration rounds</span>
<a id="L38"></a><span class="ln">    38</span>			<span class="comment">// differs only in the computation of f and</span>
<a id="L39"></a><span class="ln">    39</span>			<span class="comment">// the choice of K (_K0, _K1, etc).</span>
<a id="L40"></a><span class="ln">    40</span>			for i := 0; i &lt; 20; i++ {
<a id="L41"></a><span class="ln">    41</span>				f := b&amp;c | (^b)&amp;d
<a id="L42"></a><span class="ln">    42</span>				a5 := a&lt;&lt;5 | a&gt;&gt;(32-5)
<a id="L43"></a><span class="ln">    43</span>				b30 := b&lt;&lt;30 | b&gt;&gt;(32-30)
<a id="L44"></a><span class="ln">    44</span>				t := a5 + f + e + w[i] + _K0
<a id="L45"></a><span class="ln">    45</span>				a, b, c, d, e = t, a, b30, c, d
<a id="L46"></a><span class="ln">    46</span>			}
<a id="L47"></a><span class="ln">    47</span>			for i := 20; i &lt; 40; i++ {
<a id="L48"></a><span class="ln">    48</span>				f := b ^ c ^ d
<a id="L49"></a><span class="ln">    49</span>				a5 := a&lt;&lt;5 | a&gt;&gt;(32-5)
<a id="L50"></a><span class="ln">    50</span>				b30 := b&lt;&lt;30 | b&gt;&gt;(32-30)
<a id="L51"></a><span class="ln">    51</span>				t := a5 + f + e + w[i] + _K1
<a id="L52"></a><span class="ln">    52</span>				a, b, c, d, e = t, a, b30, c, d
<a id="L53"></a><span class="ln">    53</span>			}
<a id="L54"></a><span class="ln">    54</span>			for i := 40; i &lt; 60; i++ {
<a id="L55"></a><span class="ln">    55</span>				f := b&amp;c | b&amp;d | c&amp;d
<a id="L56"></a><span class="ln">    56</span>				a5 := a&lt;&lt;5 | a&gt;&gt;(32-5)
<a id="L57"></a><span class="ln">    57</span>				b30 := b&lt;&lt;30 | b&gt;&gt;(32-30)
<a id="L58"></a><span class="ln">    58</span>				t := a5 + f + e + w[i] + _K2
<a id="L59"></a><span class="ln">    59</span>				a, b, c, d, e = t, a, b30, c, d
<a id="L60"></a><span class="ln">    60</span>			}
<a id="L61"></a><span class="ln">    61</span>			for i := 60; i &lt; 80; i++ {
<a id="L62"></a><span class="ln">    62</span>				f := b ^ c ^ d
<a id="L63"></a><span class="ln">    63</span>				a5 := a&lt;&lt;5 | a&gt;&gt;(32-5)
<a id="L64"></a><span class="ln">    64</span>				b30 := b&lt;&lt;30 | b&gt;&gt;(32-30)
<a id="L65"></a><span class="ln">    65</span>				t := a5 + f + e + w[i] + _K3
<a id="L66"></a><span class="ln">    66</span>				a, b, c, d, e = t, a, b30, c, d
<a id="L67"></a><span class="ln">    67</span>			}
<a id="L68"></a><span class="ln">    68</span>	
<a id="L69"></a><span class="ln">    69</span>			h0 += a
<a id="L70"></a><span class="ln">    70</span>			h1 += b
<a id="L71"></a><span class="ln">    71</span>			h2 += c
<a id="L72"></a><span class="ln">    72</span>			h3 += d
<a id="L73"></a><span class="ln">    73</span>			h4 += e
<a id="L74"></a><span class="ln">    74</span>	
<a id="L75"></a><span class="ln">    75</span>			p = p[_Chunk:]
<a id="L76"></a><span class="ln">    76</span>			n += _Chunk
<a id="L77"></a><span class="ln">    77</span>		}
<a id="L78"></a><span class="ln">    78</span>	
<a id="L79"></a><span class="ln">    79</span>		dig.h[0], dig.h[1], dig.h[2], dig.h[3], dig.h[4] = h0, h1, h2, h3, h4
<a id="L80"></a><span class="ln">    80</span>		return n
<a id="L81"></a><span class="ln">    81</span>	}
</pre>

</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>

