
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>dsa - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="../../doc/style.css">
<script type="text/javascript" src="../../doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>


<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Package dsa</h1>




<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->

	
		<div id="short-nav">
			<dl>
			<dd><code>import "crypto/dsa"</code></dd>
			</dl>
			<dl>
			<dd><a href="#overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#index">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ?</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ?</h2>
				<p>
Package dsa implements the Digital Signature Algorithm, as defined in FIPS 186-3.
</p>

			</div>
		</div>
		
	
		<h2 id="index">Index</h2>
		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
		<div id="manual-nav">
			<dl>
			
			
				<dd><a href="#variables">Variables</a></dd>
			
			
				
				<dd><a href="#GenerateKey">func GenerateKey(priv *PrivateKey, rand io.Reader) error</a></dd>
			
				
				<dd><a href="#GenerateParameters">func GenerateParameters(params *Parameters, rand io.Reader, sizes ParameterSizes) (err error)</a></dd>
			
				
				<dd><a href="#Sign">func Sign(rand io.Reader, priv *PrivateKey, hash []byte) (r, s *big.Int, err error)</a></dd>
			
				
				<dd><a href="#Verify">func Verify(pub *PublicKey, hash []byte, r, s *big.Int) bool</a></dd>
			
			
				
				<dd><a href="#ParameterSizes">type ParameterSizes</a></dd>
				
				
			
				
				<dd><a href="#Parameters">type Parameters</a></dd>
				
				
			
				
				<dd><a href="#PrivateKey">type PrivateKey</a></dd>
				
				
			
				
				<dd><a href="#PublicKey">type PublicKey</a></dd>
				
				
			
			
		</dl>

		

		
			<h4>Package files</h4>
			<p>
			<span style="font-size:90%">
			
				<a href="src/pkg/crypto/dsa/dsa.htm">dsa.go</a>
			
			</span>
			</p>
		
	
		
		
			<h2 id="variables">Variables</h2>
			
				<pre>var ErrInvalidPublicKey = errors.New(&#34;crypto/dsa: invalid public key&#34;)</pre>
				<p>
ErrInvalidPublicKey results when a public key is not usable by this code.
FIPS is quite strict about the format of DSA keys, but other code may be
less so. Thus, when using keys which may have been generated by other code,
this error must be handled.
</p>

			
		
		
			
			
			<h2 id="GenerateKey">func <a href="src/pkg/crypto/dsa/dsa.htm#L143">GenerateKey</a></h2>
			<pre>func GenerateKey(priv *PrivateKey, rand io.Reader) error</pre>
			<p>
GenerateKey generates a public&amp;private key pair. The Parameters of the
PrivateKey must already be valid (see GenerateParameters).
</p>

			
		
			
			
			<h2 id="GenerateParameters">func <a href="src/pkg/crypto/dsa/dsa.htm#L45">GenerateParameters</a></h2>
			<pre>func GenerateParameters(params *Parameters, rand io.Reader, sizes ParameterSizes) (err error)</pre>
			<p>
GenerateParameters puts a random, valid set of DSA parameters into params.
This function takes many seconds, even on fast machines.
</p>

			
		
			
			
			<h2 id="Sign">func <a href="src/pkg/crypto/dsa/dsa.htm#L176">Sign</a></h2>
			<pre>func Sign(rand io.Reader, priv *PrivateKey, hash []byte) (r, s *big.Int, err error)</pre>
			<p>
Sign signs an arbitrary length hash (which should be the result of hashing a
larger message) using the private key, priv. It returns the signature as a
pair of integers. The security of the private key depends on the entropy of
rand.
</p>
<p>
Note that FIPS 186-3 section 4.6 specifies that the hash should be truncated
to the byte-length of the subgroup. This function does not perform that
truncation itself.
</p>

			
		
			
			
			<h2 id="Verify">func <a href="src/pkg/crypto/dsa/dsa.htm#L231">Verify</a></h2>
			<pre>func Verify(pub *PublicKey, hash []byte, r, s *big.Int) bool</pre>
			<p>
Verify verifies the signature in r, s of hash using the public key, pub. It
reports whether the signature is valid.
</p>
<p>
Note that FIPS 186-3 section 4.6 specifies that the hash should be truncated
to the byte-length of the subgroup. This function does not perform that
truncation itself.
</p>

			
		
		
			
			
			<h2 id="ParameterSizes">type <a href="src/pkg/crypto/dsa/dsa.htm#L30">ParameterSizes</a></h2>
			<pre>type ParameterSizes int</pre>
			<p>
ParameterSizes is a enumeration of the acceptable bit lengths of the primes
in a set of DSA parameters. See FIPS 186-3, section 4.2.
</p>


			
				<pre>const (
    L1024N160 ParameterSizes = iota
    L2048N224
    L2048N256
    L3072N256
)</pre>
				
			

			

			

			

			
		
			
			
			<h2 id="Parameters">type <a href="src/pkg/crypto/dsa/dsa.htm#L6">Parameters</a></h2>
			<pre>type Parameters struct {
    P, Q, G *big.Int
}</pre>
			<p>
Parameters represents the domain parameters for a key. These parameters can
be shared across many keys. The bit length of Q must be a multiple of 8.
</p>


			

			

			

			

			
		
			
			
			<h2 id="PrivateKey">type <a href="src/pkg/crypto/dsa/dsa.htm#L17">PrivateKey</a></h2>
			<pre>type PrivateKey struct {
    PublicKey
    X *big.Int
}</pre>
			<p>
PrivateKey represents a DSA private key.
</p>


			

			

			

			

			
		
			
			
			<h2 id="PublicKey">type <a href="src/pkg/crypto/dsa/dsa.htm#L11">PublicKey</a></h2>
			<pre>type PublicKey struct {
    Parameters
    Y *big.Int
}</pre>
			<p>
PublicKey represents a DSA public key.
</p>


			

			

			

			

			
		
		</div>
	

	









</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>
