
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>pprof - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="../../doc/style.css">
<script type="text/javascript" src="../../doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Package pprof</h1>




<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->

	
		<div id="short-nav">
			<dl>
			<dd><code>import "net/http/pprof"</code></dd>
			</dl>
			<dl>
			<dd><a href="#overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#index">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ?</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ?</h2>
				<p>
Package pprof serves via its HTTP server runtime profiling data
in the format expected by the pprof visualization tool.
For more information about pprof, see
<a href="http://code.google.com/p/google-perftools/">http://code.google.com/p/google-perftools/</a>.
</p>
<p>
The package is typically only imported for the side effect of
registering its HTTP handlers.
The handled paths all begin with /debug/pprof/.
</p>
<p>
To use pprof, link this package into your program:
</p>
<pre>import _ &#34;net/http/pprof&#34;
</pre>
<p>
Then use the pprof tool to look at the heap profile:
</p>
<pre>go tool pprof <a href="http://localhost:6060/debug/pprof/heap">http://localhost:6060/debug/pprof/heap</a>
</pre>
<p>
Or to look at a 30-second CPU profile:
</p>
<pre>go tool pprof <a href="http://localhost:6060/debug/pprof/profile">http://localhost:6060/debug/pprof/profile</a>
</pre>
<p>
Or to view all available profiles:
</p>
<pre>go tool pprof <a href="http://localhost:6060/debug/pprof/">http://localhost:6060/debug/pprof/</a>
</pre>
<p>
For a study of the facility in action, visit
</p>
<pre><a href="http://blog.golang.org/2011/06/profiling-go-programs.html">http://blog.golang.org/2011/06/profiling-go-programs.html</a>
</pre>

			</div>
		</div>
		
	
		<h2 id="index">Index</h2>
		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
		<div id="manual-nav">
			<dl>
			
			
			
				
				<dd><a href="#Cmdline">func Cmdline(w http.ResponseWriter, r *http.Request)</a></dd>
			
				
				<dd><a href="#Handler">func Handler(name string) http.Handler</a></dd>
			
				
				<dd><a href="#Index">func Index(w http.ResponseWriter, r *http.Request)</a></dd>
			
				
				<dd><a href="#Profile">func Profile(w http.ResponseWriter, r *http.Request)</a></dd>
			
				
				<dd><a href="#Symbol">func Symbol(w http.ResponseWriter, r *http.Request)</a></dd>
			
			
			
		</dl>

		

		
			<h4>Package files</h4>
			<p>
			<span style="font-size:90%">
			
				<a href="src/pkg/net/http/pprof/pprof.htm">pprof.go</a>
			
			</span>
			</p>
		
	
		
		
		
			
			
			<h2 id="Cmdline">func <a href="src/pkg/net/http/pprof/pprof.htm#L51">Cmdline</a></h2>
			<pre>func Cmdline(w http.ResponseWriter, r *http.Request)</pre>
			<p>
Cmdline responds with the running program&#39;s
command line, with arguments separated by NUL bytes.
The package initialization registers it as /debug/pprof/cmdline.
</p>

			
		
			
			
			<h2 id="Handler">func <a href="src/pkg/net/http/pprof/pprof.htm#L129">Handler</a></h2>
			<pre>func Handler(name string) http.Handler</pre>
			<p>
Handler returns an HTTP handler that serves the named profile.
</p>

			
		
			
			
			<h2 id="Index">func <a href="src/pkg/net/http/pprof/pprof.htm#L152">Index</a></h2>
			<pre>func Index(w http.ResponseWriter, r *http.Request)</pre>
			<p>
Index responds with the pprof-formatted profile named by the request.
For example, &#34;/debug/pprof/heap&#34; serves the &#34;heap&#34; profile.
Index responds to a request for &#34;/debug/pprof/&#34; with an HTML page
listing the available profiles.
</p>

			
		
			
			
			<h2 id="Profile">func <a href="src/pkg/net/http/pprof/pprof.htm#L58">Profile</a></h2>
			<pre>func Profile(w http.ResponseWriter, r *http.Request)</pre>
			<p>
Profile responds with the pprof-formatted cpu profile.
The package initialization registers it as /debug/pprof/profile.
</p>

			
		
			
			
			<h2 id="Symbol">func <a href="src/pkg/net/http/pprof/pprof.htm#L83">Symbol</a></h2>
			<pre>func Symbol(w http.ResponseWriter, r *http.Request)</pre>
			<p>
Symbol looks up the program counters listed in the request,
responding with a table mapping program counters to function names.
The package initialization registers it as /debug/pprof/symbol.
</p>

			
		
		
		</div>
	

	









</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>
