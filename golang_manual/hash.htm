
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>hash - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="../../doc/style.css">
<script type="text/javascript" src="../../doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Package hash</h1>




<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->

	
		<div id="short-nav">
			<dl>
			<dd><code>import "hash"</code></dd>
			</dl>
			<dl>
			<dd><a href="#overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#index">Index</a></dd>
			
			
				<dd><a href="#subdirectories">Subdirectories</a></dd>
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ?</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ?</h2>
				<p>
Package hash provides interfaces for hash functions.
</p>

			</div>
		</div>
		
	
		<h2 id="index">Index</h2>
		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
		<div id="manual-nav">
			<dl>
			
			
			
			
				
				<dd><a href="#Hash">type Hash</a></dd>
				
				
			
				
				<dd><a href="#Hash32">type Hash32</a></dd>
				
				
			
				
				<dd><a href="#Hash64">type Hash64</a></dd>
				
				
			
			
		</dl>

		

		
			<h4>Package files</h4>
			<p>
			<span style="font-size:90%">
			
				<a href="src/pkg/hash/hash.htm">hash.go</a>
			
			</span>
			</p>
		
	
		
		
		
		
			
			
			<h2 id="Hash">type <a href="src/pkg/hash/hash.htm#L1">Hash</a></h2>
			<pre>type Hash interface {
    <span class="comment">// Write adds more data to the running hash.</span>
    <span class="comment">// It never returns an error.</span>
    io.Writer

    <span class="comment">// Sum appends the current hash to b and returns the resulting slice.</span>
    <span class="comment">// It does not change the underlying hash state.</span>
    Sum(b []byte) []byte

    <span class="comment">// Reset resets the hash to one with zero bytes written.</span>
    Reset()

    <span class="comment">// Size returns the number of bytes Sum will return.</span>
    Size() int

    <span class="comment">// BlockSize returns the hash&#39;s underlying block size.</span>
    <span class="comment">// The Write method must be able to accept any amount</span>
    <span class="comment">// of data, but it may operate more efficiently if all writes</span>
    <span class="comment">// are a multiple of the block size.</span>
    BlockSize() int
}</pre>
			<p>
Hash is the common interface implemented by all hash functions.
</p>


			

			

			

			

			
		
			
			
			<h2 id="Hash32">type <a href="src/pkg/hash/hash.htm#L24">Hash32</a></h2>
			<pre>type Hash32 interface {
    Hash
    Sum32() uint32
}</pre>
			<p>
Hash32 is the common interface implemented by all 32-bit hash functions.
</p>


			

			

			

			

			
		
			
			
			<h2 id="Hash64">type <a href="src/pkg/hash/hash.htm#L30">Hash64</a></h2>
			<pre>type Hash64 interface {
    Hash
    Sum64() uint64
}</pre>
			<p>
Hash64 is the common interface implemented by all 64-bit hash functions.
</p>


			

			

			

			

			
		
		</div>
	

	







	
	
		<h2 id="subdirectories">Subdirectories</h2>
	
	<table class="dir">
	<tr>
	<th>Name</th>
	<th>&nbsp;&nbsp;&nbsp;&nbsp;</th>
	<th style="text-align: left; width: auto">Synopsis</th>
	</tr>
	
			<tr>
			<td class="name"><a href="hash_adler32.htm">adler32</a></td>
			<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
			<td style="width: auto">Package adler32 implements the Adler-32 checksum.</td>
			</tr>
		
	
		
			<tr>
			<td class="name"><a href="hash_crc32.htm">crc32</a></td>
			<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
			<td style="width: auto">Package crc32 implements the 32-bit cyclic redundancy check, or CRC-32, checksum.</td>
			</tr>
		
	
		
			<tr>
			<td class="name"><a href="hash_crc64.htm">crc64</a></td>
			<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
			<td style="width: auto">Package crc64 implements the 64-bit cyclic redundancy check, or CRC-64, checksum.</td>
			</tr>
		
	
		
			<tr>
			<td class="name"><a href="hash_fnv.htm">fnv</a></td>
			<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
			<td style="width: auto">Package fnv implements FNV-1 and FNV-1a, non-cryptographic hash functions created by Glenn Fowler, Landon Curt Noll, and Phong Vo.</td>
			</tr>
		
	
	</table>
	



</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>
