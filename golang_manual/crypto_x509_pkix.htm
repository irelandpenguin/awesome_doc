
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <title>pkix - The Go Programming Language</title>

<link type="text/css" rel="stylesheet" href="../../doc/style.css">
<script type="text/javascript" src="../../doc/godocs.js"></script>

<link rel="search" type="application/opensearchdescription+xml" title="godoc" href="/opensearch.xml" />

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(["_setAccount", "UA-11222381-2"]);
_gaq.push(["_trackPageview"]);
</script>
</head>
<body>

<div id="page" class="wide">


  <div id="plusone"><g:plusone size="small" annotation="none"></g:plusone></div>
  <h1>Package pkix</h1>




<div id="nav"></div>


<!--
	Copyright 2009 The Go Authors. All rights reserved.
	Use of this source code is governed by a BSD-style
	license that can be found in the LICENSE file.
-->

	
		<div id="short-nav">
			<dl>
			<dd><code>import "crypto/x509/pkix"</code></dd>
			</dl>
			<dl>
			<dd><a href="#overview" class="overviewLink">Overview</a></dd>
			<dd><a href="#index">Index</a></dd>
			
			
			</dl>
		</div>
		<!-- The package's Name is printed as title by the top-level template -->
		<div id="overview" class="toggleVisible">
			<div class="collapsed">
				<h2 class="toggleButton" title="Click to show Overview section">Overview ?</h2>
			</div>
			<div class="expanded">
				<h2 class="toggleButton" title="Click to hide Overview section">Overview ?</h2>
				<p>
Package pkix contains shared, low level structures used for ASN.1 parsing
and serialization of X.509 certificates, CRL and OCSP.
</p>

			</div>
		</div>
		
	
		<h2 id="index">Index</h2>
		<!-- Table of contents for API; must be named manual-nav to turn off auto nav. -->
		<div id="manual-nav">
			<dl>
			
			
			
			
				
				<dd><a href="#AlgorithmIdentifier">type AlgorithmIdentifier</a></dd>
				
				
			
				
				<dd><a href="#AttributeTypeAndValue">type AttributeTypeAndValue</a></dd>
				
				
			
				
				<dd><a href="#CertificateList">type CertificateList</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#CertificateList.HasExpired">func (certList *CertificateList) HasExpired(now time.Time) bool</a></dd>
				
			
				
				<dd><a href="#Extension">type Extension</a></dd>
				
				
			
				
				<dd><a href="#Name">type Name</a></dd>
				
				
					
					<dd>&nbsp; &nbsp; <a href="#Name.FillFromRDNSequence">func (n *Name) FillFromRDNSequence(rdns *RDNSequence)</a></dd>
				
					
					<dd>&nbsp; &nbsp; <a href="#Name.ToRDNSequence">func (n Name) ToRDNSequence() (ret RDNSequence)</a></dd>
				
			
				
				<dd><a href="#RDNSequence">type RDNSequence</a></dd>
				
				
			
				
				<dd><a href="#RelativeDistinguishedNameSET">type RelativeDistinguishedNameSET</a></dd>
				
				
			
				
				<dd><a href="#RevokedCertificate">type RevokedCertificate</a></dd>
				
				
			
				
				<dd><a href="#TBSCertificateList">type TBSCertificateList</a></dd>
				
				
			
			
		</dl>

		

		
			<h4>Package files</h4>
			<p>
			<span style="font-size:90%">
			
				<a href="src/pkg/crypto/x509/pkix/pkix.htm">pkix.go</a>
			
			</span>
			</p>
		
	
		
		
		
		
			
			
			<h2 id="AlgorithmIdentifier">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L7">AlgorithmIdentifier</a></h2>
			<pre>type AlgorithmIdentifier struct {
    Algorithm  asn1.ObjectIdentifier
    Parameters asn1.RawValue `asn1:&#34;optional&#34;`
}</pre>
			<p>
AlgorithmIdentifier represents the ASN.1 structure of the same name. See RFC
5280, section 4.1.1.2.
</p>


			

			

			

			

			
		
			
			
			<h2 id="AttributeTypeAndValue">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L18">AttributeTypeAndValue</a></h2>
			<pre>type AttributeTypeAndValue struct {
    Type  asn1.ObjectIdentifier
    Value interface{}
}</pre>
			<p>
AttributeTypeAndValue mirrors the ASN.1 structure of the same name in
<a href="http://tools.ietf.org/html/rfc5280#section-4.1.2.4">http://tools.ietf.org/html/rfc5280#section-4.1.2.4</a>
</p>


			

			

			

			

			
		
			
			
			<h2 id="CertificateList">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L131">CertificateList</a></h2>
			<pre>type CertificateList struct {
    TBSCertList        TBSCertificateList
    SignatureAlgorithm AlgorithmIdentifier
    SignatureValue     asn1.BitString
}</pre>
			<p>
CertificateList represents the ASN.1 structure of the same name. See RFC
5280, section 5.1. Use Certificate.CheckCRLSignature to verify the
signature.
</p>


			

			

			

			

			
				
				<h3 id="CertificateList.HasExpired">func (*CertificateList) <a href="src/pkg/crypto/x509/pkix/pkix.htm#L138">HasExpired</a></h3>
				<pre>func (certList *CertificateList) HasExpired(now time.Time) bool</pre>
				<p>
HasExpired returns true iff now is past the expiry time of certList.
</p>

				
				
			
		
			
			
			<h2 id="Extension">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L25">Extension</a></h2>
			<pre>type Extension struct {
    Id       asn1.ObjectIdentifier
    Critical bool `asn1:&#34;optional&#34;`
    Value    []byte
}</pre>
			<p>
Extension represents the ASN.1 structure of the same name. See RFC
5280, section 4.2.
</p>


			

			

			

			

			
		
			
			
			<h2 id="Name">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L33">Name</a></h2>
			<pre>type Name struct {
    Country, Organization, OrganizationalUnit []string
    Locality, Province                        []string
    StreetAddress, PostalCode                 []string
    SerialNumber, CommonName                  string

    Names []AttributeTypeAndValue
}</pre>
			<p>
Name represents an X.509 distinguished name. This only includes the common
elements of a DN.  Additional elements in the name are ignored.
</p>


			

			

			

			

			
				
				<h3 id="Name.FillFromRDNSequence">func (*Name) <a href="src/pkg/crypto/x509/pkix/pkix.htm#L42">FillFromRDNSequence</a></h3>
				<pre>func (n *Name) FillFromRDNSequence(rdns *RDNSequence)</pre>
				
				
				
			
				
				<h3 id="Name.ToRDNSequence">func (Name) <a href="src/pkg/crypto/x509/pkix/pkix.htm#L110">ToRDNSequence</a></h3>
				<pre>func (n Name) ToRDNSequence() (ret RDNSequence)</pre>
				
				
				
			
		
			
			
			<h2 id="RDNSequence">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L12">RDNSequence</a></h2>
			<pre>type RDNSequence []RelativeDistinguishedNameSET</pre>
			

			

			

			

			

			
		
			
			
			<h2 id="RelativeDistinguishedNameSET">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L14">RelativeDistinguishedNameSET</a></h2>
			<pre>type RelativeDistinguishedNameSET []AttributeTypeAndValue</pre>
			

			

			

			

			

			
		
			
			
			<h2 id="RevokedCertificate">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L157">RevokedCertificate</a></h2>
			<pre>type RevokedCertificate struct {
    SerialNumber   *big.Int
    RevocationTime time.Time
    Extensions     []Extension `asn1:&#34;optional&#34;`
}</pre>
			<p>
RevokedCertificate represents the ASN.1 structure of the same name. See RFC
5280, section 5.1.
</p>


			

			

			

			

			
		
			
			
			<h2 id="TBSCertificateList">type <a href="src/pkg/crypto/x509/pkix/pkix.htm#L144">TBSCertificateList</a></h2>
			<pre>type TBSCertificateList struct {
    Raw                 asn1.RawContent
    Version             int `asn1:&#34;optional,default:2&#34;`
    Signature           AlgorithmIdentifier
    Issuer              RDNSequence
    ThisUpdate          time.Time
    NextUpdate          time.Time
    RevokedCertificates []RevokedCertificate `asn1:&#34;optional&#34;`
    Extensions          []Extension          `asn1:&#34;tag:0,optional,explicit&#34;`
}</pre>
			<p>
TBSCertificateList represents the ASN.1 structure of the same name. See RFC
5280, section 5.1.
</p>


			

			

			

			

			
		
		</div>
	

	









</div>

<div id="footer">
Build version go1.0.1.<br>
Except as <a href="http://code.google.com/policies.html#restrictions">noted</a>,
the content of this page is licensed under the
Creative Commons Attribution 3.0 License,
and code is licensed under a <a href="/LICENSE">BSD license</a>.<br>
<a href="/doc/tos.html">Terms of Service</a> | 
<a href="http://www.google.com/intl/en/privacy/privacy-policy.html">Privacy Policy</a>
</div>

<script type="text/javascript">
(function() {
  var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;
  ga.src = ("https:" == document.location.protocol ? "https://ssl" : "http://www") + ".google-analytics.com/ga.js";
  var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
</body>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</html>
