<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<link rel="dns-prefetch" href="//apps.bdimg.com">
<meta http-equiv="X-UA-Compatible" content="IE=11,IE=10,IE=9,IE=8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
<meta name="apple-mobile-web-app-title" content="程序员一代码搬运工">
<meta http-equiv="Cache-Control" content="no-siteapp">
<title>7.2 Java线程模型-程序员一代码搬运工</title>
<link rel='dns-prefetch' href='//www.yq1012.com' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel='stylesheet' id='wp-block-library-css'  href='http://www.yq1012.com/wp-includes/css/dist/block-library/style.min.css?ver=5.2.9' type='text/css' media='all' />
<link rel='stylesheet' id='_bootstrap-css'  href='http://www.yq1012.com/wp-content/themes/duxnew/css/bootstrap.min.css?ver=6.1' type='text/css' media='all' />
<link rel='stylesheet' id='_fontawesome-css'  href='http://www.yq1012.com/wp-content/themes/duxnew/css/font-awesome.min.css?ver=6.1' type='text/css' media='all' />
<link rel='stylesheet' id='_main-css'  href='http://www.yq1012.com/wp-content/themes/duxnew/css/main.css?ver=6.1' type='text/css' media='all' />
<link rel='stylesheet' id='enlighterjs-css'  href='http://www.yq1012.com/wp-content/plugins/enlighter/cache/enlighterjs.min.css?ver=0A0B0C' type='text/css' media='all' />
<script type='text/javascript' src='http://www.yq1012.com/wp-content/themes/duxnew/js/libs/jquery.min.js?ver=6.1'></script>
<link rel='https://api.w.org/' href='http://www.yq1012.com/wp-json/' />
<link rel="canonical" href="http://www.yq1012.com/threadmodel" />
<link rel='shortlink' href='http://www.yq1012.com/?p=3584' />
<link rel="alternate" type="application/json+oembed" href="http://www.yq1012.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.yq1012.com%2Fthreadmodel" />
<link rel="alternate" type="text/xml+oembed" href="http://www.yq1012.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.yq1012.com%2Fthreadmodel&#038;format=xml" />
<meta name="description" content="Java运行系统在很多方面依赖于线程，所有的类库设计都考虑到多线程。实际上，Java使用线程来使整个环境异步。这有利于通过防止CPU循环的浪费来减少无效部分。为更好的理解多线程环境的优势可以将它与它的对照物相比较。单线程系统的处理途径是使用一种叫作轮询的事件循环方法。在该模型中，单线程控制在一无限循环中运行，轮询一个事件序列来决定下一步做什么。一旦轮询装置返回信号表明，已准备好读取网络文件，事件循">
<link rel="shortcut icon" href="http://www.yq1012.com/favicon.ico">
<!--[if lt IE 9]><script src="http://www.yq1012.com/wp-content/themes/duxnew/js/libs/html5.min.js"></script><![endif]-->
</head>
<body class="page-template page-template-pages page-template-java page-template-pagesjava-php page page-id-3584 m-excerpt-cat comment-open site-layout-2 text-justify-on m-sidebar">
<header class="header">
	<div class="container">
		<div class="logo"><a href="http://www.yq1012.com" title="程序员一代码搬运工
                   【Java学习心得和Java学习技术个人总结】"><img src="http://www.yq1012.com/wp-content/uploads/2015/09/logo.png" alt="程序员一代码搬运工
                   【Java学习心得和Java学习技术个人总结】">程序员一代码搬运工</a></div>		<div class="brand">程序员一代码搬运工<br>                   【Java学习心得和Java学习技术个人总结】</div>		<ul class="site-nav site-navbar">
			<li id="menu-item-7" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-7"><a title="java学习" href="http://www.yq1012.com/">java首页</a></li>
<li id="menu-item-3736" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3736"><a href="http://www.yq1012.com/javalanguage">java手册</a></li>
<li id="menu-item-16" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-16"><a title="javappt" href="http://www.yq1012.com/java/jichu">java基础</a>
<ul class="sub-menu">
	<li id="menu-item-701" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-701"><a href="http://www.yq1012.com/java/myssh">java三层</a></li>
	<li id="menu-item-19" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-19"><a title="wenti" href="http://www.yq1012.com/java/question">java问题</a></li>
	<li id="menu-item-108" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-108"><a href="http://www.yq1012.com/java/shuju">java数据</a></li>
</ul>
</li>
<li id="menu-item-4744" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-4744"><a href="http://www.yq1012.com/java/mianshizhuanti">面试专题</a></li>
<li id="menu-item-3735" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3735"><a href="http://tool.yq1012.com">java工具</a></li>
<li id="menu-item-129" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-129"><a title="shizhan" href="http://www.yq1012.com/java/shizhan">java实战</a></li>
							<li class="navto-search"><a href="javascript:;" class="search-show active"><i class="fa fa-search"></i></a></li>
					</ul>
				<div class="topbar">
			<ul class="site-nav topmenu">
											</ul>
					</div>
						<i class="fa fa-bars m-icon-nav"></i>
			</div>
</header>
<div class="site-search">
	<div class="container">
		<form method="get" class="site-search-form" action="http://www.yq1012.com/" ><input class="search-input" name="s" type="text" placeholder="输入关键字" value=""><button class="search-btn" type="submit"><i class="fa fa-search"></i></button></form>	</div>
</div><section class="container container-page">
	<div class="pageside">
	<div class="pagemenus">
		<ul class="pagemenu">
			
<li class="page_item page-item-3459"><a href="http://www.yq1012.com/javalanguage">1.1 Java语言概述</a></li>
<li class="page_item page-item-3462"><a href="http://www.yq1012.com/jvm">1.2 Java虚拟机以及跨平台原理</a></li>
<li class="page_item page-item-3466"><a href="http://www.yq1012.com/fangxiang">1.3 Java的主要就业方向</a></li>
<li class="page_item page-item-3469"><a href="http://www.yq1012.com/version">1.4Java的不同版本：J2SE、J2EE、J2ME的区别</a></li>
<li class="page_item page-item-3471"><a href="http://www.yq1012.com/huanjing">1.5 Java开发环境搭建</a></li>
<li class="page_item page-item-3473"><a href="http://www.yq1012.com/helloworld">1.6 第一个Java程序示例</a></li>
<li class="page_item page-item-3475"><a href="http://www.yq1012.com/objectgainian">1.7 Java类和对象的概念</a></li>
<li class="page_item page-item-3478"><a href="http://www.yq1012.com/jdk">1.8 Java类库及其组织结构</a></li>
<li class="page_item page-item-3481"><a href="http://www.yq1012.com/import">1.9 Java import</a></li>
<li class="page_item page-item-3484"><a href="http://www.yq1012.com/numtype">2.1 Java数据类型以及变量的定义</a></li>
<li class="page_item page-item-3486"><a href="http://www.yq1012.com/zhuanhuan">2.2 Java数据类型转换</a></li>
<li class="page_item page-item-3489"><a href="http://www.yq1012.com/yunsuanfu">2.3 Java运算符</a></li>
<li class="page_item page-item-3491"><a href="http://www.yq1012.com/liucheng">2.4 Java流程控制</a></li>
<li class="page_item page-item-3493"><a href="http://www.yq1012.com/array">2.5 Java数组的定义和使用</a></li>
<li class="page_item page-item-3495"><a href="http://www.yq1012.com/string">2.6 Java字符串(String)</a></li>
<li class="page_item page-item-3497"><a href="http://www.yq1012.com/stringbuffer">2.7 Java StringBuffer与StringBuider</a></li>
<li class="page_item page-item-3499"><a href="http://www.yq1012.com/faction">2.8 强调一下编程风格</a></li>
<li class="page_item page-item-3501"><a href="http://www.yq1012.com/class">3.1 Java类的定义及其实例化</a></li>
<li class="page_item page-item-3503"><a href="http://www.yq1012.com/public">3.2 Java访问修饰符</a></li>
<li class="page_item page-item-3505"><a href="http://www.yq1012.com/var">3.3 Java变量的作用域</a></li>
<li class="page_item page-item-3507"><a href="http://www.yq1012.com/keyword">3.4 Java this关键字详解</a></li>
<li class="page_item page-item-3509"><a href="http://www.yq1012.com/load">3.5 Java方法重载</a></li>
<li class="page_item page-item-3511"><a href="http://www.yq1012.com/order">3.6 Java类的基本运行顺序</a></li>
<li class="page_item page-item-3513"><a href="http://www.yq1012.com/packing">3.7 Java包装类、拆箱和装箱详解</a></li>
<li class="page_item page-item-3516"><a href="http://www.yq1012.com/package">3.8 再谈Java包</a></li>
<li class="page_item page-item-3518"><a href="http://www.yq1012.com/rule">3.9 源文件的声明规则</a></li>
<li class="page_item page-item-3520"><a href="http://www.yq1012.com/extends">4.1 继承的概念与实现</a></li>
<li class="page_item page-item-3522"><a href="http://www.yq1012.com/super">4.2 Java super关键字</a></li>
<li class="page_item page-item-3524"><a href="http://www.yq1012.com/overload">4.3 继承中的方法的覆盖和重载</a></li>
<li class="page_item page-item-3527"><a href="http://www.yq1012.com/duotai">4.4 多态和动态绑定</a></li>
<li class="page_item page-item-3529"><a href="http://www.yq1012.com/instanceof">4.5 instanceof 运算符</a></li>
<li class="page_item page-item-3531"><a href="http://www.yq1012.com/duotaizhuanhuan">4.6 多态对象的类型转换</a></li>
<li class="page_item page-item-3533"><a href="http://www.yq1012.com/static">4.7 Java static关键字</a></li>
<li class="page_item page-item-3535"><a href="http://www.yq1012.com/final">4.8 Java final关键字</a></li>
<li class="page_item page-item-3537"><a href="http://www.yq1012.com/object">4.9 Java Object类</a></li>
<li class="page_item page-item-3539"><a href="http://www.yq1012.com/internalclass">5.1 Java内部类及其实例化</a></li>
<li class="page_item page-item-3541"><a href="http://www.yq1012.com/internaltype">5.2 内部类的分类</a></li>
<li class="page_item page-item-3543"><a href="http://www.yq1012.com/abstractclass">5.3 抽象类的概念和使用</a></li>
<li class="page_item page-item-3545"><a href="http://www.yq1012.com/interface">5.4 接口的概念和使用</a></li>
<li class="page_item page-item-3547"><a href="http://www.yq1012.com/interfaceabstract">5.5 接口和抽象类的区别</a></li>
<li class="page_item page-item-3549"><a href="http://www.yq1012.com/generic">5.6 Java 泛型</a></li>
<li class="page_item page-item-3551"><a href="http://www.yq1012.com/genericparam">5.7 泛型通配符和类型参数的范围</a></li>
<li class="page_item page-item-3554"><a href="http://www.yq1012.com/exception">6.1 异常处理基础</a></li>
<li class="page_item page-item-3576"><a href="http://www.yq1012.com/inexception">6.10 Java的内置异常</a></li>
<li class="page_item page-item-3578"><a href="http://www.yq1012.com/newexception">6.11 创建自己的异常子类</a></li>
<li class="page_item page-item-3580"><a href="http://www.yq1012.com/assert">6.12 断言</a></li>
<li class="page_item page-item-3556"><a href="http://www.yq1012.com/exceptiontype">6.2 异常类型</a></li>
<li class="page_item page-item-3558"><a href="http://www.yq1012.com/try">6.3 未被捕获的异常</a></li>
<li class="page_item page-item-3560"><a href="http://www.yq1012.com/catch">6.4 try和catch的使用</a></li>
<li class="page_item page-item-3562"><a href="http://www.yq1012.com/catchmany">6.5 多重catch语句的使用</a></li>
<li class="page_item page-item-3564"><a href="http://www.yq1012.com/trymany">6.6 try语句的嵌套</a></li>
<li class="page_item page-item-3570"><a href="http://www.yq1012.com/throw">6.7 throw：异常的抛出</a></li>
<li class="page_item page-item-3572"><a href="http://www.yq1012.com/throws">6.8 throws子句</a></li>
<li class="page_item page-item-3574"><a href="http://www.yq1012.com/finally">6.9 finally块</a></li>
<li class="page_item page-item-3582"><a href="http://www.yq1012.com/thread">7.1 线程的概念</a></li>
<li class="page_item page-item-3600"><a href="http://www.yq1012.com/threaddeadlock">7.10 线程死锁</a></li>
<li class="page_item page-item-3602"><a href="http://www.yq1012.com/threadrestart">7.11 线程的挂起、恢复和终止</a></li>
<li class="page_item page-item-3584 current_page_item"><a href="http://www.yq1012.com/threadmodel" aria-current="page">7.2 Java线程模型</a></li>
<li class="page_item page-item-3586"><a href="http://www.yq1012.com/threadmain">7.3 主线程</a></li>
<li class="page_item page-item-3588"><a href="http://www.yq1012.com/threadnew">7.4 创建线程</a></li>
<li class="page_item page-item-3590"><a href="http://www.yq1012.com/threadnewmany">7.5 创建多线程</a></li>
<li class="page_item page-item-3592"><a href="http://www.yq1012.com/threadutil">7.6 isAlive()和join()的使用</a></li>
<li class="page_item page-item-3594"><a href="http://www.yq1012.com/threadpri">7.7 线程优先级</a></li>
<li class="page_item page-item-3596"><a href="http://www.yq1012.com/threadsyc">7.8 线程同步</a></li>
<li class="page_item page-item-3598"><a href="http://www.yq1012.com/threadtx">7.9 线程间通信</a></li>
<li class="page_item page-item-3604"><a href="http://www.yq1012.com/file">8.1 输入输出基本概念</a></li>
<li class="page_item page-item-3606"><a href="http://www.yq1012.com/inputstram">8.2 面向字符的输入流</a></li>
<li class="page_item page-item-3608"><a href="http://www.yq1012.com/outputstream">8.3 面向字符的输出流</a></li>
<li class="page_item page-item-3610"><a href="http://www.yq1012.com/inoutstream">8.4 面向字节的输入输出流</a></li>
<li class="page_item page-item-3612"><a href="http://www.yq1012.com/fileinputstream">8.5 面向字节流的应用</a></li>
<li class="page_item page-item-3614"><a href="http://www.yq1012.com/fileandcategory">8.6 文件与目录管理</a></li>
<li class="page_item page-item-3616"><a href="http://www.yq1012.com/readandwrite">8.7 文件的随机读写</a></li>
<li class="page_item page-item-3618"><a href="http://www.yq1012.com/gzip">8.8 文件的压缩处理</a></li>
<li class="page_item page-item-3620"><a href="http://www.yq1012.com/javautil">9.1 Java基础类库</a></li>
<li class="page_item page-item-3622"><a href="http://www.yq1012.com/javalang">9.2 Java语言包(java.lang)简介</a></li>
<li class="page_item page-item-3625"><a href="http://www.yq1012.com/dateutil">9.3 日期和时间类</a></li>
<li class="page_item page-item-3627"><a href="http://www.yq1012.com/hashtable">9.4 哈希表及其应用</a></li>
<li class="page_item page-item-3001"><a href="http://www.yq1012.com/javashuji">Java书籍推荐</a></li>
<li class="page_item page-item-3905"><a href="http://www.yq1012.com/singleton">java单例模式</a></li>
<li class="page_item page-item-3911"><a href="http://www.yq1012.com/mianshi_chengfabiao">java打印乘法表</a></li>
<li class="page_item page-item-3917"><a href="http://www.yq1012.com/mianshi_shuixianhua">java打印水仙花</a></li>
<li class="page_item page-item-3907"><a href="http://www.yq1012.com/mianshi_lingxing">java打印菱形</a></li>
<li class="page_item page-item-3920"><a href="http://www.yq1012.com/mainshi_paixu">java排序打印</a></li>
<li class="page_item page-item-3946"><a href="http://www.yq1012.com/mianshi_keguanti">java面试规划客观题</a></li>
<li class="page_item page-item-3943"><a href="http://www.yq1012.com/mianshi_jsp">jsp常见面试点</a></li>
<li class="page_item page-item-3348"><a href="http://www.yq1012.com/linuxshuji">Linux书籍推荐</a></li>
<li class="page_item page-item-3901"><a href="http://www.yq1012.com/mianshi_listmap">list和map</a></li>
<li class="page_item page-item-3892"><a href="http://www.yq1012.com/mianshi_overload">Overload 和 和 Override 的区 的区别</a></li>
<li class="page_item page-item-4071"><a href="http://www.yq1012.com/buy_qq">QQ插件在线演示视频页面</a></li>
<li class="page_item page-item-3940"><a href="http://www.yq1012.com/mianshi_request">Request 对象的主要方法</a></li>
<li class="page_item page-item-3938"><a href="http://www.yq1012.com/mianshi_servlet">servlet面试要点</a></li>
<li class="page_item page-item-3359"><a href="http://www.yq1012.com/jiazhiguan">价值观</a></li>
<li class="page_item page-item-3888"><a href="http://www.yq1012.com/mianshi_4">作用域 public ，private ，protected</a></li>
<li class="page_item page-item-3350"><a href="http://www.yq1012.com/about">关于我们</a></li>
<li class="page_item page-item-2059"><a href="http://www.yq1012.com/hezuo">商务合作</a></li>
<li class="page_item page-item-3896"><a href="http://www.yq1012.com/mianshi_datatype">基本的数据类型</a></li>
<li class="page_item page-item-3355"><a href="http://www.yq1012.com/shenming">版权申明</a></li>
<li class="page_item page-item-3352"><a href="http://www.yq1012.com/liuyanban">留言版</a></li>
<li class="page_item page-item-3361"><a href="http://www.yq1012.com/licheng">网站历程</a></li>
<li class="page_item page-item-3357"><a href="http://www.yq1012.com/lianxi">联系我们</a></li>
<li class="page_item page-item-3875"><a href="http://www.yq1012.com/mianshi_1">说说&#038;和&#038;&#038;的区别</a></li>
<li class="page_item page-item-3883"><a href="http://www.yq1012.com/mianshi_3">静态变量和实例变量的区别</a></li>

		</ul>
	</div>
</div>	<div class="content">
				<header class="article-header">
			<h1 class="article-title"><a href="http://www.yq1012.com/threadmodel">7.2 Java线程模型</a></h1>
		</header>
		<article class="article-content">
			<div id="art-body">Java运行系统在很多方面依赖于线程，所有的类库设计都考虑到多线程。实际上，Java使用线程来使整个环境异步。这有利于通过防止CPU循环的浪费来减少无效部分。为更好的理解多线程环境的优势可以将它与它的对照物相比较。单线程系统的处理途径是使用一种叫作轮询的事件循环方法。在该模型中，单线程控制在一无限循环中运行，轮询一个事件序列来决定下一步做什么。一旦轮询装置返回信号表明，已准备好读取网络文件，事件循环调度控制管理到适当的事件处理程序。直到事件处理程序返回，系统中没有其他事件发生。这就浪费了CPU时间。这导致了程序的一部分独占了系统，阻止了其他事件的执行。总的来说，单线程环境，当一个线程因为等待资源时阻塞（block，挂起执行），整个程序停止运行。</p>
<p>Java多线程的优点在于取消了主循环/轮询机制。一个线程可以暂停而不影响程序的其他部分。例如，当一个线程从网络读取数据或等待用户输入时产生的空闲时间可以被利用到其他地方。多线程允许活的循环在每一帧间隙中沉睡一秒而不暂停整个系统。在Java程序中出现线程阻塞，仅有一个线程暂停，其他线程继续运行。</p>
<p>线程存在于好几种状态。线程可以正在运行（running）。只要获得CPU时间它就可以运行。运行的线程可以被挂起（suspend），并临时中断它的执行。一个挂起的线程可以被恢复（resume，允许它从停止的地方继续运行。一个线程可以在等待资源时被阻塞（block）。</p>
<p>在任何时候，线程可以终止（terminate），这立即中断了它的运行。一旦终止，线程不能被恢复。</p>
<h2>线程优先级</h2>
<p>Java给每个线程安排优先级以决定与其他线程比较时该如何对待该线程。线程优先级是详细说明线程间优先关系的整数。作为绝对值，优先级是毫无意义的；当只有一个线程时，优先级高的线程并不比优先权低的线程运行的快。相反，线程的优先级是用来决定何时从一个运行的线程切换到另一个。这叫“上下文转换”(context switch)。决定上下文转换发生的规则很简单：</p>
<ul>
<li>线程可以自动放弃控制。在I/O未决定的情况下，睡眠或阻塞由明确的让步来完成。在这种假定下，所有其他的线程被检测，准备运行的最高优先级线程被授予CPU。</li>
<li>线程可以被高优先级的线程抢占。在这种情况下，低优先级线程不主动放弃，处理器只是被先占——无论它正在干什么——处理器被高优先级的线程占据。基本上，一旦高优先级线程要运行，它就执行。这叫做有优先权的多任务处理。</li>
</ul>
<p>当两个相同优先级的线程竞争CPU周期时，情形有一点复杂。对于Windows98这样的操作系统，等优先级的线程是在循环模式下自动划分时间的。对于其他操作系统，例如Solaris 2.x，等优先级线程相对于它们的对等体自动放弃。如果不这样，其他的线程就不会运行。</p>
<p>警告：不同的操作系统下等优先级线程的上下文转换可能会产生错误。</p>
<h2>同步性</h2>
<p>因为多线程在你的程序中引入了一个异步行为，所以在你需要的时候必须有加强同步性的方法。举例来说，如果你希望两个线程相互通信并共享一个复杂的数据结构，例如链表序列，你需要某些方法来确保它们没有相互冲突。也就是说，你必须防止一个线程写入数据而另一个线程正在读取链表中的数据。为此目的，Java在进程间同步性的老模式基础上实行了另一种方法：管程（monitor）。管程是一种由C.A.R.Hoare首先定义的控制机制。</p>
<p>你可以把管程想象成一个仅控制一个线程的小盒子。一旦线程进入管程，所有线程必须等待直到该线程退出了管程。用这种方法，管程可以用来防止共享的资源被多个线程操纵。</p>
<p>很多多线程系统把管程作为程序必须明确的引用和操作的对象。Java提供一个清晰的解决方案。没有“Monitor”类；相反，每个对象都拥有自己的隐式管程，当对象的同步方法被调用时管程自动载入。一旦一个线程包含在一个同步方法中，没有其他线程可以调用相同对象的同步方法。这就使你可以编写非常清晰和简洁的多线程代码，因为同步支持是语言内置的。</p>
<h2>消息传递</h2>
<p>在你把程序分成若干线程后，你就要定义各线程之间的联系。用大多数其他语言规划时，你必须依赖于操作系统来确立线程间通信。这样当然增加花费。然而，Java提供了多线程间谈话清洁的、低成本的途径——通过调用所有对象都有的预先确定的方法。Java的消息传递系统允许一个线程进入一个对象的一个同步方法，然后在那里等待，直到其他线程明确通知它出来。</p>
<h2>Thread 类和Runnable 接口</h2>
<p>Java的多线程系统建立于Thread类，它的方法，它的共伴接口Runnable基础上。Thread类封装了线程的执行。既然你不能直接引用运行着的线程的状态，你要通过它的代理处理它，于是Thread 实例产生了。为创建一个新的线程，你的程序必须扩展Thread 或实现Runnable接口。</p>
<p>Thread类定义了好几种方法来帮助管理线程。本章用到的方法如表11-1所示：</p>
<table>
<caption>表 11-1 管理线程的方法</caption>
<tbody>
<tr>
<th>方法</th>
<th>意义</th>
</tr>
<tr>
<td>getName</td>
<td>获得线程名称</td>
</tr>
<tr>
<td>getPriority</td>
<td>获得线程优先级</td>
</tr>
<tr>
<td>jsAlive</td>
<td>判定线程是否仍在运行</td>
</tr>
<tr>
<td>join</td>
<td>等待一个线程终止</td>
</tr>
<tr>
<td>run</td>
<td>线程的入口点.</td>
</tr>
<tr>
<td>sleep</td>
<td>在一段时间内挂起线程</td>
</tr>
<tr>
<td>start</td>
<td>通过调用运行方法来启动线程</td>
</tr>
</tbody>
</table>
<p>到目前为止，本书所应用的例子都是用单线程的。本章剩余部分解释如何用Thread 和 Runnable 来创建、管理线程。让我们从所有Java程序都有的线程：主线程开始。</p>
</div>
<div id="ad-arc-bottom" class="clearfix"></div>
		</article>
						<p>&nbsp;</p>
			</div>
</section>

<footer class="footer">
	<div class="container">
						<p>&copy; 2021 <a href="http://www.yq1012.com">程序员一代码搬运工</a> &nbsp; 版权所有，保留一切权利！ <a href="http://www.beian.miit.gov.cn" title="工信部网站备案" rel="external nofollow" target="_blank">闽ICP备14003021号-1</a> 技术支持 <a href="http://www.yq1012.com/about" target="_blank">java学习</a> 
</p>
	</div>
</footer>


<div class="rollbar rollbar-rb"><ul><li><a target="_blank" href="http://wpa.qq.com/msgrd?v=3&uin=742275749&site=qq&menu=yes"><i class="fa fa-qq"></i><span>QQ咨询</span></a><h6>QQ咨询<i></i></h6></li><li class="rollbar-totop"><a href="javascript:(jsui.scrollTo());"><i class="fa fa-angle-up"></i><span>回顶</span></a><h6>回顶部<i></i></h6></li></ul></div>
<script>
window.jsui={
	www: 'http://www.yq1012.com',
	uri: 'http://www.yq1012.com/wp-content/themes/duxnew',
	ver: '6.1',
	roll: [],
	ajaxpager: '0',
	url_rp: 'http://www.yq1012.com/hezuo'
};
</script>
<script type='text/javascript' src='http://www.yq1012.com/wp-content/themes/duxnew/js/libs/bootstrap.min.js?ver=6.1'></script>
<script type='text/javascript' src='http://www.yq1012.com/wp-content/themes/duxnew/js/loader.js?ver=6.1'></script>
<script type='text/javascript' src='http://www.yq1012.com/wp-content/plugins/enlighter/cache/enlighterjs.min.js?ver=0A0B0C'></script>
<script type='text/javascript'>
!function(e,n){if("undefined"!=typeof EnlighterJS){var o={"selectors":{"block":"pre.EnlighterJSRAW","inline":"code.EnlighterJSRAW"},"options":{"indent":4,"ampersandCleanup":true,"linehover":true,"rawcodeDbclick":false,"textOverflow":"break","linenumbers":true,"theme":"enlighter","language":"generic","retainCssClasses":false,"collapse":false,"toolbarOuter":"","toolbarTop":"{BTN_RAW}{BTN_COPY}{BTN_WINDOW}{BTN_WEBSITE}","toolbarBottom":""}};(e.EnlighterJSINIT=function(){EnlighterJS.init(o.selectors.block,o.selectors.inline,o.options)})()}else{(n&&(n.error||n.log)||function(){})("Error: EnlighterJS resources not loaded yet!")}}(window,console);
</script>
<script type='text/javascript' src='http://www.yq1012.com/wp-includes/js/wp-embed.min.js?ver=5.2.9'></script>
</body>
</html>